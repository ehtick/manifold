{"version":3,"file":"worker-wrapper-BGbCUY5N.js","sources":["../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat2.js","../node_modules/gl-matrix/esm/mat2d.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec4.js","../node_modules/gl-matrix/esm/quat.js","../node_modules/gl-matrix/esm/quat2.js","../node_modules/gl-matrix/esm/vec2.js","../../manifold.js","../../lib/evaluate.js","../../node_modules/property-graph/dist/property-graph.modern.js","../../node_modules/@gltf-transform/core/dist/index.modern.js","../../node_modules/ktx-parse/dist/ktx-parse.modern.js","../../node_modules/@gltf-transform/extensions/dist/index.modern.js","../../node_modules/@jscadui/3mf-export/src/defMatrix.js","../../node_modules/@jscadui/3mf-export/src/matrix2str.js","../../node_modules/@jscadui/3mf-export/src/makeItem.js","../../node_modules/@jscadui/3mf-export/src/toDate3mf.js","../../node_modules/@jscadui/3mf-export/src/pushHeader.js","../../node_modules/@jscadui/3mf-export/src/pushObjectComponent.js","../../node_modules/@jscadui/3mf-export/src/pushObjectMesh.js","../../node_modules/@jscadui/3mf-export/src/staticFiles.js","../../node_modules/@jscadui/3mf-export/index.js","../../node_modules/fflate/esm/browser.js","../../node_modules/gl-matrix/esm/common.js","../../node_modules/gl-matrix/esm/mat3.js","../../node_modules/gl-matrix/esm/vec3.js","../../node_modules/gl-matrix/esm/vec4.js","../../node_modules/gl-matrix/esm/quat.js","../../lib/manifold-gltf.js","../../lib/gltf-io.js","../../lib/export.js","../worker.ts","../worker-wrapper.ts"],"sourcesContent":["/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== \"undefined\" ? Float32Array : Array;\nexport var RANDOM = Math.random;\nexport var ANGLE_ORDER = \"zyx\";\n\n/**\n * Symmetric round\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\n *\n * @param {Number} a value to round\n */\nexport function round(a) {\n  if (a >= 0) return Math.round(a);\n  return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\n}\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\nvar radian = 180 / Math.PI;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Convert Radian To Degree\n *\n * @param {Number} a Angle in Radians\n */\nexport function toDegree(a) {\n  return a * radian;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a          The first number to test.\n * @param {Number} b          The second number to test.\n * @param {Number} tolerance  Absolute or relative tolerance (default glMatrix.EPSILON)\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  var tolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return Math.abs(a - b) <= tolerance * Math.max(1, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2 | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n\n  // Calculate the determinant\n  var det = a0 * a3 - a2 * a1;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is necessary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var v0 = v[0],\n    v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3]);\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var aa = a[0],\n    ab = a[1],\n    ac = a[2],\n    ad = a[3];\n  var atx = a[4],\n    aty = a[5];\n  var det = aa * ad - ab * ac;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5];\n  var v0 = v[0],\n    v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5];\n  var v0 = v[0],\n    v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + 1);\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n      a02 = a[2],\n      a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3 | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b00 = b[0],\n    b01 = b[1],\n    b02 = b[2];\n  var b10 = b[3],\n    b11 = b[4],\n    b12 = b[5];\n  var b20 = b[6],\n    b21 = b[7],\n    b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    x = v[0],\n    y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  var x = v[0],\n    y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8]);\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7],\n    a8 = a[8];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n    var a12 = a[6],\n      a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4 | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n  out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n  out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n  out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n  out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n  out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n  out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n  out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n  out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n  out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n  out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n  out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n  out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n  out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n  out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n  out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n  out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b0 = a00 * a11 - a01 * a10;\n  var b1 = a00 * a12 - a02 * a10;\n  var b2 = a01 * a12 - a02 * a11;\n  var b3 = a20 * a31 - a21 * a30;\n  var b4 = a20 * a32 - a22 * a30;\n  var b5 = a21 * a32 - a22 * a31;\n  var b6 = a00 * b5 - a01 * b4 + a02 * b3;\n  var b7 = a10 * b5 - a11 * b4 + a12 * b3;\n  var b8 = a20 * b2 - a21 * b1 + a22 * b0;\n  var b9 = a30 * b2 - a31 * b1 + a32 * b0;\n\n  // Calculate the determinant\n  return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  var x = v[0],\n    y = v[1],\n    z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  var x = v[0],\n    y = v[1],\n    z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n    y = axis[1],\n    z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n    y = axis[1],\n    z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *     let quatMat = mat4.create();\n *     mat4.fromQuat(quatMat, quat);\n *     mat4.multiply(dest, dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion parameter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n  return out;\n}\n\n/**\n * Decomposes a transformation matrix into its rotation, translation\n * and scale components. Returns only the rotation component\n * @param  {quat} out_r Quaternion to receive the rotation component\n * @param  {vec3} out_t Vector to receive the translation vector\n * @param  {vec3} out_s Vector to receive the scaling factor\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @returns {quat} out_r\n */\nexport function decompose(out_r, out_t, out_s, mat) {\n  out_t[0] = mat[12];\n  out_t[1] = mat[13];\n  out_t[2] = mat[14];\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  var is1 = 1 / out_s[0];\n  var is2 = 1 / out_s[1];\n  var is3 = 1 / out_s[2];\n  var sm11 = m11 * is1;\n  var sm12 = m12 * is2;\n  var sm13 = m13 * is3;\n  var sm21 = m21 * is1;\n  var sm22 = m22 * is2;\n  var sm23 = m23 * is3;\n  var sm31 = m31 * is1;\n  var sm32 = m32 * is2;\n  var sm33 = m33 * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out_r[3] = 0.25 * S;\n    out_r[0] = (sm23 - sm32) / S;\n    out_r[1] = (sm31 - sm13) / S;\n    out_r[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out_r[3] = (sm23 - sm32) / S;\n    out_r[0] = 0.25 * S;\n    out_r[1] = (sm12 + sm21) / S;\n    out_r[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out_r[3] = (sm31 - sm13) / S;\n    out_r[0] = (sm12 + sm21) / S;\n    out_r[1] = 0.25 * S;\n    out_r[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out_r[3] = (sm12 - sm21) / S;\n    out_r[0] = (sm31 + sm13) / S;\n    out_r[1] = (sm23 + sm32) / S;\n    out_r[2] = 0.25 * S;\n  }\n  return out_r;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *     let quatMat = mat4.create();\n *     mat4.fromQuat(quatMat, quat);\n *     mat4.multiply(dest, dest, quatMat);\n *     mat4.scale(dest, dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *     mat4.translate(dest, dest, origin);\n *     let quatMat = mat4.create();\n *     mat4.fromQuat(quatMat, quat);\n *     mat4.multiply(dest, dest, quatMat);\n *     mat4.scale(dest, dest, scale)\n *     mat4.translate(dest, dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    var nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n  return out;\n}\n\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\nexport var perspective = perspectiveNO;\n\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    var nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\nexport var ortho = orthoNO;\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} target Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n    eyey = eye[1],\n    eyez = eye[2],\n    upx = up[0],\n    upy = up[1],\n    upz = up[2];\n  var z0 = eyex - target[0],\n    z1 = eyey - target[1],\n    z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n  var x0 = upy * z2 - upz * z1,\n    x1 = upz * z0 - upx * z2,\n    x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8] + a[9] * a[9] + a[10] * a[10] + a[11] * a[11] + a[12] * a[12] + a[13] * a[13] + a[14] * a[14] + a[15] * a[15]);\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  var a8 = a[8],\n    a9 = a[9],\n    a10 = a[10],\n    a11 = a[11];\n  var a12 = a[12],\n    a13 = a[13],\n    a14 = a[14],\n    a15 = a[15];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  var b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  var b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11];\n  var b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function slerp(out, a, b, t) {\n  var angle = Math.acos(Math.min(Math.max(dot(a, b), -1), 1));\n  var sinTotal = Math.sin(angle);\n  var ratioA = Math.sin((1 - t) * angle) / sinTotal;\n  var ratioB = Math.sin(t * angle) / sinTotal;\n  out[0] = ratioA * a[0] + ratioB * b[0];\n  out[1] = ratioA * a[1] + ratioB * b[1];\n  out[2] = ratioA * a[2] + ratioB * b[2];\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    bx = b[0],\n    by = b[1],\n    bz = b[2],\n    mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz)),\n    cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 3;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  out[3] = glMatrix.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} out the receiving vector\n * @param {ReadonlyVec4} u the first vector\n * @param {ReadonlyVec4} v the second vector\n * @param {ReadonlyVec4} w the third vector\n * @returns {vec4} result\n */\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n    B = v[0] * w[2] - v[2] * w[0],\n    C = v[0] * w[3] - v[3] * w[0],\n    D = v[1] * w[2] - v[2] * w[1],\n    E = v[1] * w[3] - v[3] * w[1],\n    F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  var rand;\n  rand = glMatrix.RANDOM();\n  v1 = rand * 2 - 1;\n  v2 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s1 = v1 * v1 + v2 * v2;\n  rand = glMatrix.RANDOM();\n  v3 = rand * 2 - 1;\n  v4 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s2 = v3 * v3 + v4 * v4;\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 4;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n\n/**\n * Quaternion in the format XYZW\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2],\n    bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var by = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bz = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function exp(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function ln(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2],\n    bw = b[3];\n  var omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n  // calculate coefficients\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x Angle to rotate around X axis in degrees.\n * @param {Number} y Angle to rotate around Y axis in degrees.\n * @param {Number} z Angle to rotate around Z axis in degrees.\n * @param {'xyz'|'xzy'|'yxz'|'yzx'|'zxy'|'zyx'} order Intrinsic order for conversion, default is zyx.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n  var order = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : glMatrix.ANGLE_ORDER;\n  var halfToRad = Math.PI / 360;\n  x *= halfToRad;\n  z *= halfToRad;\n  y *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  switch (order) {\n    case \"xyz\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"xzy\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    case \"yxz\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    case \"yzx\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"zxy\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"zyx\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    default:\n      throw new Error('Unknown angle order ' + order);\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a quaternion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport var clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport var fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport var copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport var set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport var add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport var scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport var dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport var lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport var length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport var squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport var normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport var exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions point approximately to the same direction.\n *\n * Both quaternions are assumed to be unit length.\n *\n * @param {ReadonlyQuat} a The first unit quaternion.\n * @param {ReadonlyQuat} b The second unit quaternion.\n * @returns {Boolean} True if the quaternions are equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(vec4.dot(a, b)) >= 1 - glMatrix.EPSILON;\n}\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n  dq[3] = 1;\n  return dq;\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n    ay = y2 * 0.5,\n    az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n    ay = t[1] * 0.5,\n    az = t[2] * 0.5,\n    bx = q[0],\n    by = q[1],\n    bz = q[2],\n    bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\nexport var getReal = quat.copy;\n\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\nexport var setReal = quat.copy;\n\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\nexport function getTranslation(out, a) {\n  var ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3],\n    bx1 = v[0] * 0.5,\n    by1 = v[1] * 0.5,\n    bz1 = v[2] * 0.5,\n    ax2 = a[4],\n    ay2 = a[5],\n    az2 = a[6],\n    aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    bx = a[0],\n    by = a[1],\n    bz = a[2],\n    bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n    ay0 = a[1],\n    az0 = a[2],\n    aw0 = a[3],\n    bx1 = b[4],\n    by1 = b[5],\n    bz1 = b[6],\n    bw1 = b[7],\n    ax1 = a[4],\n    ay1 = a[5],\n    az1 = a[6],\n    aw1 = a[7],\n    bx0 = b[0],\n    by0 = b[1],\n    bz0 = b[2],\n    bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport var dot = quat.dot;\n\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\nexport var length = quat.length;\n\n/**\n * Alias for {@link quat2.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport var squaredLength = quat.squaredLength;\n\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a dual quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0],\n    y = a[1];\n  return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x * x + y * y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n    p1 = a[1] - b[1],\n    sinC = Math.sin(rad),\n    cosC = Math.cos(rad);\n\n  //perform rotation and translate to correct position\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n\n/**\n * Get the smallest angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1];\n  return Math.abs(Math.atan2(ay * bx - ax * by, ax * bx + ay * by));\n}\n\n/**\n * Get the signed angle in the interval [-pi,pi] between two 2D vectors (positive if `a` is to the right of `b`)\n * \n * @param {ReadonlyVec2} a The first vector\n * @param {ReadonlyVec2} b The second vector\n * @returns {number} The signed angle in radians\n */\nexport function signedAngle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1];\n  return Math.atan2(ax * by - ay * bx, ax * bx + ay * by);\n}\n\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1];\n  var b0 = b[0],\n    b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 2;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n    return a;\n  };\n}();","\nvar Module = (() => {\n  var _scriptName = import.meta.url;\n  \n  return (\nasync function(moduleArg = {}) {\n  var moduleRtn;\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){const{createRequire:createRequire}=await import(\"module\");var require=createRequire(import.meta.url)}var _ManifoldInitialized=false;Module.setup=function(){if(_ManifoldInitialized)return;_ManifoldInitialized=true;Module.initTBB();function toVec(vec,list,f=(x=>x)){if(list){for(let x of list){vec.push_back(f(x))}}return vec}function fromVec(vec,f=(x=>x)){const result=[];const size=vec.size();for(let i=0;i<size;i++)result.push(f(vec.get(i)));return result}function vec2polygons(vec,f=(x=>x)){const result=[];const nPoly=vec.size();for(let i=0;i<nPoly;i++){const v=vec.get(i);const nPts=v.size();const poly=[];for(let j=0;j<nPts;j++){poly.push(f(v.get(j)))}result.push(poly)}return result}function polygons2vec(polygons){if(polygons[0].length<3){polygons=[polygons]}return toVec(new Module.Vector2_vec2,polygons,poly=>toVec(new Module.Vector_vec2,poly,p=>{if(p instanceof Array)return{x:p[0],y:p[1]};return p}))}function disposePolygons(polygonsVec){for(let i=0;i<polygonsVec.size();i++)polygonsVec.get(i).delete();polygonsVec.delete()}function vararg2vec2(vec){if(vec[0]instanceof Array)return{x:vec[0][0],y:vec[0][1]};if(typeof vec[0]==\"number\")return{x:vec[0]||0,y:vec[1]||0};return vec[0]}function vararg2vec3(vec){if(vec[0]instanceof Array)return{x:vec[0][0],y:vec[0][1],z:vec[0][2]};if(typeof vec[0]==\"number\")return{x:vec[0]||0,y:vec[1]||0,z:vec[2]||0};return vec[0]}function fillRuleToInt(fillRule){return fillRule==\"EvenOdd\"?0:fillRule==\"NonZero\"?1:fillRule==\"Negative\"?3:2}function joinTypeToInt(joinType){return joinType==\"Round\"?1:joinType==\"Miter\"?2:0}const CrossSectionCtor=Module.CrossSection;function cross(polygons,fillRule=\"Positive\"){if(polygons instanceof CrossSectionCtor){return polygons}else{const polygonsVec=polygons2vec(polygons);const cs=new CrossSectionCtor(polygonsVec,fillRuleToInt(fillRule));disposePolygons(polygonsVec);return cs}}Module.CrossSection.prototype.translate=function(...vec){return this._Translate(vararg2vec2(vec))};Module.CrossSection.prototype.scale=function(vec){if(typeof vec==\"number\"){return this._Scale({x:vec,y:vec})}return this._Scale(vararg2vec2([vec]))};Module.CrossSection.prototype.mirror=function(vec){return this._Mirror(vararg2vec2([vec]))};Module.CrossSection.prototype.warp=function(func){const wasmFuncPtr=addFunction(function(vec2Ptr){const x=getValue(vec2Ptr,\"double\");const y=getValue(vec2Ptr+8,\"double\");const vert=[x,y];func(vert);setValue(vec2Ptr,vert[0],\"double\");setValue(vec2Ptr+8,vert[1],\"double\")},\"vi\");const out=this._Warp(wasmFuncPtr);removeFunction(wasmFuncPtr);return out};Module.CrossSection.prototype.decompose=function(){const vec=this._Decompose();const result=fromVec(vec);vec.delete();return result};Module.CrossSection.prototype.bounds=function(){const result=this._Bounds();return{min:[\"x\",\"y\"].map(f=>result.min[f]),max:[\"x\",\"y\"].map(f=>result.max[f])}};Module.CrossSection.prototype.offset=function(delta,joinType=\"Round\",miterLimit=2,circularSegments=0){return this._Offset(delta,joinTypeToInt(joinType),miterLimit,circularSegments)};Module.CrossSection.prototype.simplify=function(epsilon=1e-6){return this._Simplify(epsilon)};Module.CrossSection.prototype.extrude=function(height,nDivisions=0,twistDegrees=0,scaleTop=[1,1],center=false){scaleTop=vararg2vec2([scaleTop]);const man=Module._Extrude(this._ToPolygons(),height,nDivisions,twistDegrees,scaleTop);return center?man.translate([0,0,-height/2]):man};Module.CrossSection.prototype.revolve=function(circularSegments=0,revolveDegrees=360){return Module._Revolve(this._ToPolygons(),circularSegments,revolveDegrees)};Module.CrossSection.prototype.add=function(other){return this._add(cross(other))};Module.CrossSection.prototype.subtract=function(other){return this._subtract(cross(other))};Module.CrossSection.prototype.intersect=function(other){return this._intersect(cross(other))};Module.CrossSection.prototype.toPolygons=function(){const vec=this._ToPolygons();const result=vec2polygons(vec,v=>[v.x,v.y]);vec.delete();return result};Module.Manifold.prototype.smoothOut=function(minSharpAngle=60,minSmoothness=0){return this._SmoothOut(minSharpAngle,minSmoothness)};Module.Manifold.prototype.warp=function(func){const wasmFuncPtr=addFunction(function(vec3Ptr){const x=getValue(vec3Ptr,\"double\");const y=getValue(vec3Ptr+8,\"double\");const z=getValue(vec3Ptr+16,\"double\");const vert=[x,y,z];func(vert);setValue(vec3Ptr,vert[0],\"double\");setValue(vec3Ptr+8,vert[1],\"double\");setValue(vec3Ptr+16,vert[2],\"double\")},\"vi\");const out=this._Warp(wasmFuncPtr);removeFunction(wasmFuncPtr);const status=out.status();if(status!==\"NoError\"){throw new Module.ManifoldError(status)}return out};Module.Manifold.prototype.calculateNormals=function(normalIdx,minSharpAngle=60){return this._CalculateNormals(normalIdx,minSharpAngle)};Module.Manifold.prototype.setProperties=function(numProp,func){const oldNumProp=this.numProp();const wasmFuncPtr=addFunction(function(newPtr,vec3Ptr,oldPtr){const newProp=[];for(let i=0;i<numProp;++i){newProp[i]=getValue(newPtr+8*i,\"double\")}const pos=[];for(let i=0;i<3;++i){pos[i]=getValue(vec3Ptr+8*i,\"double\")}const oldProp=[];for(let i=0;i<oldNumProp;++i){oldProp[i]=getValue(oldPtr+8*i,\"double\")}func(newProp,pos,oldProp);for(let i=0;i<numProp;++i){setValue(newPtr+8*i,newProp[i],\"double\")}},\"viii\");const out=this._SetProperties(numProp,wasmFuncPtr);removeFunction(wasmFuncPtr);return out};Module.Manifold.prototype.translate=function(...vec){return this._Translate(vararg2vec3(vec))};Module.Manifold.prototype.rotate=function(xOrVec,y,z){if(Array.isArray(xOrVec)){return this._Rotate(...xOrVec)}else{return this._Rotate(xOrVec,y||0,z||0)}};Module.Manifold.prototype.scale=function(vec){if(typeof vec==\"number\"){return this._Scale({x:vec,y:vec,z:vec})}return this._Scale(vararg2vec3([vec]))};Module.Manifold.prototype.mirror=function(vec){return this._Mirror(vararg2vec3([vec]))};Module.Manifold.prototype.trimByPlane=function(normal,offset=0){return this._TrimByPlane(vararg2vec3([normal]),offset)};Module.Manifold.prototype.slice=function(height=0){const polygonsVec=this._Slice(height);const result=new CrossSectionCtor(polygonsVec,fillRuleToInt(\"Positive\"));disposePolygons(polygonsVec);return result};Module.Manifold.prototype.project=function(){const polygonsVec=this._Project();const result=new CrossSectionCtor(polygonsVec,fillRuleToInt(\"Positive\"));disposePolygons(polygonsVec);return result};Module.Manifold.prototype.split=function(manifold){const vec=this._Split(manifold);const result=fromVec(vec);vec.delete();return result};Module.Manifold.prototype.splitByPlane=function(normal,offset=0){const vec=this._SplitByPlane(vararg2vec3([normal]),offset);const result=fromVec(vec);vec.delete();return result};Module.Manifold.prototype.decompose=function(){const vec=this._Decompose();const result=fromVec(vec);vec.delete();return result};Module.Manifold.prototype.boundingBox=function(){const result=this._boundingBox();return{min:[\"x\",\"y\",\"z\"].map(f=>result.min[f]),max:[\"x\",\"y\",\"z\"].map(f=>result.max[f])}};class Mesh{constructor({numProp:numProp=3,triVerts:triVerts=new Uint32Array,vertProperties:vertProperties=new Float32Array,mergeFromVert:mergeFromVert,mergeToVert:mergeToVert,runIndex:runIndex,runOriginalID:runOriginalID,faceID:faceID,halfedgeTangent:halfedgeTangent,runTransform:runTransform}={}){this.numProp=numProp;this.triVerts=triVerts;this.vertProperties=vertProperties;this.mergeFromVert=mergeFromVert;this.mergeToVert=mergeToVert;this.runIndex=runIndex;this.runOriginalID=runOriginalID;this.faceID=faceID;this.halfedgeTangent=halfedgeTangent;this.runTransform=runTransform}get numTri(){return this.triVerts.length/3}get numVert(){return this.vertProperties.length/this.numProp}get numRun(){return this.runOriginalID.length}merge(){const{changed:changed,mesh:mesh}=Module._Merge(this);Object.assign(this,{...mesh});return changed}verts(tri){return this.triVerts.subarray(3*tri,3*(tri+1))}position(vert){return this.vertProperties.subarray(this.numProp*vert,this.numProp*vert+3)}extras(vert){return this.vertProperties.subarray(this.numProp*vert+3,this.numProp*(vert+1))}tangent(halfedge){return this.halfedgeTangent.subarray(4*halfedge,4*(halfedge+1))}transform(run){const mat4=new Array(16);for(const col of[0,1,2,3]){for(const row of[0,1,2]){mat4[4*col+row]=this.runTransform[12*run+3*col+row]}}mat4[15]=1;return mat4}}Module.Mesh=Mesh;Module.Manifold.prototype.getMesh=function(normalIdx=-1){return new Mesh(this._GetMeshJS(normalIdx))};Module.ManifoldError=function ManifoldError(code,...args){let message=\"Unknown error\";switch(code){case\"NonFiniteVertex\":message=\"Non-finite vertex\";break;case\"NotManifold\":message=\"Not manifold\";break;case\"VertexOutOfBounds\":message=\"Vertex index out of bounds\";break;case\"PropertiesWrongLength\":message=\"Properties have wrong length\";break;case\"MissingPositionProperties\":message=\"Less than three properties\";break;case\"MergeVectorsDifferentLengths\":message=\"Merge vectors have different lengths\";break;case\"MergeIndexOutOfBounds\":message=\"Merge index out of bounds\";break;case\"TransformWrongLength\":message=\"Transform vector has wrong length\";break;case\"RunIndexWrongLength\":message=\"Run index vector has wrong length\";break;case\"FaceIDWrongLength\":message=\"Face ID vector has wrong length\";case\"InvalidConstruction\":message=\"Manifold constructed with invalid parameters\"}const base=Error.apply(this,[message,...args]);base.name=this.name=\"ManifoldError\";this.message=base.message;this.stack=base.stack;this.code=code};Module.ManifoldError.prototype=Object.create(Error.prototype,{constructor:{value:Module.ManifoldError,writable:true,configurable:true}});Module.CrossSection=function(polygons,fillRule=\"Positive\"){const polygonsVec=polygons2vec(polygons);const cs=new CrossSectionCtor(polygonsVec,fillRuleToInt(fillRule));disposePolygons(polygonsVec);return cs};Module.CrossSection.ofPolygons=function(polygons,fillRule=\"Positive\"){return new Module.CrossSection(polygons,fillRule)};Module.CrossSection.square=function(...args){let size=undefined;if(args.length==0)size={x:1,y:1};else if(typeof args[0]==\"number\")size={x:args[0],y:args[0]};else size=vararg2vec2(args);const center=args[1]||false;return Module._Square(size,center)};Module.CrossSection.circle=function(radius,circularSegments=0){return Module._Circle(radius,circularSegments)};function crossSectionBatchbool(name){return function(...args){if(args.length==1)args=args[0];const v=new Module.Vector_crossSection;for(const cs of args)v.push_back(cross(cs));const result=Module[\"_crossSection\"+name](v);v.delete();return result}}Module.CrossSection.compose=crossSectionBatchbool(\"Compose\");Module.CrossSection.union=crossSectionBatchbool(\"UnionN\");Module.CrossSection.difference=crossSectionBatchbool(\"DifferenceN\");Module.CrossSection.intersection=crossSectionBatchbool(\"IntersectionN\");function pushVec2(vec,ps){toVec(vec,ps,p=>{if(p instanceof Array)return{x:p[0],y:p[1]};return p})}Module.CrossSection.hull=function(...args){if(args.length==1)args=args[0];let pts=new Module.Vector_vec2;for(const cs of args){if(cs instanceof CrossSectionCtor){Module._crossSectionCollectVertices(pts,cs)}else if(cs instanceof Array&&cs.length==2&&typeof cs[0]==\"number\"){pts.push_back({x:cs[0],y:cs[1]})}else if(cs.x){pts.push_back(cs)}else{const wrap=cs[0].length==2&&typeof cs[0][0]==\"number\"||cs[0].x;const polys=wrap?[cs]:cs;for(const poly of polys)pushVec2(pts,poly)}}const result=Module._crossSectionHullPoints(pts);pts.delete();return result};Module.CrossSection.prototype=Object.create(CrossSectionCtor.prototype);Object.defineProperty(Module.CrossSection,Symbol.hasInstance,{get:()=>t=>t instanceof CrossSectionCtor});const ManifoldCtor=Module.Manifold;Module.Manifold=function(mesh){const manifold=new ManifoldCtor(mesh);const status=manifold.status();if(status!==\"NoError\"){throw new Module.ManifoldError(status)}return manifold};Module.Manifold.ofMesh=function(mesh){return new Module.Manifold(mesh)};Module.Manifold.tetrahedron=function(){return Module._Tetrahedron()};Module.Manifold.cube=function(...args){let size=undefined;if(args.length==0)size={x:1,y:1,z:1};else if(typeof args[0]==\"number\")size={x:args[0],y:args[0],z:args[0]};else size=vararg2vec3(args);const center=args[1]||false;return Module._Cube(size,center)};Module.Manifold.cylinder=function(height,radiusLow,radiusHigh=-1,circularSegments=0,center=false){return Module._Cylinder(height,radiusLow,radiusHigh,circularSegments,center)};Module.Manifold.sphere=function(radius,circularSegments=0){return Module._Sphere(radius,circularSegments)};Module.Manifold.smooth=function(mesh,sharpenedEdges=[]){const sharp=new Module.Vector_smoothness;toVec(sharp,sharpenedEdges);const result=Module._Smooth(mesh,sharp);sharp.delete();return result};Module.Manifold.extrude=function(polygons,height,nDivisions=0,twistDegrees=0,scaleTop=[1,1],center=false){const cs=polygons instanceof CrossSectionCtor?polygons:Module.CrossSection(polygons,\"Positive\");return cs.extrude(height,nDivisions,twistDegrees,scaleTop,center)};Module.Manifold.revolve=function(polygons,circularSegments=0,revolveDegrees=360){const cs=polygons instanceof CrossSectionCtor?polygons:Module.CrossSection(polygons,\"Positive\");return cs.revolve(circularSegments,revolveDegrees)};Module.Manifold.reserveIDs=function(n){return Module._ReserveIDs(n)};Module.Manifold.compose=function(manifolds){const vec=new Module.Vector_manifold;toVec(vec,manifolds);const result=Module._manifoldCompose(vec);vec.delete();return result};function manifoldBatchbool(name){return function(...args){if(args.length==1)args=args[0];const v=new Module.Vector_manifold;for(const m of args)v.push_back(m);const result=Module[\"_manifold\"+name+\"N\"](v);v.delete();return result}}Module.Manifold.union=manifoldBatchbool(\"Union\");Module.Manifold.difference=manifoldBatchbool(\"Difference\");Module.Manifold.intersection=manifoldBatchbool(\"Intersection\");Module.Manifold.levelSet=function(sdf,bounds,edgeLength,level=0,tolerance=-1){const bounds2={min:{x:bounds.min[0],y:bounds.min[1],z:bounds.min[2]},max:{x:bounds.max[0],y:bounds.max[1],z:bounds.max[2]}};const wasmFuncPtr=addFunction(function(vec3Ptr){const x=getValue(vec3Ptr,\"double\");const y=getValue(vec3Ptr+8,\"double\");const z=getValue(vec3Ptr+16,\"double\");const vert=[x,y,z];return sdf(vert)},\"di\");const out=Module._LevelSet(wasmFuncPtr,bounds2,edgeLength,level,tolerance);removeFunction(wasmFuncPtr);return out};function pushVec3(vec,ps){toVec(vec,ps,p=>{if(p instanceof Array)return{x:p[0],y:p[1],z:p[2]};return p})}Module.Manifold.hull=function(...args){if(args.length==1)args=args[0];let pts=new Module.Vector_vec3;for(const m of args){if(m instanceof ManifoldCtor){Module._manifoldCollectVertices(pts,m)}else if(m instanceof Array&&m.length==3&&typeof m[0]==\"number\"){pts.push_back({x:m[0],y:m[1],z:m[2]})}else if(m.x){pts.push_back(m)}else{pushVec3(pts,m)}}const result=Module._manifoldHullPoints(pts);pts.delete();return result};Module.Manifold.prototype=Object.create(ManifoldCtor.prototype);Object.defineProperty(Module.Manifold,Symbol.hasInstance,{get:()=>t=>t instanceof ManifoldCtor});Module.triangulate=function(polygons,epsilon=-1,allowConvex=true){const polygonsVec=polygons2vec(polygons);const result=fromVec(Module._Triangulate(polygonsVec,epsilon,allowConvex),x=>[x[0],x[1],x[2]]);disposePolygons(polygonsVec);return result}};var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var readAsync,readBinary;if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");scriptDirectory=require(\"url\").fileURLToPath(new URL(\"./\",import.meta.url));readBinary=filename=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);var ret=fs.readFileSync(filename);return ret};readAsync=(filename,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return new Promise((resolve,reject)=>{fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)reject(err);else resolve(binary?data.buffer:data)})})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=url=>{if(isFileURI(url)){return new Promise((reject,resolve)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){resolve(xhr.response)}reject(xhr.status)};xhr.onerror=reject;xhr.send(null)})}return fetch(url,{credentials:\"same-origin\"}).then(response=>{if(response.ok){return response.arrayBuffer()}return Promise.reject(new Error(response.status+\" : \"+response.url))})}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith(\"file://\");function findWasmBinary(){if(Module[\"locateFile\"]){var f=\"manifold.wasm\";if(!isDataURI(f)){return locateFile(f)}return f}return new URL(\"manifold.wasm\",import.meta.url).href}var wasmBinaryFile;function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary){return readAsync(binaryFile).then(response=>new Uint8Array(response),()=>getBinarySync(binaryFile))}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function getWasmImports(){return{a:wasmImports}}function createWasm(){var info=getWasmImports();function receiveInstance(instance,module){wasmExports=instance.exports;wasmExports=applySignatureConversions(wasmExports);wasmMemory=wasmExports[\"J\"];updateMemoryViews();wasmTable=wasmExports[\"M\"];addOnInit(wasmExports[\"K\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}if(!wasmBinaryFile)wasmBinaryFile=findWasmBinary();instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};function getValue(ptr,type=\"i8\"){if(type.endsWith(\"*\"))type=\"*\";switch(type){case\"i1\":return HEAP8[ptr>>>0];case\"i8\":return HEAP8[ptr>>>0];case\"i16\":return HEAP16[ptr>>>1>>>0];case\"i32\":return HEAP32[ptr>>>2>>>0];case\"i64\":abort(\"to do getValue(i64) use WASM_BIGINT\");case\"float\":return HEAPF32[ptr>>>2>>>0];case\"double\":return HEAPF64[ptr>>>3>>>0];case\"*\":return HEAPU32[ptr>>>2>>>0];default:abort(`invalid type for getValue: ${type}`)}}var noExitRuntime=Module[\"noExitRuntime\"]||true;function setValue(ptr,value,type=\"i8\"){if(type.endsWith(\"*\"))type=\"*\";switch(type){case\"i1\":HEAP8[ptr>>>0]=value;break;case\"i8\":HEAP8[ptr>>>0]=value;break;case\"i16\":HEAP16[ptr>>>1>>>0]=value;break;case\"i32\":HEAP32[ptr>>>2>>>0]=value;break;case\"i64\":abort(\"to do setValue(i64) use WASM_BIGINT\");case\"float\":HEAPF32[ptr>>>2>>>0]=value;break;case\"double\":HEAPF64[ptr>>>3>>>0]=value;break;case\"*\":HEAPU32[ptr>>>2>>>0]=value;break;default:abort(`invalid type for setValue: ${type}`)}}class ExceptionInfo{constructor(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24}set_type(type){HEAPU32[this.ptr+4>>>2>>>0]=type}get_type(){return HEAPU32[this.ptr+4>>>2>>>0]}set_destructor(destructor){HEAPU32[this.ptr+8>>>2>>>0]=destructor}get_destructor(){return HEAPU32[this.ptr+8>>>2>>>0]}set_caught(caught){caught=caught?1:0;HEAP8[this.ptr+12>>>0]=caught}get_caught(){return HEAP8[this.ptr+12>>>0]!=0}set_rethrown(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>>0]=rethrown}get_rethrown(){return HEAP8[this.ptr+13>>>0]!=0}init(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)}set_adjusted_ptr(adjustedPtr){HEAPU32[this.ptr+16>>>2>>>0]=adjustedPtr}get_adjusted_ptr(){return HEAPU32[this.ptr+16>>>2>>>0]}get_exception_ptr(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>>2>>>0]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){ptr>>>=0;type>>>=0;destructor>>>=0;var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast}var __abort_js=()=>{abort(\"\")};var structRegistrations={};var runDestructors=destructors=>{while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>>2>>>0])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var InternalError;var throwInternalError=message=>{throw new InternalError(message)};var whenDependentTypesAreResolved=(myTypes,dependentTypes,getTypeConverters)=>{myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}};var __embind_finalize_value_object=function(structType){structType>>>=0;var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>getterReturnType[\"fromWireType\"](getter(getterContext,ptr)),write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,fromWireType:ptr=>{var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},toWireType:(destructors,o)=>{for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError(`Missing field: \"${fieldName}\"`)}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction:rawDestructor}]})};function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0;name>>>=0;size>>>=0}var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c>>>0]){ret+=embind_charCodes[HEAPU8[c++>>>0]]}return ret};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;function __embind_register_bool(rawType,name,trueValue,falseValue){rawType>>>=0;name>>>=0;name=readLatin1String(name);registerType(rawType,{name:name,fromWireType:function(wt){return!!wt},toWireType:function(destructors,o){return o?trueValue:falseValue},argPackAdvance:GenericWireTypeSize,readValueFromPointer:function(pointer){return this[\"fromWireType\"](HEAPU8[pointer>>>0])},destructorFunction:null})}var shallowCopyInternalPointer=o=>({count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType});var throwInstanceAlreadyDeleted=obj=>{function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")};var finalizationRegistry=false;var detachFinalizer=handle=>{};var runDestructor=$$=>{if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}};var releaseClassHandle=$$=>{$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}};var downcastPointer=(ptr,ptrClass,desiredClass)=>{if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)};var registeredPointers={};var getInheritedInstanceCount=()=>Object.keys(registeredInstances).length;var getLiveInheritedInstances=()=>{var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv};var deletionQueue=[];var flushPendingDeletes=()=>{while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}};var delayFunction;var setDelayFunction=fn=>{delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}};var init_embind=()=>{Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction};var registeredInstances={};var getBasestPointer=(class_,ptr)=>{if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr};var getInheritedInstance=(class_,ptr)=>{ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]};var makeClassHandle=(prototype,record)=>{if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record,writable:true}}))};function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}var attachFinalizer=handle=>{if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)};var init_ClassHandle=()=>{Object.assign(ClassHandle.prototype,{isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;other.$$=other.$$;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right},clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}},delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}},isDeleted(){return!this.$$.ptr},deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}})};function ClassHandle(){}var createNamedFunction=(name,body)=>Object.defineProperty(body,\"name\",{value:name});var ensureOverloadTable=(proto,methodName,humanName)=>{if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(...args){if(!proto[methodName].overloadTable.hasOwnProperty(args.length)){throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`)}return proto[methodName].overloadTable[args.length].apply(this,args)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}};var exposePublicSymbol=(name,value,numArguments)=>{if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(`Cannot register public name '${name}' twice`)}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`)}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}};var char_0=48;var char_9=57;var makeLegalFunctionName=name=>{if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return`_${name}`}return name};function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}var upcastPointer=(ptr,ptrClass,desiredClass)=>{while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr};function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle||!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(()=>clonedHandle[\"delete\"]()));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}var init_RegisteredPointer=()=>{Object.assign(RegisteredPointer.prototype,{getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr},destructor(ptr){this.rawDestructor?.(ptr)},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,fromWireType:RegisteredPointer_fromWireType})};function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}var replacePublicSymbol=(name,value,numArguments)=>{if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistent public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var dynCallLegacy=(sig,ptr,args)=>{sig=sig.replace(/p/g,\"i\");var f=Module[\"dynCall_\"+sig];return f(ptr,...args)};var wasmTable;var getWasmTableEntry=funcPtr=>wasmTable.get(funcPtr);var dynCall=(sig,ptr,args=[])=>{if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr)(...args);return sig[0]==\"p\"?rtn>>>0:rtn};var getDynCaller=(sig,ptr)=>(...args)=>dynCall(sig,ptr,args);var embind__requireFunction=(signature,rawFunction)=>{signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}if(signature.includes(\"p\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`)}return fp};var extendError=(baseErrorType,errorName)=>{var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return`${this.name}: ${this.message}`}};return errorClass};var UnboundTypeError;var getTypeName=type=>{var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv};var throwUnboundTypeError=(message,types)=>{var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(`${message}: `+unboundTypes.map(getTypeName).join([\", \"]))};function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){rawType>>>=0;rawPointerType>>>=0;rawConstPointerType>>>=0;baseClassRawType>>>=0;getActualTypeSignature>>>=0;getActualType>>>=0;upcastSignature>>>=0;upcast>>>=0;downcastSignature>>>=0;downcast>>>=0;name>>>=0;destructorSignature>>>=0;rawDestructor>>>=0;name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);upcast&&=embind__requireFunction(upcastSignature,upcast);downcast&&=embind__requireFunction(downcastSignature,downcast);rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],base=>{base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(name,function(...args){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[args.length];if(undefined===body){throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`)}return body.apply(this,args)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);if(registeredClass.baseClass){registeredClass.baseClass.__derivedClasses??=[];registeredClass.baseClass.__derivedClasses.push(registeredClass)}var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}var heap32VectorToArray=(count,firstElement)=>{var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>>2>>>0])}return array};function usesDestructorStack(argTypes){for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){return true}}return false}function newFunc(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync){var needsDestructorStack=usesDestructorStack(argTypes);var argCount=argTypes.length;var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=`\\n        return function (${argsList}) {\\n        if (arguments.length !== ${argCount-2}) {\\n          throwBindingError('function ' + humanName + ' called with ' + arguments.length + ' arguments, expected ${argCount-2}');\\n        }`;if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"humanName\",\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam['toWireType'](\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\"['toWireType'](\"+dtorStack+\", arg\"+i+\");\\n\";args1.push(\"argType\"+i)}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns||isAsync?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=`${paramName}_dtor(${paramName});\\n`;args1.push(`${paramName}_dtor`)}}}if(returns){invokerFnBody+=\"var ret = retType['fromWireType'](rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";return[args1,invokerFnBody]}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=usesDestructorStack(argTypes);var returns=argTypes[0].name!==\"void\";var closureArgs=[humanName,throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];for(var i=0;i<argCount-2;++i){closureArgs.push(argTypes[i+2])}if(!needsDestructorStack){for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){if(argTypes[i].destructorFunction!==null){closureArgs.push(argTypes[i].destructorFunction)}}}let[args,invokerFnBody]=createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync);args.push(invokerFnBody);var invokerFn=newFunc(Function,args)(...closureArgs);return createNamedFunction(humanName,invokerFn)}var __embind_register_class_constructor=function(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){rawClassType>>>=0;rawArgTypesAddr>>>=0;invokerSignature>>>=0;invoker>>>=0;rawConstructor>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],classType=>{classType=classType[0];var humanName=`constructor ${classType.name}`;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`)}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})};var getFunctionName=signature=>{signature=signature.trim();const argsIndex=signature.indexOf(\"(\");if(argsIndex!==-1){return signature.substr(0,argsIndex)}else{return signature}};var __embind_register_class_function=function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync){rawClassType>>>=0;methodName>>>=0;rawArgTypesAddr>>>=0;invokerSignature>>>=0;rawInvoker>>>=0;context>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);methodName=getFunctionName(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],classType=>{classType=classType[0];var humanName=`${classType.name}.${methodName}`;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})};var emval_freelist=[];var emval_handles=[];function __emval_decref(handle){handle>>>=0;if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}}var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};var EmValType={name:\"emscripten::val\",fromWireType:handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},toWireType:(destructors,value)=>Emval.toHandle(value),argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction:null};function __embind_register_emval(rawType){rawType>>>=0;return registerType(rawType,EmValType)}var enumReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?function(pointer){return this[\"fromWireType\"](HEAP8[pointer>>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU8[pointer>>>0])};case 2:return signed?function(pointer){return this[\"fromWireType\"](HEAP16[pointer>>>1>>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU16[pointer>>>1>>>0])};case 4:return signed?function(pointer){return this[\"fromWireType\"](HEAP32[pointer>>>2>>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>>2>>>0])};default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};function __embind_register_enum(rawType,name,size,isSigned){rawType>>>=0;name>>>=0;size>>>=0;name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,fromWireType:function(c){return this.constructor.values[c]},toWireType:(destructors,c)=>c.value,argPackAdvance:GenericWireTypeSize,readValueFromPointer:enumReadValueFromPointer(name,size,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}var requireRegisteredType=(rawType,humanName)=>{var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`)}return impl};function __embind_register_enum_value(rawEnumType,name,enumValue){rawEnumType>>>=0;name>>>=0;var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(`${enumType.name}_${name}`,function(){})}});Enum.values[enumValue]=Value;Enum[name]=Value}var embindRepr=v=>{if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>>2>>>0])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>>3>>>0])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=function(rawType,name,size){rawType>>>=0;name>>>=0;size>>>=0;name=readLatin1String(name);registerType(rawType,{name:name,fromWireType:value=>value,toWireType:(destructors,value)=>value,argPackAdvance:GenericWireTypeSize,readValueFromPointer:floatReadValueFromPointer(name,size),destructorFunction:null})};function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync){name>>>=0;rawArgTypesAddr>>>=0;signature>>>=0;rawInvoker>>>=0;fn>>>=0;var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);name=getFunctionName(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,argTypes=>{var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn,isAsync),argCount-1);return[]})}var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer>>>0]:pointer=>HEAPU8[pointer>>>0];case 2:return signed?pointer=>HEAP16[pointer>>>1>>>0]:pointer=>HEAPU16[pointer>>>1>>>0];case 4:return signed?pointer=>HEAP32[pointer>>>2>>>0]:pointer=>HEAPU32[pointer>>>2>>>0];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};function __embind_register_integer(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0;name>>>=0;size>>>=0;name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,fromWireType:fromWireType,toWireType:toWireType,argPackAdvance:GenericWireTypeSize,readValueFromPointer:integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){rawType>>>=0;name>>>=0;var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>>2>>>0];var data=HEAPU32[handle+4>>>2>>>0];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,fromWireType:decodeMemoryView,argPackAdvance:GenericWireTypeSize,readValueFromPointer:decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_optional(rawOptionalType,rawType){rawOptionalType>>>=0;rawType>>>=0;__embind_register_emval(rawOptionalType)}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder:undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>{ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"};function __embind_register_std_string(rawType,name){rawType>>>=0;name>>>=0;name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,fromWireType(value){var length=HEAPU32[value>>>2>>>0];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr>>>0]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i>>>0])}str=a.join(\"\")}_free(value);return str},toWireType(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>>2>>>0]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i>>>0]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i>>>0]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx>>>0])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr>>>0,endPtr>>>0));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>>1>>>0];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>>1>>>0]=codeUnit;outPtr+=2}HEAP16[outPtr>>>1>>>0]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>>2>>>0];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{outPtr>>>=0;maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>>2>>>0]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>>2>>>0]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=function(rawType,charSize,name){rawType>>>=0;charSize>>>=0;name>>>=0;name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>>1>>>0]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>>2>>>0]}registerType(rawType,{name:name,fromWireType:value=>{var length=HEAPU32[value>>>2>>>0];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},toWireType:(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>>2>>>0]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})};function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){rawType>>>=0;name>>>=0;constructorSignature>>>=0;rawConstructor>>>=0;destructorSignature>>>=0;rawDestructor>>>=0;structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structType>>>=0;fieldName>>>=0;getterReturnType>>>=0;getterSignature>>>=0;getter>>>=0;getterContext>>>=0;setterArgumentType>>>=0;setterSignature>>>=0;setter>>>=0;setterContext>>>=0;structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}var __embind_register_void=function(rawType,name){rawType>>>=0;name>>>=0;name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,argPackAdvance:0,fromWireType:()=>undefined,toWireType:(destructors,o)=>undefined})};function __emscripten_memcpy_js(dest,src,num){dest>>>=0;src>>>=0;num>>>=0;return HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}var emval_returnValue=(returnType,destructorsRef,handle)=>{var destructors=[];var result=returnType[\"toWireType\"](destructors,handle);if(destructors.length){HEAPU32[destructorsRef>>>2>>>0]=Emval.toHandle(destructors)}return result};function __emval_as(handle,returnType,destructorsRef){handle>>>=0;returnType>>>=0;destructorsRef>>>=0;handle=Emval.toValue(handle);returnType=requireRegisteredType(returnType,\"emval::as\");return emval_returnValue(returnType,destructorsRef,handle)}var emval_symbols={};var getStringOrSymbol=address=>{var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol};var emval_methodCallers=[];function __emval_call_method(caller,objHandle,methodName,destructorsRef,args){caller>>>=0;objHandle>>>=0;methodName>>>=0;destructorsRef>>>=0;args>>>=0;caller=emval_methodCallers[caller];objHandle=Emval.toValue(objHandle);methodName=getStringOrSymbol(methodName);return caller(objHandle,objHandle[methodName],destructorsRef,args)}function __emval_equals(first,second){first>>>=0;second>>>=0;first=Emval.toValue(first);second=Emval.toValue(second);return first==second}var emval_addMethodCaller=caller=>{var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id};var emval_lookupTypes=(argCount,argTypes)=>{var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAPU32[argTypes+i*4>>>2>>>0],\"parameter \"+i)}return a};var reflectConstruct=Reflect.construct;function __emval_get_method_caller(argCount,argTypes,kind){argTypes>>>=0;var types=emval_lookupTypes(argCount,argTypes);var retType=types.shift();argCount--;var functionBody=`return function (obj, func, destructorsRef, args) {\\n`;var offset=0;var argsList=[];if(kind===0){argsList.push(\"obj\")}var params=[\"retType\"];var args=[retType];for(var i=0;i<argCount;++i){argsList.push(\"arg\"+i);params.push(\"argType\"+i);args.push(types[i]);functionBody+=`  var arg${i} = argType${i}.readValueFromPointer(args${offset?\"+\"+offset:\"\"});\\n`;offset+=types[i][\"argPackAdvance\"]}var invoker=kind===1?\"new func\":\"func.call\";functionBody+=`  var rv = ${invoker}(${argsList.join(\", \")});\\n`;if(!retType.isVoid){params.push(\"emval_returnValue\");args.push(emval_returnValue);functionBody+=\"  return emval_returnValue(retType, destructorsRef, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=newFunc(Function,params)(...args);var functionName=`methodCaller<(${types.map(t=>t.name).join(\", \")}) => ${retType.name}>`;return emval_addMethodCaller(createNamedFunction(functionName,invokerFunction))}function __emval_get_property(handle,key){handle>>>=0;key>>>=0;handle=Emval.toValue(handle);key=Emval.toValue(key);return Emval.toHandle(handle[key])}function __emval_incref(handle){handle>>>=0;if(handle>9){emval_handles[handle+1]+=1}}function __emval_new_cstring(v){v>>>=0;return Emval.toHandle(getStringOrSymbol(v))}function __emval_new_object(){return Emval.toHandle({})}function __emval_run_destructors(handle){handle>>>=0;var destructors=Emval.toValue(handle);runDestructors(destructors);__emval_decref(handle)}function __emval_set_property(handle,key,value){handle>>>=0;key>>>=0;value>>>=0;handle=Emval.toValue(handle);key=Emval.toValue(key);value=Emval.toValue(value);handle[key]=value}function __emval_take_value(type,arg){type>>>=0;arg>>>=0;type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}var getHeapMax=()=>4294901760;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};function _emscripten_resize_heap(requestedSize){requestedSize>>>=0;var oldSize=HEAPU8.length;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false}var uleb128Encode=(n,target)=>{if(n<128){target.push(n)}else{target.push(n%128|128,n>>7)}};var sigToWasmTypes=sig=>{var typeNames={i:\"i32\",j:\"i64\",f:\"f32\",d:\"f64\",e:\"externref\",p:\"i32\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return type};var generateFuncType=(sig,target)=>{var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={i:127,p:127,j:126,f:125,d:124,e:111};target.push(96);uleb128Encode(sigParam.length,target);for(var i=0;i<sigParam.length;++i){target.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){target.push(0)}else{target.push(1,typeCodes[sigRet])}};var convertJsFunctionToWasm=(func,sig)=>{if(typeof WebAssembly.Function==\"function\"){return new WebAssembly.Function(sigToWasmTypes(sig),func)}var typeSectionBody=[1];generateFuncType(sig,typeSectionBody);var bytes=[0,97,115,109,1,0,0,0,1];uleb128Encode(typeSectionBody.length,bytes);bytes.push(...typeSectionBody);bytes.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var module=new WebAssembly.Module(new Uint8Array(bytes));var instance=new WebAssembly.Instance(module,{e:{f:func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc};var updateTableMap=(offset,count)=>{if(functionsInTableMap){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}};var functionsInTableMap;var getFunctionAddress=func=>{if(!functionsInTableMap){functionsInTableMap=new WeakMap;updateTableMap(0,wasmTable.length)}return functionsInTableMap.get(func)||0};var freeTableIndexes=[];var getEmptyTableSlot=()=>{if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1};var setWasmTableEntry=(idx,func)=>wasmTable.set(idx,func);var addFunction=(func,sig)=>{var rtn=getFunctionAddress(func);if(rtn){return rtn}var ret=getEmptyTableSlot();try{setWasmTableEntry(ret,func)}catch(err){if(!(err instanceof TypeError)){throw err}var wrapped=convertJsFunctionToWasm(func,sig);setWasmTableEntry(ret,wrapped)}functionsInTableMap.set(func,ret);return ret};var removeFunction=index=>{functionsInTableMap.delete(getWasmTableEntry(index));setWasmTableEntry(index,null);freeTableIndexes.push(index)};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var wasmImports={i:___cxa_throw,D:__abort_js,n:__embind_finalize_value_object,C:__embind_register_bigint,H:__embind_register_bool,h:__embind_register_class,g:__embind_register_class_constructor,a:__embind_register_class_function,G:__embind_register_emval,t:__embind_register_enum,e:__embind_register_enum_value,x:__embind_register_float,c:__embind_register_function,j:__embind_register_integer,f:__embind_register_memory_view,k:__embind_register_optional,w:__embind_register_std_string,s:__embind_register_std_wstring,o:__embind_register_value_object,l:__embind_register_value_object_field,I:__embind_register_void,F:__emscripten_memcpy_js,v:__emval_as,z:__emval_call_method,b:__emval_decref,m:__emval_equals,y:__emval_get_method_caller,B:__emval_get_property,u:__emval_incref,q:__emval_new_cstring,A:__emval_new_object,p:__emval_run_destructors,r:__emval_set_property,d:__emval_take_value,E:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"K\"])();var ___getTypeName=a0=>(___getTypeName=wasmExports[\"L\"])(a0);var _malloc=a0=>(_malloc=wasmExports[\"N\"])(a0);var _free=a0=>(_free=wasmExports[\"O\"])(a0);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"P\"])(a0);function applySignatureConversions(wasmExports){wasmExports=Object.assign({},wasmExports);var makeWrapper_pp=f=>a0=>f(a0)>>>0;var makeWrapper_p=f=>()=>f()>>>0;wasmExports[\"L\"]=makeWrapper_pp(wasmExports[\"L\"]);wasmExports[\"N\"]=makeWrapper_pp(wasmExports[\"N\"]);wasmExports[\"_emscripten_stack_alloc\"]=makeWrapper_pp(wasmExports[\"_emscripten_stack_alloc\"]);wasmExports[\"emscripten_stack_get_current\"]=makeWrapper_p(wasmExports[\"emscripten_stack_get_current\"]);return wasmExports}Module[\"addFunction\"]=addFunction;Module[\"removeFunction\"]=removeFunction;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);Module[\"onRuntimeInitialized\"]?.();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();moduleRtn=readyPromise;\n\n\n  return moduleRtn;\n}\n);\n})();\nexport default Module;\n","// Copyright 2022-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport Module from '../manifold.js';\n// Instantiate Manifold WASM\nconst manifoldwasm = await Module();\nmanifoldwasm.setup();\n// manifold static methods (that return a new manifold)\nconst manifoldStaticFunctions = [\n    'cube', 'cylinder', 'sphere', 'tetrahedron', 'extrude', 'revolve', 'compose',\n    'union', 'difference', 'intersection', 'levelSet', 'smooth', 'ofMesh', 'hull'\n];\n// manifold member functions (that return a new manifold)\nconst manifoldMemberFunctions = [\n    'add',\n    'subtract',\n    'intersect',\n    'decompose',\n    'warp',\n    'transform',\n    'translate',\n    'rotate',\n    'scale',\n    'mirror',\n    'calculateCurvature',\n    'calculateNormals',\n    'smoothByNormals',\n    'smoothOut',\n    'refine',\n    'refineToLength',\n    'refineToTolerance',\n    'setProperties',\n    'setTolerance',\n    'simplify',\n    'asOriginal',\n    'trimByPlane',\n    'split',\n    'splitByPlane',\n    'slice',\n    'project',\n    'hull'\n];\n// CrossSection static methods (that return a new cross-section)\nconst crossSectionStaticFunctions = [\n    'square', 'circle', 'union', 'difference', 'intersection', 'compose',\n    'ofPolygons', 'hull'\n];\n// CrossSection member functions (that return a new cross-section)\nconst crossSectionMemberFunctions = [\n    'add', 'subtract', 'intersect', 'rectClip', 'decompose', 'transform',\n    'translate', 'rotate', 'scale', 'mirror', 'simplify', 'offset', 'hull'\n];\n// top level functions exposed in the evaluation context.\nconst toplevel = [\n    'setMinCircularAngle', 'setMinCircularEdgeLength', 'setCircularSegments',\n    'getCircularSegments', 'resetToCircularDefaults', 'Mesh', 'Manifold',\n    'CrossSection'\n];\n/**\n * An object that will evaluate ManifoldCAD scripts on demand.\n *\n * It inserts the Manifold instance (`module`) into the evaluation\n * context, as well as a selection of available methods.  Additional\n * properties can be inserted through `addContext`,\n * `addContextMethodWithCleanup` or can be directly added to the\n * `context` property.\n *\n * This class provides some simple garbage collection.  It does this by\n * intercepting calls to a white-list of functions, tracking new\n * instances of `Manifold` and `CrossSection`.  This way, users don't\n * have to care about calling `delete` manually.  Note that this only\n * fixes memory leak across different runs: the memory will only be freed\n * when `cleanup()` is called.\n *\n * @property context Additional objects inserted into the evaluation\n * context.\n * @property beforeScript Boilerplate script run before the supplied\n * code.\n * @property afterScript Boilerplate code run after the supplied code.\n */\nexport class Evaluator {\n    context = {};\n    beforeScript = 'resetToCircularDefaults();';\n    afterScript = 'return typeof result === \"undefined\" ? undefined : result;';\n    module = manifoldwasm;\n    memoryRegistry;\n    /**\n     * Construct a new evaluator.\n     */\n    constructor() {\n        this.memoryRegistry = new Array();\n        this.addMembers('Manifold', manifoldMemberFunctions, false);\n        this.addMembers('Manifold', manifoldStaticFunctions, true);\n        this.addMembers('CrossSection', crossSectionMemberFunctions, false);\n        this.addMembers('CrossSection', crossSectionStaticFunctions, true);\n    }\n    /**\n     * Intercept calls and add their results to our garbage collection\n     * list.\n     *\n     * @param className The class to intercept.\n     * @param methodNames An array of methods to intercept.\n     * @param areStatic Are these static methods?  If so, intercept them at\n     * the prototype level.\n     */\n    addMembers(className, methodNames, areStatic) {\n        //@ts-ignore\n        const cls = this.module[className];\n        const obj = areStatic ? cls : cls.prototype;\n        for (const name of methodNames) {\n            const originalFn = obj[name];\n            obj[name] = (...args) => {\n                //@ts-ignore\n                const result = originalFn(...args);\n                this.memoryRegistry.push(result);\n                return result;\n            };\n        }\n    }\n    /**\n     * Clear the evaluation context.\n     */\n    clearContext() {\n        this.context = {};\n    }\n    /**\n     * Add objects to the evaluation context.\n     *\n     * @param moreContext An object containing properties or methods.\n     */\n    addContext(moreContext) {\n        Object.assign(this.context, moreContext);\n    }\n    /**\n     * Add a method to the evaluation context, with cleanup.\n     *\n     * Calls to the method will be intercepted, and their results\n     * added to the cleanup list.  If your function does not\n     * generate new Manifold or CrossSection objects, you can\n     * add it to the context directly.\n     * @param name The name for the method in the context.\n     * @param originalFn The function to intercept and include.\n     */\n    addContextMethodWithCleanup(name, originalFn) {\n        this.context[name] = (...args) => {\n            //@ts-ignore\n            const result = originalFn(...args);\n            this.memoryRegistry.push(result);\n            return result;\n        };\n    }\n    /**\n     * Delete any objects tagged for garbage collection.\n     */\n    cleanup() {\n        for (const obj of this.memoryRegistry) {\n            // decompose result is an array of manifolds\n            if (obj instanceof Array)\n                for (const elem of obj)\n                    elem.delete();\n            else\n                obj.delete();\n        }\n        this.memoryRegistry.length = 0;\n    }\n    /**\n     * Evaluate a string as javascript code creating a Manifold model.\n     *\n     * This function assembles the final execution context.  It then runs\n     * `beforeScript`, `code` and `afterScript` in order.  Finally, it\n     * returns the end result.\n     *\n     * @param code The input string.\n     * @returns any By default, this script will return either `undefined`\n     * or a `Manifold` object.  Changing `afterScript` will affect this\n     * behaviour.\n     */\n    evaluate(code) {\n        const exposedFunctions = toplevel.map((name) => [name, this.module[name]]);\n        const context = {\n            ...Object.fromEntries(exposedFunctions),\n            module: this.module,\n            ...this.context\n        };\n        const evalFn = new Function(...Object.keys(context), this.beforeScript + '\\n' + code + '\\n' + this.afterScript + '\\n');\n        return evalFn(...Object.values(context));\n    }\n    /**\n     * Get the instantiated manifold WASM instance owned by this module.\n     *\n     * Note that function calls that have been intercepted for garbage\n     * collection will continue to be intercepted, even outside of the evaluator.\n     */\n    getModule() {\n        return this.module;\n    }\n}\n//# sourceMappingURL=evaluate.js.map","class EventDispatcher {\n  constructor() {\n    this._listeners = {};\n  }\n\n  addEventListener(type, listener) {\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n\n    return this;\n  }\n\n  removeEventListener(type, listener) {\n    const listeners = this._listeners;\n    const listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      const index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n\n    return this;\n  }\n\n  dispatchEvent(event) {\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      // Make a copy, in case listeners are removed while iterating.\n      const array = listenerArray.slice(0);\n\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n    }\n\n    return this;\n  }\n\n  dispose() {\n    for (const key in this._listeners) {\n      delete this._listeners[key];\n    }\n  }\n\n}\n\n/**\n * Represents a connection between two {@link GraphNode} resources in a {@link Graph}.\n *\n * The left node is considered the owner, and the right node the resource. The\n * owner is responsible for being able find and remove a reference to a resource, given\n * that link. The resource does not hold a reference to the link or to the owner,\n * although that reverse lookup can be done on the graph.\n */\nclass GraphEdge {\n  constructor(_name, _parent, _child, _attributes = {}) {\n    this._name = void 0;\n    this._parent = void 0;\n    this._child = void 0;\n    this._attributes = void 0;\n    this._disposed = false;\n    this._name = _name;\n    this._parent = _parent;\n    this._child = _child;\n    this._attributes = _attributes;\n\n    if (!_parent.isOnGraph(_child)) {\n      throw new Error('Cannot connect disconnected graphs.');\n    }\n  }\n  /** Name (attribute name from parent {@link GraphNode}). */\n\n\n  getName() {\n    return this._name;\n  }\n  /** Owner node. */\n\n\n  getParent() {\n    return this._parent;\n  }\n  /** Resource node. */\n\n\n  getChild() {\n    return this._child;\n  }\n  /**\n   * Sets the child node.\n   *\n   * @internal Only {@link Graph} implementations may safely call this method directly. Use\n   * \t{@link Property.swap} or {@link Graph.swapChild} instead.\n   */\n\n\n  setChild(child) {\n    this._child = child;\n    return this;\n  }\n  /** Attributes of the graph node relationship. */\n\n\n  getAttributes() {\n    return this._attributes;\n  }\n  /** Destroys a (currently intact) edge, updating both the graph and the owner. */\n\n\n  dispose() {\n    if (this._disposed) return; // @ts-expect-error GraphEdge doesn't know types of parent GraphNode.\n\n    this._parent._destroyRef(this);\n\n    this._disposed = true;\n  }\n  /** Whether this link has been destroyed. */\n\n\n  isDisposed() {\n    return this._disposed;\n  }\n\n}\n\n/**\n * A graph manages a network of {@link GraphNode} nodes, connected\n * by {@link @Link} edges.\n */\n\nclass Graph extends EventDispatcher {\n  constructor(...args) {\n    super(...args);\n    this._emptySet = new Set();\n    this._edges = new Set();\n    this._parentEdges = new Map();\n    this._childEdges = new Map();\n  }\n\n  /** Returns a list of all parent->child edges on this graph. */\n  listEdges() {\n    return Array.from(this._edges);\n  }\n  /** Returns a list of all edges on the graph having the given node as their child. */\n\n\n  listParentEdges(node) {\n    return Array.from(this._childEdges.get(node) || this._emptySet);\n  }\n  /** Returns a list of parent nodes for the given child node. */\n\n\n  listParents(node) {\n    const parentSet = new Set();\n\n    for (const edge of this.listParentEdges(node)) {\n      parentSet.add(edge.getParent());\n    }\n\n    return Array.from(parentSet);\n  }\n  /** Returns a list of all edges on the graph having the given node as their parent. */\n\n\n  listChildEdges(node) {\n    return Array.from(this._parentEdges.get(node) || this._emptySet);\n  }\n  /** Returns a list of child nodes for the given parent node. */\n\n\n  listChildren(node) {\n    const childSet = new Set();\n\n    for (const edge of this.listChildEdges(node)) {\n      childSet.add(edge.getChild());\n    }\n\n    return Array.from(childSet);\n  }\n\n  disconnectParents(node, filter) {\n    for (const edge of this.listParentEdges(node)) {\n      if (!filter || filter(edge.getParent())) {\n        edge.dispose();\n      }\n    }\n\n    return this;\n  }\n  /**********************************************************************************************\n   * Internal.\n   */\n\n  /**\n   * Creates a {@link GraphEdge} connecting two {@link GraphNode} instances. Edge is returned\n   * for the caller to store.\n   * @param a Owner\n   * @param b Resource\n   * @hidden\n   * @internal\n   */\n\n\n  _createEdge(name, a, b, attributes) {\n    const edge = new GraphEdge(name, a, b, attributes);\n\n    this._edges.add(edge);\n\n    const parent = edge.getParent();\n    if (!this._parentEdges.has(parent)) this._parentEdges.set(parent, new Set());\n\n    this._parentEdges.get(parent).add(edge);\n\n    const child = edge.getChild();\n    if (!this._childEdges.has(child)) this._childEdges.set(child, new Set());\n\n    this._childEdges.get(child).add(edge);\n\n    return edge;\n  }\n  /**\n   * Detaches a {@link GraphEdge} from the {@link Graph}. Before calling this\n   * method, ensure that the GraphEdge has first been detached from any\n   * associated {@link GraphNode} attributes.\n   * @hidden\n   * @internal\n   */\n\n\n  _destroyEdge(edge) {\n    this._edges.delete(edge);\n\n    this._parentEdges.get(edge.getParent()).delete(edge);\n\n    this._childEdges.get(edge.getChild()).delete(edge);\n\n    return this;\n  }\n\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * An ordered collection of {@link Ref Refs}, allowing duplicates. Removing\n * a Ref is an O(n) operation — use {@link RefSet} for faster removal, if\n * duplicates are not required.\n */\nclass RefList {\n  constructor(refs) {\n    this.list = [];\n\n    if (refs) {\n      for (const ref of refs) {\n        this.list.push(ref);\n      }\n    }\n  }\n\n  add(ref) {\n    this.list.push(ref);\n  }\n\n  remove(ref) {\n    const index = this.list.indexOf(ref);\n    if (index >= 0) this.list.splice(index, 1);\n  }\n\n  removeChild(child) {\n    const refs = [];\n\n    for (const ref of this.list) {\n      if (ref.getChild() === child) {\n        refs.push(ref);\n      }\n    }\n\n    for (const ref of refs) {\n      this.remove(ref);\n    }\n\n    return refs;\n  }\n\n  listRefsByChild(child) {\n    const refs = [];\n\n    for (const ref of this.list) {\n      if (ref.getChild() === child) {\n        refs.push(ref);\n      }\n    }\n\n    return refs;\n  }\n\n  values() {\n    return this.list;\n  }\n\n}\n/**\n * An ordered collection of {@link Ref Refs}, without duplicates. Adding or\n * removing a Ref is typically O(1) or O(log(n)), and faster than\n * {@link RefList}. If support for duplicates is required, use {@link RefList}.\n */\n\nclass RefSet {\n  constructor(refs) {\n    this.set = new Set();\n    this.map = new Map();\n\n    if (refs) {\n      for (const ref of refs) {\n        this.add(ref);\n      }\n    }\n  }\n\n  add(ref) {\n    const child = ref.getChild();\n    this.removeChild(child);\n    this.set.add(ref);\n    this.map.set(child, ref);\n  }\n\n  remove(ref) {\n    this.set.delete(ref);\n    this.map.delete(ref.getChild());\n  }\n\n  removeChild(child) {\n    const ref = this.map.get(child) || null;\n    if (ref) this.remove(ref);\n    return ref;\n  }\n\n  getRefByChild(child) {\n    return this.map.get(child) || null;\n  }\n\n  values() {\n    return Array.from(this.set);\n  }\n\n}\n/**\n * Map (or dictionary) from string keys to {@link Ref Refs}.\n */\n\nclass RefMap {\n  constructor(map) {\n    this.map = {};\n\n    if (map) {\n      Object.assign(this.map, map);\n    }\n  }\n\n  set(key, child) {\n    this.map[key] = child;\n  }\n\n  delete(key) {\n    delete this.map[key];\n  }\n\n  get(key) {\n    return this.map[key] || null;\n  }\n\n  keys() {\n    return Object.keys(this.map);\n  }\n\n  values() {\n    return Object.values(this.map);\n  }\n\n}\n\nconst $attributes = Symbol('attributes');\nconst $immutableKeys = Symbol('immutableKeys');\n/**\n * Represents a node in a {@link Graph}.\n */\n\nclass GraphNode extends EventDispatcher {\n  /**\n   * Internal graph used to search and maintain references.\n   * @hidden\n   */\n\n  /**\n   * Attributes (literal values and GraphNode references) associated with this instance. For each\n   * GraphNode reference, the attributes stores a {@link GraphEdge}. List and Map references are\n   * stored as arrays and dictionaries of edges.\n   * @internal\n   */\n\n  /**\n   * Attributes included with `getDefaultAttributes` are considered immutable, and cannot be\n   * modifed by `.setRef()`, `.copy()`, or other GraphNode methods. Both the edges and the\n   * properties will be disposed with the parent GraphNode.\n   *\n   * Currently, only single-edge references (getRef/setRef) are supported as immutables.\n   *\n   * @internal\n   */\n  constructor(graph) {\n    super();\n    this._disposed = false;\n    this.graph = void 0;\n    this[$attributes] = void 0;\n    this[$immutableKeys] = void 0;\n    this.graph = graph;\n    this[$immutableKeys] = new Set();\n    this[$attributes] = this._createAttributes();\n  }\n  /**\n   * Returns default attributes for the graph node. Subclasses having any attributes (either\n   * literal values or references to other graph nodes) must override this method. Literal\n   * attributes should be given their default values, if any. References should generally be\n   * initialized as empty (Ref → null, RefList → [], RefMap → {}) and then modified by setters.\n   *\n   * Any single-edge references (setRef) returned by this method will be considered immutable,\n   * to be owned by and disposed with the parent node. Multi-edge references (addRef, removeRef,\n   * setRefMap) cannot be returned as default attributes.\n   */\n\n\n  getDefaults() {\n    return {};\n  }\n  /**\n   * Constructs and returns an object used to store a graph nodes attributes. Compared to the\n   * default Attributes interface, this has two distinctions:\n   *\n   * 1. Slots for GraphNode<T> objects are replaced with slots for GraphEdge<this, GraphNode<T>>\n   * 2. GraphNode<T> objects provided as defaults are considered immutable\n   *\n   * @internal\n   */\n\n\n  _createAttributes() {\n    const defaultAttributes = this.getDefaults();\n    const attributes = {};\n\n    for (const key in defaultAttributes) {\n      const value = defaultAttributes[key]; // TODO(design): With Ref, RefList, and RefMap types, should users\n      // be able to pass them all here? Listeners must be added.\n\n      if (value instanceof GraphNode) {\n        const ref = this.graph._createEdge(key, this, value);\n\n        this[$immutableKeys].add(key);\n        attributes[key] = ref;\n      } else {\n        attributes[key] = value;\n      }\n    }\n\n    return attributes;\n  }\n  /** @internal Returns true if two nodes are on the same {@link Graph}. */\n\n\n  isOnGraph(other) {\n    return this.graph === other.graph;\n  }\n  /** Returns true if the node has been permanently removed from the graph. */\n\n\n  isDisposed() {\n    return this._disposed;\n  }\n  /**\n   * Removes both inbound references to and outbound references from this object. At the end\n   * of the process the object holds no references, and nothing holds references to it. A\n   * disposed object is not reusable.\n   */\n\n\n  dispose() {\n    if (this._disposed) return;\n    this.graph.listChildEdges(this).forEach(edge => edge.dispose());\n    this.graph.disconnectParents(this);\n    this._disposed = true;\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n  /**\n   * Removes all inbound references to this object. At the end of the process the object is\n   * considered 'detached': it may hold references to child resources, but nothing holds\n   * references to it. A detached object may be re-attached.\n   */\n\n\n  detach() {\n    this.graph.disconnectParents(this);\n    return this;\n  }\n  /**\n   * Transfers this object's references from the old node to the new one. The old node is fully\n   * detached from this parent at the end of the process.\n   *\n   * @hidden\n   */\n\n\n  swap(prevValue, nextValue) {\n    for (const attribute in this[$attributes]) {\n      const value = this[$attributes][attribute];\n\n      if (value instanceof GraphEdge) {\n        const ref = value;\n\n        if (ref.getChild() === prevValue) {\n          this.setRef(attribute, nextValue, ref.getAttributes());\n        }\n      } else if (value instanceof RefList) {\n        for (const ref of value.listRefsByChild(prevValue)) {\n          const refAttributes = ref.getAttributes();\n          this.removeRef(attribute, prevValue);\n          this.addRef(attribute, nextValue, refAttributes);\n        }\n      } else if (value instanceof RefSet) {\n        const ref = value.getRefByChild(prevValue);\n\n        if (ref) {\n          const refAttributes = ref.getAttributes();\n          this.removeRef(attribute, prevValue);\n          this.addRef(attribute, nextValue, refAttributes);\n        }\n      } else if (value instanceof RefMap) {\n        for (const key of value.keys()) {\n          const ref = value.get(key);\n\n          if (ref.getChild() === prevValue) {\n            this.setRefMap(attribute, key, nextValue, ref.getAttributes());\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n  /**********************************************************************************************\n   * Literal attributes.\n   */\n\n  /** @hidden */\n\n\n  get(attribute) {\n    return this[$attributes][attribute];\n  }\n  /** @hidden */\n\n\n  set(attribute, value) {\n    this[$attributes][attribute] = value;\n    return this.dispatchEvent({\n      type: 'change',\n      attribute\n    });\n  }\n  /**********************************************************************************************\n   * Ref: 1:1 graph node references.\n   */\n\n  /** @hidden */\n\n\n  getRef(attribute) {\n    const ref = this[$attributes][attribute];\n    return ref ? ref.getChild() : null;\n  }\n  /** @hidden */\n\n\n  setRef(attribute, value, attributes) {\n    if (this[$immutableKeys].has(attribute)) {\n      throw new Error(`Cannot overwrite immutable attribute, \"${attribute}\".`);\n    }\n\n    const prevRef = this[$attributes][attribute];\n    if (prevRef) prevRef.dispose(); // TODO(cleanup): Possible duplicate event.\n\n    if (!value) return this;\n\n    const ref = this.graph._createEdge(attribute, this, value, attributes);\n\n    this[$attributes][attribute] = ref;\n    return this.dispatchEvent({\n      type: 'change',\n      attribute\n    });\n  }\n  /**********************************************************************************************\n   * RefList: 1:many graph node references.\n   */\n\n  /** @hidden */\n\n\n  listRefs(attribute) {\n    const refs = this.assertRefList(attribute);\n    return refs.values().map(ref => ref.getChild());\n  }\n  /** @hidden */\n\n\n  addRef(attribute, value, attributes) {\n    const ref = this.graph._createEdge(attribute, this, value, attributes);\n\n    const refs = this.assertRefList(attribute);\n    refs.add(ref);\n    return this.dispatchEvent({\n      type: 'change',\n      attribute\n    });\n  }\n  /** @hidden */\n\n\n  removeRef(attribute, value) {\n    const refs = this.assertRefList(attribute);\n\n    if (refs instanceof RefList) {\n      for (const ref of refs.listRefsByChild(value)) {\n        ref.dispose();\n      }\n    } else {\n      const ref = refs.getRefByChild(value);\n      if (ref) ref.dispose();\n    }\n\n    return this;\n  }\n  /** @hidden */\n\n\n  assertRefList(attribute) {\n    const refs = this[$attributes][attribute];\n\n    if (refs instanceof RefList || refs instanceof RefSet) {\n      return refs;\n    } // TODO(v3) Remove warning.\n\n\n    throw new Error(`Expected RefList or RefSet for attribute \"${attribute}\"`);\n  }\n  /**********************************************************************************************\n   * RefMap: Named 1:many (map) graph node references.\n   */\n\n  /** @hidden */\n\n\n  listRefMapKeys(attribute) {\n    return this.assertRefMap(attribute).keys();\n  }\n  /** @hidden */\n\n\n  listRefMapValues(attribute) {\n    return this.assertRefMap(attribute).values().map(ref => ref.getChild());\n  }\n  /** @hidden */\n\n\n  getRefMap(attribute, key) {\n    const refMap = this.assertRefMap(attribute);\n    const ref = refMap.get(key);\n    return ref ? ref.getChild() : null;\n  }\n  /** @hidden */\n\n\n  setRefMap(attribute, key, value, metadata) {\n    const refMap = this.assertRefMap(attribute);\n    const prevRef = refMap.get(key);\n    if (prevRef) prevRef.dispose(); // TODO(cleanup): Possible duplicate event.\n\n    if (!value) return this;\n    metadata = Object.assign(metadata || {}, {\n      key: key\n    });\n\n    const ref = this.graph._createEdge(attribute, this, value, _extends({}, metadata, {\n      key\n    }));\n\n    refMap.set(key, ref);\n    return this.dispatchEvent({\n      type: 'change',\n      attribute,\n      key\n    });\n  }\n  /** @hidden */\n\n\n  assertRefMap(attribute) {\n    const map = this[$attributes][attribute];\n\n    if (map instanceof RefMap) {\n      return map;\n    } // TODO(v3) Remove warning.\n\n\n    throw new Error(`Expected RefMap for attribute \"${attribute}\"`);\n  }\n  /**********************************************************************************************\n   * Events.\n   */\n\n  /**\n   * Dispatches an event on the GraphNode, and on the associated\n   * Graph. Event types on the graph are prefixed, `\"node:[type]\"`.\n   */\n\n\n  dispatchEvent(event) {\n    super.dispatchEvent(_extends({}, event, {\n      target: this\n    }));\n    this.graph.dispatchEvent(_extends({}, event, {\n      target: this,\n      type: `node:${event.type}`\n    }));\n    return this;\n  }\n  /**********************************************************************************************\n   * Internal.\n   */\n\n  /** @hidden */\n\n\n  _destroyRef(ref) {\n    const attribute = ref.getName();\n\n    if (this[$attributes][attribute] === ref) {\n      this[$attributes][attribute] = null; // TODO(design): See _createAttributes().\n\n      if (this[$immutableKeys].has(attribute)) ref.getChild().dispose();\n    } else if (this[$attributes][attribute] instanceof RefList) {\n      this[$attributes][attribute].remove(ref);\n    } else if (this[$attributes][attribute] instanceof RefSet) {\n      this[$attributes][attribute].remove(ref);\n    } else if (this[$attributes][attribute] instanceof RefMap) {\n      const refMap = this[$attributes][attribute];\n\n      for (const key of refMap.keys()) {\n        if (refMap.get(key) === ref) {\n          refMap.delete(key);\n        }\n      }\n    } else {\n      return;\n    }\n\n    this.graph._destroyEdge(ref);\n\n    this.dispatchEvent({\n      type: 'change',\n      attribute\n    });\n  }\n\n}\n\nexport { $attributes, $immutableKeys, EventDispatcher, Graph, GraphEdge, GraphNode, RefList, RefMap, RefSet };\n//# sourceMappingURL=property-graph.modern.js.map\n","import { GraphNode, $attributes, GraphEdge, $immutableKeys, RefList, RefSet, RefMap, Graph } from 'property-graph';\nexport { Graph, GraphEdge, RefList, RefMap, RefSet } from 'property-graph';\n\n/**\n * Current version of the package.\n * @hidden\n */\nconst VERSION = `v${\"4.2.1\"}`;\n/** @hidden */\nconst GLB_BUFFER = '@glb.bin';\n/** String IDs for core {@link Property} types. */\nvar PropertyType;\n(function (PropertyType) {\n  PropertyType[\"ACCESSOR\"] = \"Accessor\";\n  PropertyType[\"ANIMATION\"] = \"Animation\";\n  PropertyType[\"ANIMATION_CHANNEL\"] = \"AnimationChannel\";\n  PropertyType[\"ANIMATION_SAMPLER\"] = \"AnimationSampler\";\n  PropertyType[\"BUFFER\"] = \"Buffer\";\n  PropertyType[\"CAMERA\"] = \"Camera\";\n  PropertyType[\"MATERIAL\"] = \"Material\";\n  PropertyType[\"MESH\"] = \"Mesh\";\n  PropertyType[\"PRIMITIVE\"] = \"Primitive\";\n  PropertyType[\"PRIMITIVE_TARGET\"] = \"PrimitiveTarget\";\n  PropertyType[\"NODE\"] = \"Node\";\n  PropertyType[\"ROOT\"] = \"Root\";\n  PropertyType[\"SCENE\"] = \"Scene\";\n  PropertyType[\"SKIN\"] = \"Skin\";\n  PropertyType[\"TEXTURE\"] = \"Texture\";\n  PropertyType[\"TEXTURE_INFO\"] = \"TextureInfo\";\n})(PropertyType || (PropertyType = {}));\n/** Vertex layout method. */\nvar VertexLayout;\n(function (VertexLayout) {\n  /**\n   * Stores vertex attributes in a single buffer view per mesh primitive. Interleaving vertex\n   * data may improve performance by reducing page-thrashing in GPU memory.\n   */\n  VertexLayout[\"INTERLEAVED\"] = \"interleaved\";\n  /**\n   * Stores each vertex attribute in a separate buffer view. May decrease performance by causing\n   * page-thrashing in GPU memory. Some 3D engines may prefer this layout, e.g. for simplicity.\n   */\n  VertexLayout[\"SEPARATE\"] = \"separate\";\n})(VertexLayout || (VertexLayout = {}));\n/** Accessor usage. */\nvar BufferViewUsage$1;\n(function (BufferViewUsage) {\n  BufferViewUsage[\"ARRAY_BUFFER\"] = \"ARRAY_BUFFER\";\n  BufferViewUsage[\"ELEMENT_ARRAY_BUFFER\"] = \"ELEMENT_ARRAY_BUFFER\";\n  BufferViewUsage[\"INVERSE_BIND_MATRICES\"] = \"INVERSE_BIND_MATRICES\";\n  BufferViewUsage[\"OTHER\"] = \"OTHER\";\n  BufferViewUsage[\"SPARSE\"] = \"SPARSE\";\n})(BufferViewUsage$1 || (BufferViewUsage$1 = {}));\n/** Texture channels. */\nvar TextureChannel;\n(function (TextureChannel) {\n  TextureChannel[TextureChannel[\"R\"] = 4096] = \"R\";\n  TextureChannel[TextureChannel[\"G\"] = 256] = \"G\";\n  TextureChannel[TextureChannel[\"B\"] = 16] = \"B\";\n  TextureChannel[TextureChannel[\"A\"] = 1] = \"A\";\n})(TextureChannel || (TextureChannel = {}));\nvar Format;\n(function (Format) {\n  Format[\"GLTF\"] = \"GLTF\";\n  Format[\"GLB\"] = \"GLB\";\n})(Format || (Format = {}));\nconst ComponentTypeToTypedArray = {\n  '5120': Int8Array,\n  '5121': Uint8Array,\n  '5122': Int16Array,\n  '5123': Uint16Array,\n  '5125': Uint32Array,\n  '5126': Float32Array\n};\n\n/**\n * *Common utilities for working with Uint8Array and Buffer objects.*\n *\n * @category Utilities\n */\nclass BufferUtils {\n  /** Creates a byte array from a Data URI. */\n  static createBufferFromDataURI(dataURI) {\n    if (typeof Buffer === 'undefined') {\n      // Browser.\n      const byteString = atob(dataURI.split(',')[1]);\n      const ia = new Uint8Array(byteString.length);\n      for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n      }\n      return ia;\n    } else {\n      // Node.js.\n      const data = dataURI.split(',')[1];\n      const isBase64 = dataURI.indexOf('base64') >= 0;\n      return Buffer.from(data, isBase64 ? 'base64' : 'utf8');\n    }\n  }\n  /** Encodes text to a byte array. */\n  static encodeText(text) {\n    return new TextEncoder().encode(text);\n  }\n  /** Decodes a byte array to text. */\n  static decodeText(array) {\n    return new TextDecoder().decode(array);\n  }\n  /**\n   * Concatenates N byte arrays.\n   */\n  static concat(arrays) {\n    let totalByteLength = 0;\n    for (const array of arrays) {\n      totalByteLength += array.byteLength;\n    }\n    const result = new Uint8Array(totalByteLength);\n    let byteOffset = 0;\n    for (const array of arrays) {\n      result.set(array, byteOffset);\n      byteOffset += array.byteLength;\n    }\n    return result;\n  }\n  /**\n   * Pads a Uint8Array to the next 4-byte boundary.\n   *\n   * Reference: [glTF → Data Alignment](https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment)\n   */\n  static pad(srcArray, paddingByte = 0) {\n    const paddedLength = this.padNumber(srcArray.byteLength);\n    if (paddedLength === srcArray.byteLength) return srcArray;\n    const dstArray = new Uint8Array(paddedLength);\n    dstArray.set(srcArray);\n    if (paddingByte !== 0) {\n      for (let i = srcArray.byteLength; i < paddedLength; i++) {\n        dstArray[i] = paddingByte;\n      }\n    }\n    return dstArray;\n  }\n  /** Pads a number to 4-byte boundaries. */\n  static padNumber(v) {\n    return Math.ceil(v / 4) * 4;\n  }\n  /** Returns true if given byte array instances are equal. */\n  static equals(a, b) {\n    if (a === b) return true;\n    if (a.byteLength !== b.byteLength) return false;\n    let i = a.byteLength;\n    while (i--) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  /**\n   * Returns a Uint8Array view of a typed array, with the same underlying ArrayBuffer.\n   *\n   * A shorthand for:\n   *\n   * ```js\n   * const buffer = new Uint8Array(\n   * \tarray.buffer,\n   * \tarray.byteOffset + byteOffset,\n   * \tMath.min(array.byteLength, byteLength)\n   * );\n   * ```\n   *\n   */\n  static toView(a, byteOffset = 0, byteLength = Infinity) {\n    return new Uint8Array(a.buffer, a.byteOffset + byteOffset, Math.min(a.byteLength, byteLength));\n  }\n  static assertView(view) {\n    if (view && !ArrayBuffer.isView(view)) {\n      throw new Error(`Method requires Uint8Array parameter; received \"${typeof view}\".`);\n    }\n    return view;\n  }\n}\n\n/**\n * *Common utilities for working with colors in vec3, vec4, or hexadecimal form.*\n *\n * Provides methods to convert linear components (vec3, vec4) to sRGB hex values. All colors in\n * the glTF specification, excluding color textures, are linear. Hexadecimal values, in sRGB\n * colorspace, are accessible through helper functions in the API as a convenience.\n *\n * ```typescript\n * // Hex (sRGB) to factor (linear).\n * const factor = ColorUtils.hexToFactor(0xFFCCCC, []);\n *\n * // Factor (linear) to hex (sRGB).\n * const hex = ColorUtils.factorToHex([1, .25, .25])\n * ```\n *\n * @category Utilities\n */\nclass ColorUtils {\n  /**\n   * Converts sRGB hexadecimal to linear components.\n   * @typeParam T vec3 or vec4 linear components.\n   */\n  static hexToFactor(hex, target) {\n    hex = Math.floor(hex);\n    const _target = target;\n    _target[0] = (hex >> 16 & 255) / 255;\n    _target[1] = (hex >> 8 & 255) / 255;\n    _target[2] = (hex & 255) / 255;\n    return this.convertSRGBToLinear(target, target);\n  }\n  /**\n   * Converts linear components to sRGB hexadecimal.\n   * @typeParam T vec3 or vec4 linear components.\n   */\n  static factorToHex(factor) {\n    const target = [...factor];\n    const [r, g, b] = this.convertLinearToSRGB(factor, target);\n    return r * 255 << 16 ^ g * 255 << 8 ^ b * 255 << 0;\n  }\n  /**\n   * Converts sRGB components to linear components.\n   * @typeParam T vec3 or vec4 linear components.\n   */\n  static convertSRGBToLinear(source, target) {\n    const _source = source;\n    const _target = target;\n    for (let i = 0; i < 3; i++) {\n      _target[i] = _source[i] < 0.04045 ? _source[i] * 0.0773993808 : Math.pow(_source[i] * 0.9478672986 + 0.0521327014, 2.4);\n    }\n    return target;\n  }\n  /**\n   * Converts linear components to sRGB components.\n   * @typeParam T vec3 or vec4 linear components.\n   */\n  static convertLinearToSRGB(source, target) {\n    const _source = source;\n    const _target = target;\n    for (let i = 0; i < 3; i++) {\n      _target[i] = _source[i] < 0.0031308 ? _source[i] * 12.92 : 1.055 * Math.pow(_source[i], 0.41666) - 0.055;\n    }\n    return target;\n  }\n}\n\n/** JPEG image support. */\nclass JPEGImageUtils {\n  match(array) {\n    return array.length >= 3 && array[0] === 255 && array[1] === 216 && array[2] === 255;\n  }\n  getSize(array) {\n    // Skip 4 chars, they are for signature\n    let view = new DataView(array.buffer, array.byteOffset + 4);\n    let i, next;\n    while (view.byteLength) {\n      // read length of the next block\n      i = view.getUint16(0, false);\n      // i = buffer.readUInt16BE(0);\n      // ensure correct format\n      validateJPEGBuffer(view, i);\n      // 0xFFC0 is baseline standard(SOF)\n      // 0xFFC1 is baseline optimized(SOF)\n      // 0xFFC2 is progressive(SOF2)\n      next = view.getUint8(i + 1);\n      if (next === 0xc0 || next === 0xc1 || next === 0xc2) {\n        return [view.getUint16(i + 7, false), view.getUint16(i + 5, false)];\n      }\n      // move to the next block\n      view = new DataView(array.buffer, view.byteOffset + i + 2);\n    }\n    throw new TypeError('Invalid JPG, no size found');\n  }\n  getChannels(_buffer) {\n    return 3;\n  }\n}\n/**\n * PNG image support.\n *\n * PNG signature: 'PNG\\r\\n\\x1a\\n'\n * PNG image header chunk name: 'IHDR'\n */\nclass PNGImageUtils {\n  match(array) {\n    return array.length >= 8 && array[0] === 0x89 && array[1] === 0x50 && array[2] === 0x4e && array[3] === 0x47 && array[4] === 0x0d && array[5] === 0x0a && array[6] === 0x1a && array[7] === 0x0a;\n  }\n  getSize(array) {\n    const view = new DataView(array.buffer, array.byteOffset);\n    const magic = BufferUtils.decodeText(array.slice(12, 16));\n    if (magic === PNGImageUtils.PNG_FRIED_CHUNK_NAME) {\n      return [view.getUint32(32, false), view.getUint32(36, false)];\n    }\n    return [view.getUint32(16, false), view.getUint32(20, false)];\n  }\n  getChannels(_buffer) {\n    return 4;\n  }\n}\n/**\n * *Common utilities for working with image data.*\n *\n * @category Utilities\n */\n// Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\nPNGImageUtils.PNG_FRIED_CHUNK_NAME = 'CgBI';\nclass ImageUtils {\n  /** Registers support for a new image format; useful for certain extensions. */\n  static registerFormat(mimeType, impl) {\n    this.impls[mimeType] = impl;\n  }\n  /**\n   * Returns detected MIME type of the given image buffer. Note that for image\n   * formats with support provided by extensions, the extension must be\n   * registered with an I/O class before it can be detected by ImageUtils.\n   */\n  static getMimeType(buffer) {\n    for (const mimeType in this.impls) {\n      if (this.impls[mimeType].match(buffer)) {\n        return mimeType;\n      }\n    }\n    return null;\n  }\n  /** Returns the dimensions of the image. */\n  static getSize(buffer, mimeType) {\n    if (!this.impls[mimeType]) return null;\n    return this.impls[mimeType].getSize(buffer);\n  }\n  /**\n   * Returns a conservative estimate of the number of channels in the image. For some image\n   * formats, the method may return 4 indicating the possibility of an alpha channel, without\n   * the ability to guarantee that an alpha channel is present.\n   */\n  static getChannels(buffer, mimeType) {\n    if (!this.impls[mimeType]) return null;\n    return this.impls[mimeType].getChannels(buffer);\n  }\n  /** Returns a conservative estimate of the GPU memory required by this image. */\n  static getVRAMByteLength(buffer, mimeType) {\n    if (!this.impls[mimeType]) return null;\n    if (this.impls[mimeType].getVRAMByteLength) {\n      return this.impls[mimeType].getVRAMByteLength(buffer);\n    }\n    let uncompressedBytes = 0;\n    const channels = 4; // See https://github.com/donmccurdy/glTF-Transform/issues/151.\n    const resolution = this.getSize(buffer, mimeType);\n    if (!resolution) return null;\n    while (resolution[0] > 1 || resolution[1] > 1) {\n      uncompressedBytes += resolution[0] * resolution[1] * channels;\n      resolution[0] = Math.max(Math.floor(resolution[0] / 2), 1);\n      resolution[1] = Math.max(Math.floor(resolution[1] / 2), 1);\n    }\n    uncompressedBytes += 1 * 1 * channels;\n    return uncompressedBytes;\n  }\n  /** Returns the preferred file extension for the given MIME type. */\n  static mimeTypeToExtension(mimeType) {\n    if (mimeType === 'image/jpeg') return 'jpg';\n    return mimeType.split('/').pop();\n  }\n  /** Returns the MIME type for the given file extension. */\n  static extensionToMimeType(extension) {\n    if (extension === 'jpg') return 'image/jpeg';\n    if (!extension) return '';\n    return `image/${extension}`;\n  }\n}\nImageUtils.impls = {\n  'image/jpeg': new JPEGImageUtils(),\n  'image/png': new PNGImageUtils()\n};\nfunction validateJPEGBuffer(view, i) {\n  // index should be within buffer limits\n  if (i > view.byteLength) {\n    throw new TypeError('Corrupt JPG, exceeded buffer limits');\n  }\n  // Every JPEG block must begin with a 0xFF\n  if (view.getUint8(i) !== 0xff) {\n    throw new TypeError('Invalid JPG, marker table corrupted');\n  }\n  return view;\n}\n\n/**\n * *Utility class for working with file systems and URI paths.*\n *\n * @category Utilities\n */\nclass FileUtils {\n  /**\n   * Extracts the basename from a file path, e.g. \"folder/model.glb\" -> \"model\".\n   * See: {@link HTTPUtils.basename}\n   */\n  static basename(uri) {\n    const fileName = uri.split(/[\\\\/]/).pop();\n    return fileName.substring(0, fileName.lastIndexOf('.'));\n  }\n  /**\n   * Extracts the extension from a file path, e.g. \"folder/model.glb\" -> \"glb\".\n   * See: {@link HTTPUtils.extension}\n   */\n  static extension(uri) {\n    if (uri.startsWith('data:image/')) {\n      const mimeType = uri.match(/data:(image\\/\\w+)/)[1];\n      return ImageUtils.mimeTypeToExtension(mimeType);\n    } else if (uri.startsWith('data:model/gltf+json')) {\n      return 'gltf';\n    } else if (uri.startsWith('data:model/gltf-binary')) {\n      return 'glb';\n    } else if (uri.startsWith('data:application/')) {\n      return 'bin';\n    }\n    return uri.split(/[\\\\/]/).pop().split(/[.]/).pop();\n  }\n}\n\n/**\n * Common utilities\n * @module glMatrix\n */\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(3);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\n(function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n\n/** @hidden Implemented in /core for use by /extensions, publicly exported from /functions. */\nfunction getBounds(node) {\n  const resultBounds = createBounds();\n  const parents = node.propertyType === PropertyType.NODE ? [node] : node.listChildren();\n  for (const parent of parents) {\n    parent.traverse(node => {\n      const mesh = node.getMesh();\n      if (!mesh) return;\n      // Compute mesh bounds and update result.\n      const meshBounds = getMeshBounds(mesh, node.getWorldMatrix());\n      if (meshBounds.min.every(isFinite) && meshBounds.max.every(isFinite)) {\n        expandBounds(meshBounds.min, resultBounds);\n        expandBounds(meshBounds.max, resultBounds);\n      }\n    });\n  }\n  return resultBounds;\n}\n/** Computes mesh bounds in world space. */\nfunction getMeshBounds(mesh, worldMatrix) {\n  const meshBounds = createBounds();\n  // We can't transform a local AABB into world space and still have a tight AABB in world space,\n  // so we need to compute the world AABB vertex by vertex here.\n  for (const prim of mesh.listPrimitives()) {\n    const position = prim.getAttribute('POSITION');\n    const indices = prim.getIndices();\n    if (!position) continue;\n    let localPos = [0, 0, 0];\n    let worldPos = [0, 0, 0];\n    for (let i = 0, il = indices ? indices.getCount() : position.getCount(); i < il; i++) {\n      const index = indices ? indices.getScalar(i) : i;\n      localPos = position.getElement(index, localPos);\n      worldPos = transformMat4(worldPos, localPos, worldMatrix);\n      expandBounds(worldPos, meshBounds);\n    }\n  }\n  return meshBounds;\n}\n/** Expands bounds of target by given source. */\nfunction expandBounds(point, target) {\n  for (let i = 0; i < 3; i++) {\n    target.min[i] = Math.min(point[i], target.min[i]);\n    target.max[i] = Math.max(point[i], target.max[i]);\n  }\n}\n/** Creates new bounds with min=Infinity, max=-Infinity. */\nfunction createBounds() {\n  return {\n    min: [Infinity, Infinity, Infinity],\n    max: [-Infinity, -Infinity, -Infinity]\n  };\n}\n\n// Need a placeholder domain to construct a URL from a relative path. We only\n// access `url.pathname`, so the domain doesn't matter.\nconst NULL_DOMAIN = 'https://null.example';\n/**\n * *Utility class for working with URLs.*\n *\n * @category Utilities\n */\nclass HTTPUtils {\n  static dirname(path) {\n    const index = path.lastIndexOf('/');\n    if (index === -1) return './';\n    return path.substring(0, index + 1);\n  }\n  /**\n   * Extracts the basename from a URL, e.g. \"folder/model.glb\" -> \"model\".\n   * See: {@link FileUtils.basename}\n   */\n  static basename(uri) {\n    return FileUtils.basename(new URL(uri, NULL_DOMAIN).pathname);\n  }\n  /**\n   * Extracts the extension from a URL, e.g. \"folder/model.glb\" -> \"glb\".\n   * See: {@link FileUtils.extension}\n   */\n  static extension(uri) {\n    return FileUtils.extension(new URL(uri, NULL_DOMAIN).pathname);\n  }\n  static resolve(base, path) {\n    if (!this.isRelativePath(path)) return path;\n    const stack = base.split('/');\n    const parts = path.split('/');\n    stack.pop();\n    for (let i = 0; i < parts.length; i++) {\n      if (parts[i] === '.') continue;\n      if (parts[i] === '..') {\n        stack.pop();\n      } else {\n        stack.push(parts[i]);\n      }\n    }\n    return stack.join('/');\n  }\n  /**\n   * Returns true for URLs containing a protocol, and false for both\n   * absolute and relative paths.\n   */\n  static isAbsoluteURL(path) {\n    return this.PROTOCOL_REGEXP.test(path);\n  }\n  /**\n   * Returns true for paths that are declared relative to some unknown base\n   * path. For example, \"foo/bar/\" is relative both \"/foo/bar/\" is not.\n   */\n  static isRelativePath(path) {\n    return !/^(?:[a-zA-Z]+:)?\\//.test(path);\n  }\n}\nHTTPUtils.DEFAULT_INIT = {};\nHTTPUtils.PROTOCOL_REGEXP = /^[a-zA-Z]+:\\/\\//;\n\n// Reference: https://github.com/jonschlinkert/is-plain-object\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\nfunction isPlainObject(o) {\n  if (isObject(o) === false) return false;\n  // If has modified constructor\n  const ctor = o.constructor;\n  if (ctor === undefined) return true;\n  // If has modified prototype\n  const prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n  // If constructor does not have an Object-specific method\n  if (Object.hasOwn(prot, 'isPrototypeOf') === false) {\n    return false;\n  }\n  // Most likely a plain Object\n  return true;\n}\n\nvar _Logger;\n/** Logger verbosity thresholds. */\nvar Verbosity;\n(function (Verbosity) {\n  /** No events are logged. */\n  Verbosity[Verbosity[\"SILENT\"] = 4] = \"SILENT\";\n  /** Only error events are logged. */\n  Verbosity[Verbosity[\"ERROR\"] = 3] = \"ERROR\";\n  /** Only error and warn events are logged. */\n  Verbosity[Verbosity[\"WARN\"] = 2] = \"WARN\";\n  /** Only error, warn, and info events are logged. (DEFAULT) */\n  Verbosity[Verbosity[\"INFO\"] = 1] = \"INFO\";\n  /** All events are logged. */\n  Verbosity[Verbosity[\"DEBUG\"] = 0] = \"DEBUG\";\n})(Verbosity || (Verbosity = {}));\n/**\n * *Logger utility class.*\n *\n * @category Utilities\n */\nclass Logger {\n  /** Constructs a new Logger instance. */\n  constructor(verbosity) {\n    this.verbosity = void 0;\n    this.verbosity = verbosity;\n  }\n  /** Logs an event at level {@link Logger.Verbosity.DEBUG}. */\n  debug(text) {\n    if (this.verbosity <= Logger.Verbosity.DEBUG) {\n      console.debug(text);\n    }\n  }\n  /** Logs an event at level {@link Logger.Verbosity.INFO}. */\n  info(text) {\n    if (this.verbosity <= Logger.Verbosity.INFO) {\n      console.info(text);\n    }\n  }\n  /** Logs an event at level {@link Logger.Verbosity.WARN}. */\n  warn(text) {\n    if (this.verbosity <= Logger.Verbosity.WARN) {\n      console.warn(text);\n    }\n  }\n  /** Logs an event at level {@link Logger.Verbosity.ERROR}. */\n  error(text) {\n    if (this.verbosity <= Logger.Verbosity.ERROR) {\n      console.error(text);\n    }\n  }\n}\n_Logger = Logger;\n/** Logger verbosity thresholds. */\nLogger.Verbosity = Verbosity;\n/** Default logger instance. */\nLogger.DEFAULT_INSTANCE = new _Logger(_Logger.Verbosity.INFO);\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/** @hidden */\nclass MathUtils {\n  static identity(v) {\n    return v;\n  }\n  static eq(a, b, tolerance = 10e-6) {\n    if (a.length !== b.length) return false;\n    for (let i = 0; i < a.length; i++) {\n      if (Math.abs(a[i] - b[i]) > tolerance) return false;\n    }\n    return true;\n  }\n  static clamp(value, min, max) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n  }\n  // TODO(perf): Compare performance if we replace the switch with individual functions.\n  static decodeNormalizedInt(i, componentType) {\n    // Hardcode enums from accessor.ts to avoid a circular dependency.\n    switch (componentType) {\n      case 5126:\n        // FLOAT\n        return i;\n      case 5123:\n        // UNSIGNED_SHORT\n        return i / 65535.0;\n      case 5121:\n        // UNSIGNED_BYTE\n        return i / 255.0;\n      case 5122:\n        // SHORT\n        return Math.max(i / 32767.0, -1.0);\n      case 5120:\n        // BYTE\n        return Math.max(i / 127.0, -1.0);\n      default:\n        throw new Error('Invalid component type.');\n    }\n  }\n  // TODO(perf): Compare performance if we replace the switch with individual functions.\n  static encodeNormalizedInt(f, componentType) {\n    // Hardcode enums from accessor.ts to avoid a circular dependency.\n    switch (componentType) {\n      case 5126:\n        // FLOAT\n        return f;\n      case 5123:\n        // UNSIGNED_SHORT\n        return Math.round(MathUtils.clamp(f, 0, 1) * 65535.0);\n      case 5121:\n        // UNSIGNED_BYTE\n        return Math.round(MathUtils.clamp(f, 0, 1) * 255.0);\n      case 5122:\n        // SHORT\n        return Math.round(MathUtils.clamp(f, -1, 1) * 32767.0);\n      case 5120:\n        // BYTE\n        return Math.round(MathUtils.clamp(f, -1, 1) * 127.0);\n      default:\n        throw new Error('Invalid component type.');\n    }\n  }\n  /**\n   * Decompose a mat4 to TRS properties.\n   *\n   * Equivalent to the Matrix4 decompose() method in three.js, and intentionally not using the\n   * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n   *\n   * @param srcMat Matrix element, to be decomposed to TRS properties.\n   * @param dstTranslation Translation element, to be overwritten.\n   * @param dstRotation Rotation element, to be overwritten.\n   * @param dstScale Scale element, to be overwritten.\n   */\n  static decompose(srcMat, dstTranslation, dstRotation, dstScale) {\n    let sx = length([srcMat[0], srcMat[1], srcMat[2]]);\n    const sy = length([srcMat[4], srcMat[5], srcMat[6]]);\n    const sz = length([srcMat[8], srcMat[9], srcMat[10]]);\n    // if determine is negative, we need to invert one scale\n    const det = determinant(srcMat);\n    if (det < 0) sx = -sx;\n    dstTranslation[0] = srcMat[12];\n    dstTranslation[1] = srcMat[13];\n    dstTranslation[2] = srcMat[14];\n    // scale the rotation part\n    const _m1 = srcMat.slice();\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n    _m1[0] *= invSX;\n    _m1[1] *= invSX;\n    _m1[2] *= invSX;\n    _m1[4] *= invSY;\n    _m1[5] *= invSY;\n    _m1[6] *= invSY;\n    _m1[8] *= invSZ;\n    _m1[9] *= invSZ;\n    _m1[10] *= invSZ;\n    getRotation(dstRotation, _m1);\n    dstScale[0] = sx;\n    dstScale[1] = sy;\n    dstScale[2] = sz;\n  }\n  /**\n   * Compose TRS properties to a mat4.\n   *\n   * Equivalent to the Matrix4 compose() method in three.js, and intentionally not using the\n   * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n   *\n   * @param srcTranslation Translation element of matrix.\n   * @param srcRotation Rotation element of matrix.\n   * @param srcScale Scale element of matrix.\n   * @param dstMat Matrix element, to be modified and returned.\n   * @returns dstMat, overwritten to mat4 equivalent of given TRS properties.\n   */\n  static compose(srcTranslation, srcRotation, srcScale, dstMat) {\n    const te = dstMat;\n    const x = srcRotation[0],\n      y = srcRotation[1],\n      z = srcRotation[2],\n      w = srcRotation[3];\n    const x2 = x + x,\n      y2 = y + y,\n      z2 = z + z;\n    const xx = x * x2,\n      xy = x * y2,\n      xz = x * z2;\n    const yy = y * y2,\n      yz = y * z2,\n      zz = z * z2;\n    const wx = w * x2,\n      wy = w * y2,\n      wz = w * z2;\n    const sx = srcScale[0],\n      sy = srcScale[1],\n      sz = srcScale[2];\n    te[0] = (1 - (yy + zz)) * sx;\n    te[1] = (xy + wz) * sx;\n    te[2] = (xz - wy) * sx;\n    te[3] = 0;\n    te[4] = (xy - wz) * sy;\n    te[5] = (1 - (xx + zz)) * sy;\n    te[6] = (yz + wx) * sy;\n    te[7] = 0;\n    te[8] = (xz + wy) * sz;\n    te[9] = (yz - wx) * sz;\n    te[10] = (1 - (xx + yy)) * sz;\n    te[11] = 0;\n    te[12] = srcTranslation[0];\n    te[13] = srcTranslation[1];\n    te[14] = srcTranslation[2];\n    te[15] = 1;\n    return te;\n  }\n}\n\nfunction equalsRef(refA, refB) {\n  if (!!refA !== !!refB) return false;\n  const a = refA.getChild();\n  const b = refB.getChild();\n  return a === b || a.equals(b);\n}\nfunction equalsRefSet(refSetA, refSetB) {\n  if (!!refSetA !== !!refSetB) return false;\n  const refValuesA = refSetA.values();\n  const refValuesB = refSetB.values();\n  if (refValuesA.length !== refValuesB.length) return false;\n  for (let i = 0; i < refValuesA.length; i++) {\n    const a = refValuesA[i];\n    const b = refValuesB[i];\n    if (a.getChild() === b.getChild()) continue;\n    if (!a.getChild().equals(b.getChild())) return false;\n  }\n  return true;\n}\nfunction equalsRefMap(refMapA, refMapB) {\n  if (!!refMapA !== !!refMapB) return false;\n  const keysA = refMapA.keys();\n  const keysB = refMapB.keys();\n  if (keysA.length !== keysB.length) return false;\n  for (const key of keysA) {\n    const refA = refMapA.get(key);\n    const refB = refMapB.get(key);\n    if (!!refA !== !!refB) return false;\n    const a = refA.getChild();\n    const b = refB.getChild();\n    if (a === b) continue;\n    if (!a.equals(b)) return false;\n  }\n  return true;\n}\nfunction equalsArray(a, b) {\n  if (a === b) return true;\n  if (!!a !== !!b || !a || !b) return false;\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\nfunction equalsObject(_a, _b) {\n  if (_a === _b) return true;\n  if (!!_a !== !!_b) return false;\n  if (!isPlainObject(_a) || !isPlainObject(_b)) {\n    return _a === _b;\n  }\n  const a = _a;\n  const b = _b;\n  let numKeysA = 0;\n  let numKeysB = 0;\n  let key;\n  for (key in a) numKeysA++;\n  for (key in b) numKeysB++;\n  if (numKeysA !== numKeysB) return false;\n  for (key in a) {\n    const valueA = a[key];\n    const valueB = b[key];\n    if (isArray(valueA) && isArray(valueB)) {\n      if (!equalsArray(valueA, valueB)) return false;\n    } else if (isPlainObject(valueA) && isPlainObject(valueB)) {\n      if (!equalsObject(valueA, valueB)) return false;\n    } else {\n      if (valueA !== valueB) return false;\n    }\n  }\n  return true;\n}\nfunction isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\n\nconst ALPHABET = '23456789abdegjkmnpqrvwxyzABDEGJKMNPQRVWXYZ';\nconst UNIQUE_RETRIES = 999;\nconst ID_LENGTH = 6;\nconst previousIDs = new Set();\nconst generateOne = function generateOne() {\n  let rtn = '';\n  for (let i = 0; i < ID_LENGTH; i++) {\n    rtn += ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));\n  }\n  return rtn;\n};\n/**\n * Short ID generator.\n *\n * Generated IDs are short, easy to type, and unique for the duration of the program's execution.\n * Uniqueness across multiple program executions, or on other devices, is not guaranteed. Based on\n * [Short ID Generation in JavaScript](https://tomspencer.dev/blog/2014/11/16/short-id-generation-in-javascript/),\n * with alterations.\n *\n * @category Utilities\n * @hidden\n */\nconst uuid = function uuid() {\n  for (let retries = 0; retries < UNIQUE_RETRIES; retries++) {\n    const id = generateOne();\n    if (!previousIDs.has(id)) {\n      previousIDs.add(id);\n      return id;\n    }\n  }\n  return '';\n};\n\nconst COPY_IDENTITY = t => t;\nconst EMPTY_SET = new Set();\n/**\n * *Properties represent distinct resources in a glTF asset, referenced by other properties.*\n *\n * For example, each material and texture is a property, with material properties holding\n * references to the textures. All properties are created with factory methods on the\n * {@link Document} in which they should be constructed. Properties are destroyed by calling\n * {@link Property.dispose}().\n *\n * Usage:\n *\n * ```ts\n * const texture = doc.createTexture('myTexture');\n * doc.listTextures(); // → [texture x 1]\n *\n * // Attach a texture to a material.\n * material.setBaseColorTexture(texture);\n * material.getBaseColortexture(); // → texture\n *\n * // Detaching a texture removes any references to it, except from the doc.\n * texture.detach();\n * material.getBaseColorTexture(); // → null\n * doc.listTextures(); // → [texture x 1]\n *\n * // Disposing a texture removes all references to it, and its own references.\n * texture.dispose();\n * doc.listTextures(); // → []\n * ```\n *\n * Reference:\n * - [glTF → Concepts](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#concepts)\n *\n * @category Properties\n */\nclass Property extends GraphNode {\n  /** @hidden */\n  constructor(graph, name = '') {\n    super(graph);\n    this[$attributes]['name'] = name;\n    this.init();\n    this.dispatchEvent({\n      type: 'create'\n    });\n  }\n  /**\n   * Returns the Graph associated with this Property. For internal use.\n   * @hidden\n   * @experimental\n   */\n  getGraph() {\n    return this.graph;\n  }\n  /**\n   * Returns default attributes for the property. Empty lists and maps should be initialized\n   * to empty arrays and objects. Always invoke `super.getDefaults()` and extend the result.\n   */\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      name: '',\n      extras: {}\n    });\n  }\n  /** @hidden */\n  set(attribute, value) {\n    if (Array.isArray(value)) value = value.slice(); // copy vector, quat, color …\n    return super.set(attribute, value);\n  }\n  /**********************************************************************************************\n   * Name.\n   */\n  /**\n   * Returns the name of this property. While names are not required to be unique, this is\n   * encouraged, and non-unique names will be overwritten in some tools. For custom data about\n   * a property, prefer to use Extras.\n   */\n  getName() {\n    return this.get('name');\n  }\n  /**\n   * Sets the name of this property. While names are not required to be unique, this is\n   * encouraged, and non-unique names will be overwritten in some tools. For custom data about\n   * a property, prefer to use Extras.\n   */\n  setName(name) {\n    return this.set('name', name);\n  }\n  /**********************************************************************************************\n   * Extras.\n   */\n  /**\n   * Returns a reference to the Extras object, containing application-specific data for this\n   * Property. Extras should be an Object, not a primitive value, for best portability.\n   */\n  getExtras() {\n    return this.get('extras');\n  }\n  /**\n   * Updates the Extras object, containing application-specific data for this Property. Extras\n   * should be an Object, not a primitive value, for best portability.\n   */\n  setExtras(extras) {\n    return this.set('extras', extras);\n  }\n  /**********************************************************************************************\n   * Graph state.\n   */\n  /**\n   * Makes a copy of this property, with the same resources (by reference) as the original.\n   */\n  clone() {\n    const PropertyClass = this.constructor;\n    return new PropertyClass(this.graph).copy(this, COPY_IDENTITY);\n  }\n  /**\n   * Copies all data from another property to this one. Child properties are copied by reference,\n   * unless a 'resolve' function is given to override that.\n   * @param other Property to copy references from.\n   * @param resolve Function to resolve each Property being transferred. Default is identity.\n   */\n  copy(other, resolve = COPY_IDENTITY) {\n    // Remove previous references.\n    for (const key in this[$attributes]) {\n      const value = this[$attributes][key];\n      if (value instanceof GraphEdge) {\n        if (!this[$immutableKeys].has(key)) {\n          value.dispose();\n        }\n      } else if (value instanceof RefList || value instanceof RefSet) {\n        for (const ref of value.values()) {\n          ref.dispose();\n        }\n      } else if (value instanceof RefMap) {\n        for (const ref of value.values()) {\n          ref.dispose();\n        }\n      }\n    }\n    // Add new references.\n    for (const key in other[$attributes]) {\n      const thisValue = this[$attributes][key];\n      const otherValue = other[$attributes][key];\n      if (otherValue instanceof GraphEdge) {\n        if (this[$immutableKeys].has(key)) {\n          const ref = thisValue;\n          ref.getChild().copy(resolve(otherValue.getChild()), resolve);\n        } else {\n          // biome-ignore lint/suspicious/noExplicitAny: TODO\n          this.setRef(key, resolve(otherValue.getChild()), otherValue.getAttributes());\n        }\n      } else if (otherValue instanceof RefSet || otherValue instanceof RefList) {\n        for (const ref of otherValue.values()) {\n          // biome-ignore lint/suspicious/noExplicitAny: TODO\n          this.addRef(key, resolve(ref.getChild()), ref.getAttributes());\n        }\n      } else if (otherValue instanceof RefMap) {\n        for (const subkey of otherValue.keys()) {\n          const ref = otherValue.get(subkey);\n          // biome-ignore lint/suspicious/noExplicitAny: TODO\n          this.setRefMap(key, subkey, resolve(ref.getChild()), ref.getAttributes());\n        }\n      } else if (isPlainObject(otherValue)) {\n        this[$attributes][key] = JSON.parse(JSON.stringify(otherValue));\n      } else if (Array.isArray(otherValue) || otherValue instanceof ArrayBuffer || ArrayBuffer.isView(otherValue)) {\n        // biome-ignore lint/suspicious/noExplicitAny: TODO\n        this[$attributes][key] = otherValue.slice();\n      } else {\n        this[$attributes][key] = otherValue;\n      }\n    }\n    return this;\n  }\n  /**\n   * Returns true if two properties are deeply equivalent, recursively comparing the attributes\n   * of the properties. Optionally, a 'skip' set may be included, specifying attributes whose\n   * values should not be considered in the comparison.\n   *\n   * Example: Two {@link Primitive Primitives} are equivalent if they have accessors and\n   * materials with equivalent content — but not necessarily the same specific accessors\n   * and materials.\n   */\n  equals(other, skip = EMPTY_SET) {\n    if (this === other) return true;\n    if (this.propertyType !== other.propertyType) return false;\n    for (const key in this[$attributes]) {\n      if (skip.has(key)) continue;\n      const a = this[$attributes][key];\n      const b = other[$attributes][key];\n      if (a instanceof GraphEdge || b instanceof GraphEdge) {\n        if (!equalsRef(a, b)) {\n          return false;\n        }\n      } else if (a instanceof RefSet || b instanceof RefSet || a instanceof RefList || b instanceof RefList) {\n        if (!equalsRefSet(a, b)) {\n          return false;\n        }\n      } else if (a instanceof RefMap || b instanceof RefMap) {\n        if (!equalsRefMap(a, b)) {\n          return false;\n        }\n      } else if (isPlainObject(a) || isPlainObject(b)) {\n        if (!equalsObject(a, b)) return false;\n      } else if (isArray(a) || isArray(b)) {\n        if (!equalsArray(a, b)) return false;\n      } else {\n        // Literal.\n        if (a !== b) return false;\n      }\n    }\n    return true;\n  }\n  detach() {\n    // Detaching should keep properties in the same Document, and attached to its root.\n    this.graph.disconnectParents(this, n => n.propertyType !== 'Root');\n    return this;\n  }\n  /**\n   * Returns a list of all properties that hold a reference to this property. For example, a\n   * material may hold references to various textures, but a texture does not hold references\n   * to the materials that use it.\n   *\n   * It is often necessary to filter the results for a particular type: some resources, like\n   * {@link Accessor}s, may be referenced by different types of properties. Most properties\n   * include the {@link Root} as a parent, which is usually not of interest.\n   *\n   * Usage:\n   *\n   * ```ts\n   * const materials = texture\n   * \t.listParents()\n   * \t.filter((p) => p instanceof Material)\n   * ```\n   */\n  listParents() {\n    return this.graph.listParents(this);\n  }\n}\n\n/**\n * *A {@link Property} that can have {@link ExtensionProperty} instances attached.*\n *\n * Most properties are extensible. See the {@link Extension} documentation for information about\n * how to use extensions.\n *\n * @category Properties\n */\nclass ExtensibleProperty extends Property {\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      extensions: new RefMap()\n    });\n  }\n  /** Returns an {@link ExtensionProperty} attached to this Property, if any. */\n  getExtension(name) {\n    return this.getRefMap('extensions', name);\n  }\n  /**\n   * Attaches the given {@link ExtensionProperty} to this Property. For a given extension, only\n   * one ExtensionProperty may be attached to any one Property at a time.\n   */\n  setExtension(name, extensionProperty) {\n    if (extensionProperty) extensionProperty._validateParent(this);\n    return this.setRefMap('extensions', name, extensionProperty);\n  }\n  /** Lists all {@link ExtensionProperty} instances attached to this Property. */\n  listExtensions() {\n    return this.listRefMapValues('extensions');\n  }\n}\n\n/**\n * *Accessors store lists of numeric, vector, or matrix elements in a typed array.*\n *\n * All large data for {@link Mesh}, {@link Skin}, and {@link Animation} properties is stored in\n * {@link Accessor}s, organized into one or more {@link Buffer}s. Each accessor provides data in\n * typed arrays, with two abstractions:\n *\n * *Elements* are the logical divisions of the data into useful types: `\"SCALAR\"`, `\"VEC2\"`,\n * `\"VEC3\"`, `\"VEC4\"`, `\"MAT3\"`, or `\"MAT4\"`. The element type can be determined with the\n * {@link Accessor.getType getType}() method, and the number of elements in the accessor determine its\n * {@link Accessor.getCount getCount}(). The number of components in an element — e.g. 9 for `\"MAT3\"` — are its\n * {@link Accessor.getElementSize getElementSize}(). See {@link Accessor.Type}.\n *\n * *Components* are the numeric values within an element — e.g. `.x` and `.y` for `\"VEC2\"`. Various\n * component types are available: `BYTE`, `UNSIGNED_BYTE`, `SHORT`, `UNSIGNED_SHORT`,\n * `UNSIGNED_INT`, and `FLOAT`. The component type can be determined with the\n * {@link Accessor.getComponentType getComponentType} method, and the number of bytes in each component determine its\n * {@link Accessor.getComponentSize getComponentSize}. See {@link Accessor.ComponentType}.\n *\n * Usage:\n *\n * ```typescript\n * const accessor = doc.createAccessor('myData')\n * \t.setArray(new Float32Array([1,2,3,4,5,6,7,8,9,10,11,12]))\n * \t.setType(Accessor.Type.VEC3)\n * \t.setBuffer(doc.getRoot().listBuffers()[0]);\n *\n * accessor.getCount();        // → 4\n * accessor.getElementSize();  // → 3\n * accessor.getByteLength();   // → 48\n * accessor.getElement(1, []); // → [4, 5, 6]\n *\n * accessor.setElement(0, [10, 20, 30]);\n * ```\n *\n * Data access through the {@link Accessor.getElement getElement} and {@link Accessor.setElement setElement}\n * methods reads or overwrites the content of the underlying typed array. These methods use\n * element arrays intended to be compatible with the [gl-matrix](https://github.com/toji/gl-matrix)\n * library, or with the `toArray`/`fromArray` methods of libraries like three.js and babylon.js.\n *\n * Each Accessor must be assigned to a {@link Buffer}, which determines where the accessor's data\n * is stored in the final file. Assigning Accessors to different Buffers allows the data to be\n * written to different `.bin` files.\n *\n * glTF Transform does not expose many details of sparse, normalized, or interleaved accessors\n * through its API. It reads files using those techniques, presents a simplified view of the data\n * for editing, and attempts to write data back out with optimizations. For example, vertex\n * attributes will typically be interleaved by default, regardless of the input file.\n *\n * References:\n * - [glTF → Accessors](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#accessors)\n *\n * @category Properties\n */\nclass Accessor extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.ACCESSOR;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      array: null,\n      type: Accessor.Type.SCALAR,\n      componentType: Accessor.ComponentType.FLOAT,\n      normalized: false,\n      sparse: false,\n      buffer: null\n    });\n  }\n  /**********************************************************************************************\n   * Static.\n   */\n  /** Returns size of a given element type, in components. */\n  static getElementSize(type) {\n    switch (type) {\n      case Accessor.Type.SCALAR:\n        return 1;\n      case Accessor.Type.VEC2:\n        return 2;\n      case Accessor.Type.VEC3:\n        return 3;\n      case Accessor.Type.VEC4:\n        return 4;\n      case Accessor.Type.MAT2:\n        return 4;\n      case Accessor.Type.MAT3:\n        return 9;\n      case Accessor.Type.MAT4:\n        return 16;\n      default:\n        throw new Error('Unexpected type: ' + type);\n    }\n  }\n  /** Returns size of a given component type, in bytes. */\n  static getComponentSize(componentType) {\n    switch (componentType) {\n      case Accessor.ComponentType.BYTE:\n        return 1;\n      case Accessor.ComponentType.UNSIGNED_BYTE:\n        return 1;\n      case Accessor.ComponentType.SHORT:\n        return 2;\n      case Accessor.ComponentType.UNSIGNED_SHORT:\n        return 2;\n      case Accessor.ComponentType.UNSIGNED_INT:\n        return 4;\n      case Accessor.ComponentType.FLOAT:\n        return 4;\n      default:\n        throw new Error('Unexpected component type: ' + componentType);\n    }\n  }\n  /**********************************************************************************************\n   * Min/max bounds.\n   */\n  /**\n   * Minimum value of each component in this attribute. Unlike in a final glTF file, values\n   * returned by this method will reflect the minimum accounting for {@link .normalized}\n   * state.\n   */\n  getMinNormalized(target) {\n    const normalized = this.getNormalized();\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    this.getMin(target);\n    if (normalized) {\n      for (let j = 0; j < elementSize; j++) {\n        target[j] = MathUtils.decodeNormalizedInt(target[j], componentType);\n      }\n    }\n    return target;\n  }\n  /**\n   * Minimum value of each component in this attribute. Values returned by this method do not\n   * reflect normalization: use {@link .getMinNormalized} in that case.\n   */\n  getMin(target) {\n    const array = this.getArray();\n    const count = this.getCount();\n    const elementSize = this.getElementSize();\n    for (let j = 0; j < elementSize; j++) target[j] = Infinity;\n    for (let i = 0; i < count * elementSize; i += elementSize) {\n      for (let j = 0; j < elementSize; j++) {\n        const value = array[i + j];\n        if (Number.isFinite(value)) {\n          target[j] = Math.min(target[j], value);\n        }\n      }\n    }\n    return target;\n  }\n  /**\n   * Maximum value of each component in this attribute. Unlike in a final glTF file, values\n   * returned by this method will reflect the minimum accounting for {@link .normalized}\n   * state.\n   */\n  getMaxNormalized(target) {\n    const normalized = this.getNormalized();\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    this.getMax(target);\n    if (normalized) {\n      for (let j = 0; j < elementSize; j++) {\n        target[j] = MathUtils.decodeNormalizedInt(target[j], componentType);\n      }\n    }\n    return target;\n  }\n  /**\n   * Maximum value of each component in this attribute. Values returned by this method do not\n   * reflect normalization: use {@link .getMinNormalized} in that case.\n   */\n  getMax(target) {\n    const array = this.get('array');\n    const count = this.getCount();\n    const elementSize = this.getElementSize();\n    for (let j = 0; j < elementSize; j++) target[j] = -Infinity;\n    for (let i = 0; i < count * elementSize; i += elementSize) {\n      for (let j = 0; j < elementSize; j++) {\n        const value = array[i + j];\n        if (Number.isFinite(value)) {\n          target[j] = Math.max(target[j], value);\n        }\n      }\n    }\n    return target;\n  }\n  /**********************************************************************************************\n   * Layout.\n   */\n  /**\n   * Number of elements in the accessor. An array of length 30, containing 10 `VEC3` elements,\n   * will have a count of 10.\n   */\n  getCount() {\n    const array = this.get('array');\n    return array ? array.length / this.getElementSize() : 0;\n  }\n  /** Type of element stored in the accessor. `VEC2`, `VEC3`, etc. */\n  getType() {\n    return this.get('type');\n  }\n  /**\n   * Sets type of element stored in the accessor. `VEC2`, `VEC3`, etc. Array length must be a\n   * multiple of the component size (`VEC2` = 2, `VEC3` = 3, ...) for the selected type.\n   */\n  setType(type) {\n    return this.set('type', type);\n  }\n  /**\n   * Number of components in each element of the accessor. For example, the element size of a\n   * `VEC2` accessor is 2. This value is determined automatically based on array length and\n   * accessor type, specified with {@link Accessor.setType setType()}.\n   */\n  // biome-ignore lint/suspicious/useAdjacentOverloadSignatures: Static vs. non-static.\n  getElementSize() {\n    return Accessor.getElementSize(this.get('type'));\n  }\n  /**\n   * Size of each component (a value in the raw array), in bytes. For example, the\n   * `componentSize` of data backed by a `float32` array is 4 bytes.\n   */\n  getComponentSize() {\n    return this.get('array').BYTES_PER_ELEMENT;\n  }\n  /**\n   * Component type (float32, uint16, etc.). This value is determined automatically, and can only\n   * be modified by replacing the underlying array.\n   */\n  getComponentType() {\n    return this.get('componentType');\n  }\n  /**********************************************************************************************\n   * Normalization.\n   */\n  /**\n   * Specifies whether integer data values should be normalized (true) to [0, 1] (for unsigned\n   * types) or [-1, 1] (for signed types), or converted directly (false) when they are accessed.\n   * This property is defined only for accessors that contain vertex attributes or animation\n   * output data.\n   */\n  getNormalized() {\n    return this.get('normalized');\n  }\n  /**\n   * Specifies whether integer data values should be normalized (true) to [0, 1] (for unsigned\n   * types) or [-1, 1] (for signed types), or converted directly (false) when they are accessed.\n   * This property is defined only for accessors that contain vertex attributes or animation\n   * output data.\n   */\n  setNormalized(normalized) {\n    return this.set('normalized', normalized);\n  }\n  /**********************************************************************************************\n   * Data access.\n   */\n  /**\n   * Returns the scalar element value at the given index. For\n   * {@link Accessor.getNormalized normalized} integer accessors, values are\n   * decoded and returned in floating-point form.\n   */\n  getScalar(index) {\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    const array = this.getArray();\n    if (this.getNormalized()) {\n      return MathUtils.decodeNormalizedInt(array[index * elementSize], componentType);\n    }\n    return array[index * elementSize];\n  }\n  /**\n   * Assigns the scalar element value at the given index. For\n   * {@link Accessor.getNormalized normalized} integer accessors, \"value\" should be\n   * given in floating-point form — it will be integer-encoded before writing\n   * to the underlying array.\n   */\n  setScalar(index, x) {\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    const array = this.getArray();\n    if (this.getNormalized()) {\n      array[index * elementSize] = MathUtils.encodeNormalizedInt(x, componentType);\n    } else {\n      array[index * elementSize] = x;\n    }\n    return this;\n  }\n  /**\n   * Returns the vector or matrix element value at the given index. For\n   * {@link Accessor.getNormalized normalized} integer accessors, values are\n   * decoded and returned in floating-point form.\n   *\n   * Example:\n   *\n   * ```javascript\n   * import { add } from 'gl-matrix/add';\n   *\n   * const element = [];\n   * const offset = [1, 1, 1];\n   *\n   * for (let i = 0; i < accessor.getCount(); i++) {\n   * \taccessor.getElement(i, element);\n   * \tadd(element, element, offset);\n   * \taccessor.setElement(i, element);\n   * }\n   * ```\n   */\n  getElement(index, target) {\n    const normalized = this.getNormalized();\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    const array = this.getArray();\n    for (let i = 0; i < elementSize; i++) {\n      if (normalized) {\n        target[i] = MathUtils.decodeNormalizedInt(array[index * elementSize + i], componentType);\n      } else {\n        target[i] = array[index * elementSize + i];\n      }\n    }\n    return target;\n  }\n  /**\n   * Assigns the vector or matrix element value at the given index. For\n   * {@link Accessor.getNormalized normalized} integer accessors, \"value\" should be\n   * given in floating-point form — it will be integer-encoded before writing\n   * to the underlying array.\n   *\n   * Example:\n   *\n   * ```javascript\n   * import { add } from 'gl-matrix/add';\n   *\n   * const element = [];\n   * const offset = [1, 1, 1];\n   *\n   * for (let i = 0; i < accessor.getCount(); i++) {\n   * \taccessor.getElement(i, element);\n   * \tadd(element, element, offset);\n   * \taccessor.setElement(i, element);\n   * }\n   * ```\n   */\n  setElement(index, value) {\n    const normalized = this.getNormalized();\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    const array = this.getArray();\n    for (let i = 0; i < elementSize; i++) {\n      if (normalized) {\n        array[index * elementSize + i] = MathUtils.encodeNormalizedInt(value[i], componentType);\n      } else {\n        array[index * elementSize + i] = value[i];\n      }\n    }\n    return this;\n  }\n  /**********************************************************************************************\n   * Raw data storage.\n   */\n  /**\n   * Specifies whether the accessor should be stored sparsely. When written to a glTF file, sparse\n   * accessors store only values that differ from base values. When loaded in glTF Transform (or most\n   * runtimes) a sparse accessor can be treated like any other accessor. Currently, glTF Transform always\n   * uses zeroes for the base values when writing files.\n   * @experimental\n   */\n  getSparse() {\n    return this.get('sparse');\n  }\n  /**\n   * Specifies whether the accessor should be stored sparsely. When written to a glTF file, sparse\n   * accessors store only values that differ from base values. When loaded in glTF Transform (or most\n   * runtimes) a sparse accessor can be treated like any other accessor. Currently, glTF Transform always\n   * uses zeroes for the base values when writing files.\n   * @experimental\n   */\n  setSparse(sparse) {\n    return this.set('sparse', sparse);\n  }\n  /** Returns the {@link Buffer} into which this accessor will be organized. */\n  getBuffer() {\n    return this.getRef('buffer');\n  }\n  /** Assigns the {@link Buffer} into which this accessor will be organized. */\n  setBuffer(buffer) {\n    return this.setRef('buffer', buffer);\n  }\n  /** Returns the raw typed array underlying this accessor. */\n  getArray() {\n    return this.get('array');\n  }\n  /** Assigns the raw typed array underlying this accessor. */\n  setArray(array) {\n    this.set('componentType', array ? arrayToComponentType(array) : Accessor.ComponentType.FLOAT);\n    this.set('array', array);\n    return this;\n  }\n  /** Returns the total bytelength of this accessor, exclusive of padding. */\n  getByteLength() {\n    const array = this.get('array');\n    return array ? array.byteLength : 0;\n  }\n}\n/**************************************************************************************************\n * Accessor utilities.\n */\n/** @internal */\n/**********************************************************************************************\n * Constants.\n */\n/** Element type contained by the accessor (SCALAR, VEC2, ...). */\nAccessor.Type = {\n  /** Scalar, having 1 value per element. */\n  SCALAR: 'SCALAR',\n  /** 2-component vector, having 2 components per element. */\n  VEC2: 'VEC2',\n  /** 3-component vector, having 3 components per element. */\n  VEC3: 'VEC3',\n  /** 4-component vector, having 4 components per element. */\n  VEC4: 'VEC4',\n  /** 2x2 matrix, having 4 components per element. */\n  MAT2: 'MAT2',\n  /** 3x3 matrix, having 9 components per element. */\n  MAT3: 'MAT3',\n  /** 4x3 matrix, having 16 components per element. */\n  MAT4: 'MAT4'\n};\n/** Data type of the values composing each element in the accessor. */\nAccessor.ComponentType = {\n  /**\n   * 1-byte signed integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array Int8Array}.\n   */\n  BYTE: 5120,\n  /**\n   * 1-byte unsigned integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array Uint8Array}.\n   */\n  UNSIGNED_BYTE: 5121,\n  /**\n   * 2-byte signed integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array Int16Array}.\n   */\n  SHORT: 5122,\n  /**\n   * 2-byte unsigned integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array Uint16Array}.\n   */\n  UNSIGNED_SHORT: 5123,\n  /**\n   * 4-byte unsigned integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array Uint32Array}.\n   */\n  UNSIGNED_INT: 5125,\n  /**\n   * 4-byte floating point number, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array Float32Array}.\n   */\n  FLOAT: 5126\n};\nfunction arrayToComponentType(array) {\n  switch (array.constructor) {\n    case Float32Array:\n      return Accessor.ComponentType.FLOAT;\n    case Uint32Array:\n      return Accessor.ComponentType.UNSIGNED_INT;\n    case Uint16Array:\n      return Accessor.ComponentType.UNSIGNED_SHORT;\n    case Uint8Array:\n      return Accessor.ComponentType.UNSIGNED_BYTE;\n    case Int16Array:\n      return Accessor.ComponentType.SHORT;\n    case Int8Array:\n      return Accessor.ComponentType.BYTE;\n    default:\n      throw new Error('Unknown accessor componentType.');\n  }\n}\n\n/**\n * *Reusable collections of {@link AnimationChannel}s, together representing a discrete animation\n * clip.*\n *\n * One Animation represents one playable unit in an animation system. Each may contain channels\n * affecting multiple paths (`translation`, `rotation`, `scale`, or `weights`) on multiple\n * {@link Node}s. An Animation's channels must be played together, and do not have any meaning in\n * isolation.\n *\n * Multiple Animations _may_ be played together: for example, one character's _Walk_ animation\n * might play while another character's _Run_ animation plays. Or a single character might have\n * both an _Idle_ and a _Talk_ animation playing at the same time. However, glTF does not define\n * any particular relationship between top-level Animations, or any particular playback behavior\n * like looping or sequences of Animations. General-purpose viewers typically autoplay the first\n * animation and provide UI controls for choosing another. Game engines may have significantly\n * more advanced methods of playing and blending animations.\n *\n * For example, a very simple skinned {@link Mesh} might have two Animations, _Idle_ and _Walk_.\n * Each of those Animations might affect the rotations of two bones, _LegL_ and _LegR_, where the\n * keyframes for each target-path pair are stored in {@link AnimationChannel} instances. In  total,\n * this model would contain two Animations and Four {@link AnimationChannel}s.\n *\n * Usage:\n *\n * ```ts\n * const animation = doc.createAnimation('machineRun')\n * \t.addChannel(rotateCog1)\n * \t.addChannel(rotateCog2)\n * \t.addChannel(rotateCog3);\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#animations)\n *\n * @category Properties\n */\nclass Animation extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.ANIMATION;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      channels: new RefSet(),\n      samplers: new RefSet()\n    });\n  }\n  /** Adds an {@link AnimationChannel} to this Animation. */\n  addChannel(channel) {\n    return this.addRef('channels', channel);\n  }\n  /** Removes an {@link AnimationChannel} from this Animation. */\n  removeChannel(channel) {\n    return this.removeRef('channels', channel);\n  }\n  /** Lists {@link AnimationChannel}s in this Animation. */\n  listChannels() {\n    return this.listRefs('channels');\n  }\n  /** Adds an {@link AnimationSampler} to this Animation. */\n  addSampler(sampler) {\n    return this.addRef('samplers', sampler);\n  }\n  /** Removes an {@link AnimationSampler} from this Animation. */\n  removeSampler(sampler) {\n    return this.removeRef('samplers', sampler);\n  }\n  /** Lists {@link AnimationSampler}s in this Animation. */\n  listSamplers() {\n    return this.listRefs('samplers');\n  }\n}\n\n/**\n * *A target-path pair within a larger {@link Animation}, which refers to an\n * {@link AnimationSampler} storing the keyframe data for that pair.*\n *\n * A _target_ is always a {@link Node}, in the core glTF spec. A _path_ is any property of that\n * Node that can be affected by animation: `translation`, `rotation`, `scale`, or `weights`. An\n * {@link Animation} affecting the positions and rotations of several {@link Node}s would contain\n * one channel for each Node-position or Node-rotation pair. The keyframe data for an\n * AnimationChannel is stored in an {@link AnimationSampler}, which must be attached to the same\n * {@link Animation}.\n *\n * Usage:\n *\n * ```ts\n * const node = doc.getRoot()\n * \t.listNodes()\n * \t.find((node) => node.getName() === 'Cog');\n *\n * const channel = doc.createAnimationChannel('cogRotation')\n * \t.setTargetPath('rotation')\n * \t.setTargetNode(node)\n * \t.setSampler(rotateSampler);\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#animations)\n *\n * @category Properties\n */\nclass AnimationChannel extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.ANIMATION_CHANNEL;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      targetPath: null,\n      targetNode: null,\n      sampler: null\n    });\n  }\n  /**********************************************************************************************\n   * Properties.\n   */\n  /**\n   * Path (property) animated on the target {@link Node}. Supported values include:\n   * `translation`, `rotation`, `scale`, or `weights`.\n   */\n  getTargetPath() {\n    return this.get('targetPath');\n  }\n  /**\n   * Path (property) animated on the target {@link Node}. Supported values include:\n   * `translation`, `rotation`, `scale`, or `weights`.\n   */\n  setTargetPath(targetPath) {\n    return this.set('targetPath', targetPath);\n  }\n  /** Target {@link Node} animated by the channel. */\n  getTargetNode() {\n    return this.getRef('targetNode');\n  }\n  /** Target {@link Node} animated by the channel. */\n  setTargetNode(targetNode) {\n    return this.setRef('targetNode', targetNode);\n  }\n  /**\n   * Keyframe data input/output values for the channel. Must be attached to the same\n   * {@link Animation}.\n   */\n  getSampler() {\n    return this.getRef('sampler');\n  }\n  /**\n   * Keyframe data input/output values for the channel. Must be attached to the same\n   * {@link Animation}.\n   */\n  setSampler(sampler) {\n    return this.setRef('sampler', sampler);\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\n/** Name of the property to be modified by an animation channel. */\nAnimationChannel.TargetPath = {\n  /** Channel targets {@link Node.setTranslation}. */\n  TRANSLATION: 'translation',\n  /** Channel targets {@link Node.setRotation}. */\n  ROTATION: 'rotation',\n  /** Channel targets {@link Node.setScale}. */\n  SCALE: 'scale',\n  /** Channel targets {@link Node.setWeights}, affecting {@link PrimitiveTarget} weights. */\n  WEIGHTS: 'weights'\n};\n\n/**\n * *Reusable collection of keyframes affecting particular property of an object.*\n *\n * Each AnimationSampler refers to an input and an output {@link Accessor}. Input contains times\n * (in seconds) for each keyframe. Output contains values (of any {@link Accessor.Type}) for the\n * animated property at each keyframe. Samplers using `CUBICSPLINE` interpolation will also contain\n * in/out tangents in the output, with the layout:\n *\n * in<sub>1</sub>, value<sub>1</sub>, out<sub>1</sub>,\n * in<sub>2</sub>, value<sub>2</sub>, out<sub>2</sub>,\n * in<sub>3</sub>, value<sub>3</sub>, out<sub>3</sub>, ...\n *\n * Usage:\n *\n * ```ts\n * // Create accessor containing input times, in seconds.\n * const input = doc.createAccessor('bounceTimes')\n * \t.setArray(new Float32Array([0, 1, 2]))\n * \t.setType(Accessor.Type.SCALAR);\n *\n * // Create accessor containing output values, in local units.\n * const output = doc.createAccessor('bounceValues')\n * \t.setArray(new Float32Array([\n * \t\t0, 0, 0, // y = 0\n * \t\t0, 1, 0, // y = 1\n * \t\t0, 0, 0, // y = 0\n * \t]))\n * \t.setType(Accessor.Type.VEC3);\n *\n * // Create sampler.\n * const sampler = doc.createAnimationSampler('bounce')\n * \t.setInput(input)\n * \t.setOutput(output)\n * \t.setInterpolation('LINEAR');\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#animations)\n *\n * @category Properties\n */\nclass AnimationSampler extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.ANIMATION_SAMPLER;\n  }\n  getDefaultAttributes() {\n    return Object.assign(super.getDefaults(), {\n      interpolation: AnimationSampler.Interpolation.LINEAR,\n      input: null,\n      output: null\n    });\n  }\n  /**********************************************************************************************\n   * Static.\n   */\n  /** Interpolation mode: `STEP`, `LINEAR`, or `CUBICSPLINE`. */\n  getInterpolation() {\n    return this.get('interpolation');\n  }\n  /** Interpolation mode: `STEP`, `LINEAR`, or `CUBICSPLINE`. */\n  setInterpolation(interpolation) {\n    return this.set('interpolation', interpolation);\n  }\n  /** Times for each keyframe, in seconds. */\n  getInput() {\n    return this.getRef('input');\n  }\n  /** Times for each keyframe, in seconds. */\n  setInput(input) {\n    return this.setRef('input', input, {\n      usage: BufferViewUsage$1.OTHER\n    });\n  }\n  /**\n   * Values for each keyframe. For `CUBICSPLINE` interpolation, output also contains in/out\n   * tangents.\n   */\n  getOutput() {\n    return this.getRef('output');\n  }\n  /**\n   * Values for each keyframe. For `CUBICSPLINE` interpolation, output also contains in/out\n   * tangents.\n   */\n  setOutput(output) {\n    return this.setRef('output', output, {\n      usage: BufferViewUsage$1.OTHER\n    });\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\n/** Interpolation method. */\nAnimationSampler.Interpolation = {\n  /** Animated values are linearly interpolated between keyframes. */\n  LINEAR: 'LINEAR',\n  /** Animated values remain constant from one keyframe until the next keyframe. */\n  STEP: 'STEP',\n  /** Animated values are interpolated according to given cubic spline tangents. */\n  CUBICSPLINE: 'CUBICSPLINE'\n};\n\n/**\n * *Buffers are low-level storage units for binary data.*\n *\n * glTF 2.0 has three concepts relevant to binary storage: accessors, buffer views, and buffers.\n * In glTF Transform, an {@link Accessor} is referenced by any property that requires numeric typed\n * array data. Meshes, Primitives, and Animations all reference Accessors. Buffers define how that\n * data is organized into transmitted file(s). A `.glb` file has only a single Buffer, and when\n * exporting to `.glb` your resources should be grouped accordingly. A `.gltf` file may reference\n * one or more `.bin` files — each `.bin` is a Buffer — and grouping Accessors under different\n * Buffers allow you to specify that structure.\n *\n * For engines that can dynamically load portions of a glTF file, splitting data into separate\n * buffers can allow you to avoid loading data until it is needed. For example, you might put\n * binary data for specific meshes into a different `.bin` buffer, or put each animation's binary\n * payload into its own `.bin`.\n *\n * Buffer Views define how Accessors are organized within a given Buffer. glTF Transform creates an\n * efficient Buffer View layout automatically at export: there is no Buffer View property exposed\n * by the glTF Transform API, simplifying data management.\n *\n * Usage:\n *\n * ```ts\n * // Create two buffers with custom filenames.\n * const buffer1 = doc.createBuffer('buffer1')\n * \t.setURI('part1.bin');\n * const buffer2 = doc.createBuffer('buffer2')\n * \t.setURI('part2.bin');\n *\n * // Assign the attributes of two meshes to different buffers. If the meshes\n * // had indices or morph target attributes, you would also want to relocate\n * // those accessors.\n * mesh1\n * \t.listPrimitives()\n * \t.forEach((primitive) => primitive.listAttributes()\n * \t\t.forEach((attribute) => attribute.setBuffer(buffer1)));\n * mesh2\n * \t.listPrimitives()\n * \t.forEach((primitive) => primitive.listAttributes()\n * \t\t.forEach((attribute) => attribute.setBuffer(buffer2)));\n *\n * // Write to disk. Each mesh's binary data will be in a separate binary file;\n * // any remaining accessors will be in a third (default) buffer.\n * await new NodeIO().write('scene.gltf', doc);\n * // → scene.gltf, part1.bin, part2.bin\n * ```\n *\n * References:\n * - [glTF → Buffers and Buffer Views](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#buffers-and-buffer-views)\n * - [glTF → Accessors](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#accessors)\n *\n * @category Properties\n */\nclass Buffer$1 extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.BUFFER;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      uri: ''\n    });\n  }\n  /**\n   * Returns the URI (or filename) of this buffer (e.g. 'myBuffer.bin'). URIs are strongly\n   * encouraged to be relative paths, rather than absolute. Use of a protocol (like `file://`)\n   * is possible for custom applications, but will limit the compatibility of the asset with most\n   * tools.\n   *\n   * Buffers commonly use the extension `.bin`, though this is not required.\n   */\n  getURI() {\n    return this.get('uri');\n  }\n  /**\n   * Sets the URI (or filename) of this buffer (e.g. 'myBuffer.bin'). URIs are strongly\n   * encouraged to be relative paths, rather than absolute. Use of a protocol (like `file://`)\n   * is possible for custom applications, but will limit the compatibility of the asset with most\n   * tools.\n   *\n   * Buffers commonly use the extension `.bin`, though this is not required.\n   */\n  setURI(uri) {\n    return this.set('uri', uri);\n  }\n}\n\n/**\n * *Cameras are perspectives through which the {@link Scene} may be viewed.*\n *\n * Projection can be perspective or orthographic. Cameras are contained in nodes and thus can be\n * transformed. The camera is defined such that the local +X axis is to the right, the lens looks\n * towards the local -Z axis, and the top of the camera is aligned with the local +Y axis. If no\n * transformation is specified, the location of the camera is at the origin.\n *\n * Usage:\n *\n * ```typescript\n * const camera = doc.createCamera('myCamera')\n * \t.setType(GLTF.CameraType.PERSPECTIVE)\n * \t.setZNear(0.1)\n * \t.setZFar(100)\n * \t.setYFov(Math.PI / 4)\n * \t.setAspectRatio(1.5);\n *\n * node.setCamera(camera);\n * ```\n *\n * References:\n * - [glTF → Cameras](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#cameras)\n *\n * @category Properties\n */\nclass Camera extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.CAMERA;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      // Common.\n      type: Camera.Type.PERSPECTIVE,\n      znear: 0.1,\n      zfar: 100,\n      // Perspective.\n      aspectRatio: null,\n      yfov: Math.PI * 2 * 50 / 360,\n      // 50º\n      // Orthographic.\n      xmag: 1,\n      ymag: 1\n    });\n  }\n  /**********************************************************************************************\n   * Common.\n   */\n  /** Specifies if the camera uses a perspective or orthographic projection. */\n  getType() {\n    return this.get('type');\n  }\n  /** Specifies if the camera uses a perspective or orthographic projection. */\n  setType(type) {\n    return this.set('type', type);\n  }\n  /** Floating-point distance to the near clipping plane. */\n  getZNear() {\n    return this.get('znear');\n  }\n  /** Floating-point distance to the near clipping plane. */\n  setZNear(znear) {\n    return this.set('znear', znear);\n  }\n  /**\n   * Floating-point distance to the far clipping plane. When defined, zfar must be greater than\n   * znear. If zfar is undefined, runtime must use infinite projection matrix.\n   */\n  getZFar() {\n    return this.get('zfar');\n  }\n  /**\n   * Floating-point distance to the far clipping plane. When defined, zfar must be greater than\n   * znear. If zfar is undefined, runtime must use infinite projection matrix.\n   */\n  setZFar(zfar) {\n    return this.set('zfar', zfar);\n  }\n  /**********************************************************************************************\n   * Perspective.\n   */\n  /**\n   * Floating-point aspect ratio of the field of view. When undefined, the aspect ratio of the\n   * canvas is used.\n   */\n  getAspectRatio() {\n    return this.get('aspectRatio');\n  }\n  /**\n   * Floating-point aspect ratio of the field of view. When undefined, the aspect ratio of the\n   * canvas is used.\n   */\n  setAspectRatio(aspectRatio) {\n    return this.set('aspectRatio', aspectRatio);\n  }\n  /** Floating-point vertical field of view in radians. */\n  getYFov() {\n    return this.get('yfov');\n  }\n  /** Floating-point vertical field of view in radians. */\n  setYFov(yfov) {\n    return this.set('yfov', yfov);\n  }\n  /**********************************************************************************************\n   * Orthographic.\n   */\n  /**\n   * Floating-point horizontal magnification of the view, and half the view's width\n   * in world units.\n   */\n  getXMag() {\n    return this.get('xmag');\n  }\n  /**\n   * Floating-point horizontal magnification of the view, and half the view's width\n   * in world units.\n   */\n  setXMag(xmag) {\n    return this.set('xmag', xmag);\n  }\n  /**\n   * Floating-point vertical magnification of the view, and half the view's height\n   * in world units.\n   */\n  getYMag() {\n    return this.get('ymag');\n  }\n  /**\n   * Floating-point vertical magnification of the view, and half the view's height\n   * in world units.\n   */\n  setYMag(ymag) {\n    return this.set('ymag', ymag);\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\nCamera.Type = {\n  /** A perspective camera representing a perspective projection matrix. */\n  PERSPECTIVE: 'perspective',\n  /** An orthographic camera representing an orthographic projection matrix. */\n  ORTHOGRAPHIC: 'orthographic'\n};\n\n/**\n * *Base class for all {@link Property} types that can be attached by an {@link Extension}.*\n *\n * After an {@link Extension} is attached to a glTF {@link Document}, the Extension may be used to\n * construct ExtensionProperty instances, to be referenced throughout the document as prescribed by\n * the Extension. For example, the `KHR_materials_clearcoat` Extension defines a `Clearcoat`\n * ExtensionProperty, which is referenced by {@link Material} Properties in the Document, and may\n * contain references to {@link Texture} properties of its own.\n *\n * For more information on available extensions and their usage, see [Extensions](/extensions).\n *\n * Reference:\n * - [glTF → Extensions](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#specifying-extensions)\n *\n * @category Properties\n */\nclass ExtensionProperty extends Property {\n  /** @hidden */\n  _validateParent(parent) {\n    if (!this.parentTypes.includes(parent.propertyType)) {\n      throw new Error(`Parent \"${parent.propertyType}\" invalid for child \"${this.propertyType}\".`);\n    }\n  }\n}\nExtensionProperty.EXTENSION_NAME = void 0;\n\n/**\n * *Settings associated with a particular use of a {@link Texture}.*\n *\n * Different materials may reuse the same texture but with different texture coordinates,\n * minFilter/magFilter, or wrapS/wrapT settings. The TextureInfo class contains settings\n * derived from both the \"TextureInfo\" and \"Sampler\" properties in the glTF specification,\n * consolidated here for simplicity.\n *\n * TextureInfo properties cannot be directly created. For any material texture slot, such as\n * baseColorTexture, there will be a corresponding method to obtain the TextureInfo for that slot.\n * For example, see {@link Material.getBaseColorTextureInfo}.\n *\n * References:\n * - [glTF → Texture Info](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#reference-textureinfo)\n *\n * @category Properties\n */\nclass TextureInfo extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.TEXTURE_INFO;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      texCoord: 0,\n      magFilter: null,\n      minFilter: null,\n      wrapS: TextureInfo.WrapMode.REPEAT,\n      wrapT: TextureInfo.WrapMode.REPEAT\n    });\n  }\n  /**********************************************************************************************\n   * Texture coordinates.\n   */\n  /** Returns the texture coordinate (UV set) index for the texture. */\n  getTexCoord() {\n    return this.get('texCoord');\n  }\n  /** Sets the texture coordinate (UV set) index for the texture. */\n  setTexCoord(texCoord) {\n    return this.set('texCoord', texCoord);\n  }\n  /**********************************************************************************************\n   * Min/mag filter.\n   */\n  /** Returns the magnification filter applied to the texture. */\n  getMagFilter() {\n    return this.get('magFilter');\n  }\n  /** Sets the magnification filter applied to the texture. */\n  setMagFilter(magFilter) {\n    return this.set('magFilter', magFilter);\n  }\n  /** Sets the minification filter applied to the texture. */\n  getMinFilter() {\n    return this.get('minFilter');\n  }\n  /** Returns the minification filter applied to the texture. */\n  setMinFilter(minFilter) {\n    return this.set('minFilter', minFilter);\n  }\n  /**********************************************************************************************\n   * UV wrapping.\n   */\n  /** Returns the S (U) wrapping mode for UVs used by the texture. */\n  getWrapS() {\n    return this.get('wrapS');\n  }\n  /** Sets the S (U) wrapping mode for UVs used by the texture. */\n  setWrapS(wrapS) {\n    return this.set('wrapS', wrapS);\n  }\n  /** Returns the T (V) wrapping mode for UVs used by the texture. */\n  getWrapT() {\n    return this.get('wrapT');\n  }\n  /** Sets the T (V) wrapping mode for UVs used by the texture. */\n  setWrapT(wrapT) {\n    return this.set('wrapT', wrapT);\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\n/** UV wrapping mode. Values correspond to WebGL enums. */\nTextureInfo.WrapMode = {\n  /** */\n  CLAMP_TO_EDGE: 33071,\n  /** */\n  MIRRORED_REPEAT: 33648,\n  /** */\n  REPEAT: 10497\n};\n/** Magnification filter. Values correspond to WebGL enums. */\nTextureInfo.MagFilter = {\n  /** */\n  NEAREST: 9728,\n  /** */\n  LINEAR: 9729\n};\n/** Minification filter. Values correspond to WebGL enums. */\nTextureInfo.MinFilter = {\n  /** */\n  NEAREST: 9728,\n  /** */\n  LINEAR: 9729,\n  /** */\n  NEAREST_MIPMAP_NEAREST: 9984,\n  /** */\n  LINEAR_MIPMAP_NEAREST: 9985,\n  /** */\n  NEAREST_MIPMAP_LINEAR: 9986,\n  /** */\n  LINEAR_MIPMAP_LINEAR: 9987\n};\n\nconst {\n  R,\n  G,\n  B,\n  A\n} = TextureChannel;\n/**\n * *Materials describe a surface's appearance and response to light.*\n *\n * Each {@link Primitive} within a {@link Mesh} may be assigned a single Material. The number of\n * GPU draw calls typically increases with both the numbers of Primitives and of Materials in an\n * asset; Materials should be reused wherever possible. Techniques like texture atlasing and vertex\n * colors allow objects to have varied appearances while technically sharing a single Material.\n *\n * Material properties are modified by both scalars (like `baseColorFactor`) and textures (like\n * `baseColorTexture`). When both are available, factors are considered linear multipliers against\n * textures of the same name. In the case of base color, vertex colors (`COLOR_0` attributes) are\n * also multiplied.\n *\n * Textures containing color data (`baseColorTexture`, `emissiveTexture`) are sRGB. All other\n * textures are linear. Like other resources, textures should be reused when possible.\n *\n * Usage:\n *\n * ```typescript\n * const material = doc.createMaterial('myMaterial')\n * \t.setBaseColorFactor([1, 0.5, 0.5, 1]) // RGBA\n * \t.setOcclusionTexture(aoTexture)\n * \t.setOcclusionStrength(0.5);\n *\n * mesh.listPrimitives()\n * \t.forEach((prim) => prim.setMaterial(material));\n * ```\n *\n * @category Properties\n */\nclass Material extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.MATERIAL;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      alphaMode: Material.AlphaMode.OPAQUE,\n      alphaCutoff: 0.5,\n      doubleSided: false,\n      baseColorFactor: [1, 1, 1, 1],\n      baseColorTexture: null,\n      baseColorTextureInfo: new TextureInfo(this.graph, 'baseColorTextureInfo'),\n      emissiveFactor: [0, 0, 0],\n      emissiveTexture: null,\n      emissiveTextureInfo: new TextureInfo(this.graph, 'emissiveTextureInfo'),\n      normalScale: 1,\n      normalTexture: null,\n      normalTextureInfo: new TextureInfo(this.graph, 'normalTextureInfo'),\n      occlusionStrength: 1,\n      occlusionTexture: null,\n      occlusionTextureInfo: new TextureInfo(this.graph, 'occlusionTextureInfo'),\n      roughnessFactor: 1,\n      metallicFactor: 1,\n      metallicRoughnessTexture: null,\n      metallicRoughnessTextureInfo: new TextureInfo(this.graph, 'metallicRoughnessTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Double-sided / culling.\n   */\n  /** Returns true when both sides of triangles should be rendered. May impact performance. */\n  getDoubleSided() {\n    return this.get('doubleSided');\n  }\n  /** Sets whether to render both sides of triangles. May impact performance. */\n  setDoubleSided(doubleSided) {\n    return this.set('doubleSided', doubleSided);\n  }\n  /**********************************************************************************************\n   * Alpha.\n   */\n  /** Returns material alpha, equivalent to baseColorFactor[3]. */\n  getAlpha() {\n    return this.get('baseColorFactor')[3];\n  }\n  /** Sets material alpha, equivalent to baseColorFactor[3]. */\n  setAlpha(alpha) {\n    const baseColorFactor = this.get('baseColorFactor').slice();\n    baseColorFactor[3] = alpha;\n    return this.set('baseColorFactor', baseColorFactor);\n  }\n  /**\n   * Returns the mode of the material's alpha channels, which are provided by `baseColorFactor`\n   * and `baseColorTexture`.\n   *\n   * - `OPAQUE`: Alpha value is ignored and the rendered output is fully opaque.\n   * - `BLEND`: Alpha value is used to determine the transparency each pixel on a surface, and\n   * \tthe fraction of surface vs. background color in the final result. Alpha blending creates\n   *\tsignificant edge cases in realtime renderers, and some care when structuring the model is\n   * \tnecessary for good results. In particular, transparent geometry should be kept in separate\n   * \tmeshes or primitives from opaque geometry. The `depthWrite` or `zWrite` settings in engines\n   * \tshould usually be disabled on transparent materials.\n   * - `MASK`: Alpha value is compared against `alphaCutoff` threshold for each pixel on a\n   * \tsurface, and the pixel is either fully visible or fully discarded based on that cutoff.\n   * \tThis technique is useful for things like leafs/foliage, grass, fabric meshes, and other\n   * \tsurfaces where no semitransparency is needed. With a good choice of `alphaCutoff`, surfaces\n   * \tthat don't require semitransparency can avoid the performance penalties and visual issues\n   * \tinvolved with `BLEND` transparency.\n   *\n   * Reference:\n   * - [glTF → material.alphaMode](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialalphamode)\n   */\n  getAlphaMode() {\n    return this.get('alphaMode');\n  }\n  /** Sets the mode of the material's alpha channels. See {@link Material.getAlphaMode getAlphaMode} for details. */\n  setAlphaMode(alphaMode) {\n    return this.set('alphaMode', alphaMode);\n  }\n  /** Returns the visibility threshold; applied only when `.alphaMode='MASK'`. */\n  getAlphaCutoff() {\n    return this.get('alphaCutoff');\n  }\n  /** Sets the visibility threshold; applied only when `.alphaMode='MASK'`. */\n  setAlphaCutoff(alphaCutoff) {\n    return this.set('alphaCutoff', alphaCutoff);\n  }\n  /**********************************************************************************************\n   * Base color.\n   */\n  /**\n   * Base color / albedo factor; Linear-sRGB components.\n   * See {@link Material.getBaseColorTexture getBaseColorTexture}.\n   */\n  getBaseColorFactor() {\n    return this.get('baseColorFactor');\n  }\n  /**\n   * Base color / albedo factor; Linear-sRGB components.\n   * See {@link Material.getBaseColorTexture getBaseColorTexture}.\n   */\n  setBaseColorFactor(baseColorFactor) {\n    return this.set('baseColorFactor', baseColorFactor);\n  }\n  /**\n   * Base color / albedo. The visible color of a non-metallic surface under constant ambient\n   * light would be a linear combination (multiplication) of its vertex colors, base color\n   * factor, and base color texture. Lighting, and reflections in metallic or smooth surfaces,\n   * also effect the final color. The alpha (`.a`) channel of base color factors and textures\n   * will have varying effects, based on the setting of {@link Material.getAlphaMode getAlphaMode}.\n   *\n   * Reference:\n   * - [glTF → material.pbrMetallicRoughness.baseColorFactor](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#pbrmetallicroughnessbasecolorfactor)\n   */\n  getBaseColorTexture() {\n    return this.getRef('baseColorTexture');\n  }\n  /**\n   * Settings affecting the material's use of its base color texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getBaseColorTextureInfo() {\n    return this.getRef('baseColorTexture') ? this.getRef('baseColorTextureInfo') : null;\n  }\n  /** Sets base color / albedo texture. See {@link Material.getBaseColorTexture getBaseColorTexture}. */\n  setBaseColorTexture(texture) {\n    return this.setRef('baseColorTexture', texture, {\n      channels: R | G | B | A,\n      isColor: true\n    });\n  }\n  /**********************************************************************************************\n   * Emissive.\n   */\n  /** Emissive color; Linear-sRGB components. See {@link Material.getEmissiveTexture getEmissiveTexture}. */\n  getEmissiveFactor() {\n    return this.get('emissiveFactor');\n  }\n  /** Emissive color; Linear-sRGB components. See {@link Material.getEmissiveTexture getEmissiveTexture}. */\n  setEmissiveFactor(emissiveFactor) {\n    return this.set('emissiveFactor', emissiveFactor);\n  }\n  /**\n   * Emissive texture. Emissive color is added to any base color of the material, after any\n   * lighting/shadowing are applied. An emissive color does not inherently \"glow\", or affect\n   * objects around it at all. To create that effect, most viewers must also enable a\n   * post-processing effect called \"bloom\".\n   *\n   * Reference:\n   * - [glTF → material.emissiveTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialemissivetexture)\n   */\n  getEmissiveTexture() {\n    return this.getRef('emissiveTexture');\n  }\n  /**\n   * Settings affecting the material's use of its emissive texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getEmissiveTextureInfo() {\n    return this.getRef('emissiveTexture') ? this.getRef('emissiveTextureInfo') : null;\n  }\n  /** Sets emissive texture. See {@link Material.getEmissiveTexture getEmissiveTexture}. */\n  setEmissiveTexture(texture) {\n    return this.setRef('emissiveTexture', texture, {\n      channels: R | G | B,\n      isColor: true\n    });\n  }\n  /**********************************************************************************************\n   * Normal.\n   */\n  /** Normal (surface detail) factor; linear multiplier. Affects `.normalTexture`. */\n  getNormalScale() {\n    return this.get('normalScale');\n  }\n  /** Normal (surface detail) factor; linear multiplier. Affects `.normalTexture`. */\n  setNormalScale(scale) {\n    return this.set('normalScale', scale);\n  }\n  /**\n   * Normal (surface detail) texture.\n   *\n   * A tangent space normal map. The texture contains RGB components. Each texel represents the\n   * XYZ components of a normal vector in tangent space. Red [0 to 255] maps to X [-1 to 1].\n   * Green [0 to 255] maps to Y [-1 to 1]. Blue [128 to 255] maps to Z [1/255 to 1]. The normal\n   * vectors use OpenGL conventions where +X is right and +Y is up. +Z points toward the viewer.\n   *\n   * Reference:\n   * - [glTF → material.normalTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialnormaltexture)\n   */\n  getNormalTexture() {\n    return this.getRef('normalTexture');\n  }\n  /**\n   * Settings affecting the material's use of its normal texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getNormalTextureInfo() {\n    return this.getRef('normalTexture') ? this.getRef('normalTextureInfo') : null;\n  }\n  /** Sets normal (surface detail) texture. See {@link Material.getNormalTexture getNormalTexture}. */\n  setNormalTexture(texture) {\n    return this.setRef('normalTexture', texture, {\n      channels: R | G | B\n    });\n  }\n  /**********************************************************************************************\n   * Occlusion.\n   */\n  /** (Ambient) Occlusion factor; linear multiplier. Affects `.occlusionTexture`. */\n  getOcclusionStrength() {\n    return this.get('occlusionStrength');\n  }\n  /** Sets (ambient) occlusion factor; linear multiplier. Affects `.occlusionTexture`. */\n  setOcclusionStrength(strength) {\n    return this.set('occlusionStrength', strength);\n  }\n  /**\n   * (Ambient) Occlusion texture, generally used for subtle 'baked' shadowing effects that are\n   * independent of an object's position, such as shading in inset areas and corners. Direct\n   * lighting is not affected by occlusion, so at least one indirect light source must be present\n   * in the scene for occlusion effects to be visible.\n   *\n   * The occlusion values are sampled from the R channel. Higher values indicate areas that\n   * should receive full indirect lighting and lower values indicate no indirect lighting.\n   *\n   * Reference:\n   * - [glTF → material.occlusionTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialocclusiontexture)\n   */\n  getOcclusionTexture() {\n    return this.getRef('occlusionTexture');\n  }\n  /**\n   * Settings affecting the material's use of its occlusion texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getOcclusionTextureInfo() {\n    return this.getRef('occlusionTexture') ? this.getRef('occlusionTextureInfo') : null;\n  }\n  /** Sets (ambient) occlusion texture. See {@link Material.getOcclusionTexture getOcclusionTexture}. */\n  setOcclusionTexture(texture) {\n    return this.setRef('occlusionTexture', texture, {\n      channels: R\n    });\n  }\n  /**********************************************************************************************\n   * Metallic / roughness.\n   */\n  /**\n   * Roughness factor; linear multiplier. Affects roughness channel of\n   * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  getRoughnessFactor() {\n    return this.get('roughnessFactor');\n  }\n  /**\n   * Sets roughness factor; linear multiplier. Affects roughness channel of\n   * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  setRoughnessFactor(factor) {\n    return this.set('roughnessFactor', factor);\n  }\n  /**\n   * Metallic factor; linear multiplier. Affects roughness channel of\n   * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  getMetallicFactor() {\n    return this.get('metallicFactor');\n  }\n  /**\n   * Sets metallic factor; linear multiplier. Affects roughness channel of\n   * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  setMetallicFactor(factor) {\n    return this.set('metallicFactor', factor);\n  }\n  /**\n   * Metallic roughness texture. The metalness values are sampled from the B channel. The\n   * roughness values are sampled from the G channel. When a material is fully metallic,\n   * or nearly so, it may require image-based lighting (i.e. an environment map) or global\n   * illumination to appear well-lit.\n   *\n   * Reference:\n   * - [glTF → material.pbrMetallicRoughness.metallicRoughnessTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#pbrmetallicroughnessmetallicroughnesstexture)\n   */\n  getMetallicRoughnessTexture() {\n    return this.getRef('metallicRoughnessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its metallic/roughness texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getMetallicRoughnessTextureInfo() {\n    return this.getRef('metallicRoughnessTexture') ? this.getRef('metallicRoughnessTextureInfo') : null;\n  }\n  /**\n   * Sets metallic/roughness texture.\n   * See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  setMetallicRoughnessTexture(texture) {\n    return this.setRef('metallicRoughnessTexture', texture, {\n      channels: G | B\n    });\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\nMaterial.AlphaMode = {\n  /**\n   * The alpha value is ignored and the rendered output is fully opaque\n   */\n  OPAQUE: 'OPAQUE',\n  /**\n   * The rendered output is either fully opaque or fully transparent depending on the alpha\n   * value and the specified alpha cutoff value\n   */\n  MASK: 'MASK',\n  /**\n   * The alpha value is used to composite the source and destination areas. The rendered\n   * output is combined with the background using the normal painting operation (i.e. the\n   * Porter and Duff over operator)\n   */\n  BLEND: 'BLEND'\n};\n\n/**\n * *Meshes define reusable geometry (triangles, lines, or points) and are instantiated by\n * {@link Node}s.*\n *\n * Each draw call required to render a mesh is represented as a {@link Primitive}. Meshes typically\n * have only a single {@link Primitive}, but may have more for various reasons. A mesh manages only\n * a list of primitives — materials, morph targets, and other properties are managed on a per-\n * primitive basis.\n *\n * When the same geometry and material should be rendered at multiple places in the scene, reuse\n * the same Mesh instance and attach it to multiple nodes for better efficiency. Where the geometry\n * is shared but the material is not, reusing {@link Accessor}s under different meshes and\n * primitives can similarly improve transmission efficiency, although some rendering efficiency is\n * lost as the number of materials in a scene increases.\n *\n * Usage:\n *\n * ```ts\n * const primitive = doc.createPrimitive()\n * \t.setAttribute('POSITION', positionAccessor)\n * \t.setAttribute('TEXCOORD_0', uvAccessor);\n * const mesh = doc.createMesh('myMesh')\n * \t.addPrimitive(primitive);\n * node.setMesh(mesh);\n * ```\n *\n * References:\n * - [glTF → Geometry](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#geometry)\n *\n * @category Properties\n */\nclass Mesh extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.MESH;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      weights: [],\n      primitives: new RefSet()\n    });\n  }\n  /** Adds a {@link Primitive} to the mesh's draw call list. */\n  addPrimitive(primitive) {\n    return this.addRef('primitives', primitive);\n  }\n  /** Removes a {@link Primitive} from the mesh's draw call list. */\n  removePrimitive(primitive) {\n    return this.removeRef('primitives', primitive);\n  }\n  /** Lists {@link Primitive} draw calls of the mesh. */\n  listPrimitives() {\n    return this.listRefs('primitives');\n  }\n  /**\n   * Initial weights of each {@link PrimitiveTarget} on this mesh. Each {@link Primitive} must\n   * have the same number of targets. Most engines only support 4-8 active morph targets at a\n   * time.\n   */\n  getWeights() {\n    return this.get('weights');\n  }\n  /**\n   * Initial weights of each {@link PrimitiveTarget} on this mesh. Each {@link Primitive} must\n   * have the same number of targets. Most engines only support 4-8 active morph targets at a\n   * time.\n   */\n  setWeights(weights) {\n    return this.set('weights', weights);\n  }\n}\n\n/**\n * *Nodes are the objects that comprise a {@link Scene}.*\n *\n * Each Node may have one or more children, and a transform (position, rotation, and scale) that\n * applies to all of its descendants. A Node may also reference (or \"instantiate\") other resources\n * at its location, including {@link Mesh}, Camera, Light, and Skin properties. A Node cannot be\n * part of more than one {@link Scene}.\n *\n * A Node's local transform is represented with array-like objects, intended to be compatible with\n * [gl-matrix](https://github.com/toji/gl-matrix), or with the `toArray`/`fromArray` methods of\n * libraries like three.js and babylon.js.\n *\n * Usage:\n *\n * ```ts\n * const node = doc.createNode('myNode')\n * \t.setMesh(mesh)\n * \t.setTranslation([0, 0, 0])\n * \t.addChild(otherNode);\n * ```\n *\n * References:\n * - [glTF → Nodes and Hierarchy](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#nodes-and-hierarchy)\n *\n * @category Properties\n */\nclass Node extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.NODE;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      translation: [0, 0, 0],\n      rotation: [0, 0, 0, 1],\n      scale: [1, 1, 1],\n      weights: [],\n      camera: null,\n      mesh: null,\n      skin: null,\n      children: new RefSet()\n    });\n  }\n  copy(other, resolve = COPY_IDENTITY) {\n    // Node cannot be copied, only cloned. Copying is shallow, but Nodes cannot have more than\n    // one parent. Rather than leaving one of the two Nodes without children, throw an error here.\n    if (resolve === COPY_IDENTITY) throw new Error('Node cannot be copied.');\n    return super.copy(other, resolve);\n  }\n  /**********************************************************************************************\n   * Local transform.\n   */\n  /** Returns the translation (position) of this Node in local space. */\n  getTranslation() {\n    return this.get('translation');\n  }\n  /** Returns the rotation (quaternion) of this Node in local space. */\n  getRotation() {\n    return this.get('rotation');\n  }\n  /** Returns the scale of this Node in local space. */\n  getScale() {\n    return this.get('scale');\n  }\n  /** Sets the translation (position) of this Node in local space. */\n  setTranslation(translation) {\n    return this.set('translation', translation);\n  }\n  /** Sets the rotation (quaternion) of this Node in local space. */\n  setRotation(rotation) {\n    return this.set('rotation', rotation);\n  }\n  /** Sets the scale of this Node in local space. */\n  setScale(scale) {\n    return this.set('scale', scale);\n  }\n  /** Returns the local matrix of this Node. */\n  getMatrix() {\n    return MathUtils.compose(this.get('translation'), this.get('rotation'), this.get('scale'), []);\n  }\n  /** Sets the local matrix of this Node. Matrix will be decomposed to TRS properties. */\n  setMatrix(matrix) {\n    const translation = this.get('translation').slice();\n    const rotation = this.get('rotation').slice();\n    const scale = this.get('scale').slice();\n    MathUtils.decompose(matrix, translation, rotation, scale);\n    return this.set('translation', translation).set('rotation', rotation).set('scale', scale);\n  }\n  /**********************************************************************************************\n   * World transform.\n   */\n  /** Returns the translation (position) of this Node in world space. */\n  getWorldTranslation() {\n    const t = [0, 0, 0];\n    MathUtils.decompose(this.getWorldMatrix(), t, [0, 0, 0, 1], [1, 1, 1]);\n    return t;\n  }\n  /** Returns the rotation (quaternion) of this Node in world space. */\n  getWorldRotation() {\n    const r = [0, 0, 0, 1];\n    MathUtils.decompose(this.getWorldMatrix(), [0, 0, 0], r, [1, 1, 1]);\n    return r;\n  }\n  /** Returns the scale of this Node in world space. */\n  getWorldScale() {\n    const s = [1, 1, 1];\n    MathUtils.decompose(this.getWorldMatrix(), [0, 0, 0], [0, 0, 0, 1], s);\n    return s;\n  }\n  /** Returns the world matrix of this Node. */\n  getWorldMatrix() {\n    // Build ancestor chain.\n    const ancestors = [];\n    for (let node = this; node != null; node = node.getParentNode()) {\n      ancestors.push(node);\n    }\n    // Compute world matrix.\n    let ancestor;\n    const worldMatrix = ancestors.pop().getMatrix();\n    while (ancestor = ancestors.pop()) {\n      multiply(worldMatrix, worldMatrix, ancestor.getMatrix());\n    }\n    return worldMatrix;\n  }\n  /**********************************************************************************************\n   * Scene hierarchy.\n   */\n  /**\n   * Adds the given Node as a child of this Node.\n   *\n   * Requirements:\n   *\n   * 1. Nodes MAY be root children of multiple {@link Scene Scenes}\n   * 2. Nodes MUST NOT be children of >1 Node\n   * 3. Nodes MUST NOT be children of both Nodes and {@link Scene Scenes}\n   *\n   * The `addChild` method enforces these restrictions automatically, and will\n   * remove the new child from previous parents where needed. This behavior\n   * may change in future major releases of the library.\n   */\n  addChild(child) {\n    // Remove existing parents.\n    const parentNode = child.getParentNode();\n    if (parentNode) parentNode.removeChild(child);\n    for (const parent of child.listParents()) {\n      if (parent.propertyType === PropertyType.SCENE) {\n        parent.removeChild(child);\n      }\n    }\n    return this.addRef('children', child);\n  }\n  /** Removes a Node from this Node's child Node list. */\n  removeChild(child) {\n    return this.removeRef('children', child);\n  }\n  /** Lists all child Nodes of this Node. */\n  listChildren() {\n    return this.listRefs('children');\n  }\n  /**\n   * Returns the Node's unique parent Node within the scene graph. If the\n   * Node has no parents, or is a direct child of the {@link Scene}\n   * (\"root node\"), this method returns null.\n   *\n   * Unrelated to {@link Property.listParents}, which lists all resource\n   * references from properties of any type ({@link Skin}, {@link Root}, ...).\n   */\n  getParentNode() {\n    for (const parent of this.listParents()) {\n      if (parent.propertyType === PropertyType.NODE) {\n        return parent;\n      }\n    }\n    return null;\n  }\n  /**********************************************************************************************\n   * Attachments.\n   */\n  /** Returns the {@link Mesh}, if any, instantiated at this Node. */\n  getMesh() {\n    return this.getRef('mesh');\n  }\n  /**\n   * Sets a {@link Mesh} to be instantiated at this Node. A single mesh may be instantiated by\n   * multiple Nodes; reuse of this sort is strongly encouraged.\n   */\n  setMesh(mesh) {\n    return this.setRef('mesh', mesh);\n  }\n  /** Returns the {@link Camera}, if any, instantiated at this Node. */\n  getCamera() {\n    return this.getRef('camera');\n  }\n  /** Sets a {@link Camera} to be instantiated at this Node. */\n  setCamera(camera) {\n    return this.setRef('camera', camera);\n  }\n  /** Returns the {@link Skin}, if any, instantiated at this Node. */\n  getSkin() {\n    return this.getRef('skin');\n  }\n  /** Sets a {@link Skin} to be instantiated at this Node. */\n  setSkin(skin) {\n    return this.setRef('skin', skin);\n  }\n  /**\n   * Initial weights of each {@link PrimitiveTarget} for the mesh instance at this Node.\n   * Most engines only support 4-8 active morph targets at a time.\n   */\n  getWeights() {\n    return this.get('weights');\n  }\n  /**\n   * Initial weights of each {@link PrimitiveTarget} for the mesh instance at this Node.\n   * Most engines only support 4-8 active morph targets at a time.\n   */\n  setWeights(weights) {\n    return this.set('weights', weights);\n  }\n  /**********************************************************************************************\n   * Helpers.\n   */\n  /** Visits this {@link Node} and its descendants, top-down. */\n  traverse(fn) {\n    fn(this);\n    for (const child of this.listChildren()) child.traverse(fn);\n    return this;\n  }\n}\n\n/**\n * *Primitives are individual GPU draw calls comprising a {@link Mesh}.*\n *\n * Meshes typically have only a single Primitive, although various cases may require more. Each\n * primitive may be assigned vertex attributes, morph target attributes, and a material. Any of\n * these properties should be reused among multiple primitives where feasible.\n *\n * Primitives cannot be moved independently of other primitives within the same mesh, except\n * through the use of morph targets and skinning. If independent movement or other runtime\n * behavior is necessary (like raycasting or collisions) prefer to assign each primitive to a\n * different mesh. The number of GPU draw calls is typically not affected by grouping or\n * ungrouping primitives to a mesh.\n *\n * Each primitive may optionally be deformed by one or more morph targets, stored in a\n * {@link PrimitiveTarget}.\n *\n * Usage:\n *\n * ```ts\n * const primitive = doc.createPrimitive()\n * \t.setAttribute('POSITION', positionAccessor)\n * \t.setAttribute('TEXCOORD_0', uvAccessor)\n * \t.setMaterial(material);\n * mesh.addPrimitive(primitive);\n * node.setMesh(mesh);\n * ```\n *\n * References:\n * - [glTF → Geometry](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#geometry)\n *\n * @category Properties\n */\nclass Primitive extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.PRIMITIVE;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      mode: Primitive.Mode.TRIANGLES,\n      material: null,\n      indices: null,\n      attributes: new RefMap(),\n      targets: new RefSet()\n    });\n  }\n  /**********************************************************************************************\n   * Primitive data.\n   */\n  /** Returns an {@link Accessor} with indices of vertices to be drawn. */\n  getIndices() {\n    return this.getRef('indices');\n  }\n  /**\n   * Sets an {@link Accessor} with indices of vertices to be drawn. In `TRIANGLES` draw mode,\n   * each set of three indices define a triangle. The front face has a counter-clockwise (CCW)\n   * winding order.\n   */\n  setIndices(indices) {\n    return this.setRef('indices', indices, {\n      usage: BufferViewUsage$1.ELEMENT_ARRAY_BUFFER\n    });\n  }\n  /** Returns a vertex attribute as an {@link Accessor}. */\n  getAttribute(semantic) {\n    return this.getRefMap('attributes', semantic);\n  }\n  /**\n   * Sets a vertex attribute to an {@link Accessor}. All attributes must have the same vertex\n   * count.\n   */\n  setAttribute(semantic, accessor) {\n    return this.setRefMap('attributes', semantic, accessor, {\n      usage: BufferViewUsage$1.ARRAY_BUFFER\n    });\n  }\n  /**\n   * Lists all vertex attribute {@link Accessor}s associated with the primitive, excluding any\n   * attributes used for morph targets. For example, `[positionAccessor, normalAccessor,\n   * uvAccessor]`. Order will be consistent with the order returned by {@link .listSemantics}().\n   */\n  listAttributes() {\n    return this.listRefMapValues('attributes');\n  }\n  /**\n   * Lists all vertex attribute semantics associated with the primitive, excluding any semantics\n   * used for morph targets. For example, `['POSITION', 'NORMAL', 'TEXCOORD_0']`. Order will be\n   * consistent with the order returned by {@link .listAttributes}().\n   */\n  listSemantics() {\n    return this.listRefMapKeys('attributes');\n  }\n  /** Returns the material used to render the primitive. */\n  getMaterial() {\n    return this.getRef('material');\n  }\n  /** Sets the material used to render the primitive. */\n  setMaterial(material) {\n    return this.setRef('material', material);\n  }\n  /**********************************************************************************************\n   * Mode.\n   */\n  /**\n   * Returns the GPU draw mode (`TRIANGLES`, `LINES`, `POINTS`...) as a WebGL enum value.\n   *\n   * Reference:\n   * - [glTF → `primitive.mode`](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#primitivemode)\n   */\n  getMode() {\n    return this.get('mode');\n  }\n  /**\n   * Sets the GPU draw mode (`TRIANGLES`, `LINES`, `POINTS`...) as a WebGL enum value.\n   *\n   * Reference:\n   * - [glTF → `primitive.mode`](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#primitivemode)\n   */\n  setMode(mode) {\n    return this.set('mode', mode);\n  }\n  /**********************************************************************************************\n   * Morph targets.\n   */\n  /** Lists all morph targets associated with the primitive. */\n  listTargets() {\n    return this.listRefs('targets');\n  }\n  /**\n   * Adds a morph target to the primitive. All primitives in the same mesh must have the same\n   * number of targets.\n   */\n  addTarget(target) {\n    return this.addRef('targets', target);\n  }\n  /**\n   * Removes a morph target from the primitive. All primitives in the same mesh must have the same\n   * number of targets.\n   */\n  removeTarget(target) {\n    return this.removeRef('targets', target);\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\n/** Type of primitives to render. All valid values correspond to WebGL enums. */\nPrimitive.Mode = {\n  /** Draw single points. */\n  POINTS: 0,\n  /** Draw lines. Each vertex connects to the one after it. */\n  LINES: 1,\n  /**\n   * Draw lines. Each set of two vertices is treated as a separate line segment.\n   * @deprecated See {@link https://github.com/KhronosGroup/glTF/issues/1883 KhronosGroup/glTF#1883}.\n   */\n  LINE_LOOP: 2,\n  /** Draw a connected group of line segments from the first vertex to the last,  */\n  LINE_STRIP: 3,\n  /** Draw triangles. Each set of three vertices creates a separate triangle. */\n  TRIANGLES: 4,\n  /** Draw a connected strip of triangles. */\n  TRIANGLE_STRIP: 5,\n  /**\n   * Draw a connected group of triangles. Each vertex connects to the previous and the first\n   * vertex in the fan.\n   * @deprecated See {@link https://github.com/KhronosGroup/glTF/issues/1883 KhronosGroup/glTF#1883}.\n   */\n  TRIANGLE_FAN: 6\n};\n\n/**\n * *Morph target or shape key used to deform one {@link Primitive} in a {@link Mesh}.*\n *\n * A PrimitiveTarget contains a `POSITION` attribute (and optionally `NORMAL` and `TANGENT`) that\n * can additively deform the base attributes on a {@link Mesh} {@link Primitive}. Vertex values\n * of `0, 0, 0` in the target will have no effect, whereas a value of `0, 1, 0` would offset that\n * vertex in the base geometry by y+=1. Morph targets can be fully or partially applied: their\n * default state is controlled by {@link Mesh.getWeights}, which can also be overridden for a\n * particular instantiation of a {@link Mesh}, using {@link Node.getWeights}.\n *\n * Reference:\n * - [glTF → Morph Targets](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#morph-targets)\n *\n * @category Properties\n */\nclass PrimitiveTarget extends Property {\n  init() {\n    this.propertyType = PropertyType.PRIMITIVE_TARGET;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      attributes: new RefMap()\n    });\n  }\n  /** Returns a morph target vertex attribute as an {@link Accessor}. */\n  getAttribute(semantic) {\n    return this.getRefMap('attributes', semantic);\n  }\n  /**\n   * Sets a morph target vertex attribute to an {@link Accessor}.\n   */\n  setAttribute(semantic, accessor) {\n    return this.setRefMap('attributes', semantic, accessor, {\n      usage: BufferViewUsage$1.ARRAY_BUFFER\n    });\n  }\n  /**\n   * Lists all morph target vertex attribute {@link Accessor}s associated. Order will be\n   * consistent with the order returned by {@link .listSemantics}().\n   */\n  listAttributes() {\n    return this.listRefMapValues('attributes');\n  }\n  /**\n   * Lists all morph target vertex attribute semantics associated. Order will be\n   * consistent with the order returned by {@link .listAttributes}().\n   */\n  listSemantics() {\n    return this.listRefMapKeys('attributes');\n  }\n}\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\n/**\n * *Scenes represent a set of visual objects to render.*\n *\n * Typically a glTF file contains only a single Scene, although more are allowed and useful in some\n * cases. No particular meaning is associated with additional Scenes, except as defined by the\n * application. Scenes reference {@link Node}s, and a single Node cannot be a member of more than\n * one Scene.\n *\n * References:\n * - [glTF → Scenes](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#scenes)\n * - [glTF → Coordinate System and Units](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#coordinate-system-and-units)\n *\n * @category Properties\n */\nclass Scene extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.SCENE;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      children: new RefSet()\n    });\n  }\n  copy(other, resolve = COPY_IDENTITY) {\n    // Scene cannot be copied, only cloned. Copying is shallow, but nodes cannot have more than\n    // one parent. Rather than leaving one of the two Scenes without children, throw an error here.\n    if (resolve === COPY_IDENTITY) throw new Error('Scene cannot be copied.');\n    return super.copy(other, resolve);\n  }\n  /**\n   * Adds a {@link Node} to the Scene.\n   *\n   * Requirements:\n   *\n   * 1. Nodes MAY be root children of multiple {@link Scene Scenes}\n   * 2. Nodes MUST NOT be children of >1 Node\n   * 3. Nodes MUST NOT be children of both Nodes and {@link Scene Scenes}\n   *\n   * The `addChild` method enforces these restrictions automatically, and will\n   * remove the new child from previous parents where needed. This behavior\n   * may change in future major releases of the library.\n   */\n  addChild(node) {\n    // Remove existing parent.\n    const parentNode = node.getParentNode();\n    if (parentNode) parentNode.removeChild(node);\n    return this.addRef('children', node);\n  }\n  /** Removes a {@link Node} from the Scene. */\n  removeChild(node) {\n    return this.removeRef('children', node);\n  }\n  /**\n   * Lists all direct child {@link Node Nodes} in the Scene. Indirect\n   * descendants (children of children) are not returned, but may be\n   * reached recursively or with {@link Scene.traverse} instead.\n   */\n  listChildren() {\n    return this.listRefs('children');\n  }\n  /** Visits each {@link Node} in the Scene, including descendants, top-down. */\n  traverse(fn) {\n    for (const node of this.listChildren()) node.traverse(fn);\n    return this;\n  }\n}\n\n/**\n * *Collection of {@link Node} joints and inverse bind matrices used with skinned {@link Mesh}\n * instances.*\n *\n * Reference\n * - [glTF → Skins](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#skins)\n *\n * @category Properties\n */\nclass Skin extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.SKIN;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      skeleton: null,\n      inverseBindMatrices: null,\n      joints: new RefSet()\n    });\n  }\n  /**\n   * {@link Node} used as a skeleton root. The node must be the closest common root of the joints\n   * hierarchy or a direct or indirect parent node of the closest common root.\n   */\n  getSkeleton() {\n    return this.getRef('skeleton');\n  }\n  /**\n   * {@link Node} used as a skeleton root. The node must be the closest common root of the joints\n   * hierarchy or a direct or indirect parent node of the closest common root.\n   */\n  setSkeleton(skeleton) {\n    return this.setRef('skeleton', skeleton);\n  }\n  /**\n   * {@link Accessor} containing the floating-point 4x4 inverse-bind matrices. The default is\n   * that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were\n   * pre-applied.\n   */\n  getInverseBindMatrices() {\n    return this.getRef('inverseBindMatrices');\n  }\n  /**\n   * {@link Accessor} containing the floating-point 4x4 inverse-bind matrices. The default is\n   * that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were\n   * pre-applied.\n   */\n  setInverseBindMatrices(inverseBindMatrices) {\n    return this.setRef('inverseBindMatrices', inverseBindMatrices, {\n      usage: BufferViewUsage$1.INVERSE_BIND_MATRICES\n    });\n  }\n  /** Adds a joint {@link Node} to this {@link Skin}. */\n  addJoint(joint) {\n    return this.addRef('joints', joint);\n  }\n  /** Removes a joint {@link Node} from this {@link Skin}. */\n  removeJoint(joint) {\n    return this.removeRef('joints', joint);\n  }\n  /** Lists joints ({@link Node}s used as joints or bones) in this {@link Skin}. */\n  listJoints() {\n    return this.listRefs('joints');\n  }\n}\n\n/**\n * *Texture, or images, referenced by {@link Material} properties.*\n *\n * Textures in glTF Transform are a combination of glTF's `texture` and `image` properties, and\n * should be unique within a document, such that no other texture contains the same\n * {@link Texture.getImage getImage()} data. Where duplicates may already exist, the `dedup({textures: true})`\n * transform can remove them. A {@link Document} with N texture properties will be exported to a\n * glTF file with N `image` properties, and the minimum number of `texture` properties necessary\n * for the materials that use it.\n *\n * For properties associated with a particular _use_ of a texture, see {@link TextureInfo}.\n *\n * Reference:\n * - [glTF → Textures](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#textures)\n * - [glTF → Images](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#images)\n *\n * @category Properties\n */\nclass Texture extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.TEXTURE;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      image: null,\n      mimeType: '',\n      uri: ''\n    });\n  }\n  /**********************************************************************************************\n   * MIME type / format.\n   */\n  /** Returns the MIME type for this texture ('image/jpeg' or 'image/png'). */\n  getMimeType() {\n    return this.get('mimeType') || ImageUtils.extensionToMimeType(FileUtils.extension(this.get('uri')));\n  }\n  /**\n   * Sets the MIME type for this texture ('image/jpeg' or 'image/png'). If the texture does not\n   * have a URI, a MIME type is required for correct export.\n   */\n  setMimeType(mimeType) {\n    return this.set('mimeType', mimeType);\n  }\n  /**********************************************************************************************\n   * URI / filename.\n   */\n  /** Returns the URI (e.g. 'path/to/file.png') for this texture. */\n  getURI() {\n    return this.get('uri');\n  }\n  /**\n   * Sets the URI (e.g. 'path/to/file.png') for this texture. If the texture does not have a MIME\n   * type, a URI is required for correct export.\n   */\n  setURI(uri) {\n    this.set('uri', uri);\n    const mimeType = ImageUtils.extensionToMimeType(FileUtils.extension(uri));\n    if (mimeType) this.set('mimeType', mimeType);\n    return this;\n  }\n  /**********************************************************************************************\n   * Image data.\n   */\n  /** Returns the raw image data for this texture. */\n  getImage() {\n    return this.get('image');\n  }\n  /** Sets the raw image data for this texture. */\n  setImage(image) {\n    return this.set('image', BufferUtils.assertView(image));\n  }\n  /** Returns the size, in pixels, of this texture. */\n  getSize() {\n    const image = this.get('image');\n    if (!image) return null;\n    return ImageUtils.getSize(image, this.getMimeType());\n  }\n}\n\n/**\n * *Root property of a glTF asset.*\n *\n * Any properties to be exported with a particular asset must be referenced (directly or\n * indirectly) by the root. Metadata about the asset's license, generator, and glTF specification\n * version are stored in the asset, accessible with {@link Root.getAsset}.\n *\n * Properties are added to the root with factory methods on its {@link Document}, and removed by\n * calling {@link Property.dispose}() on the resource. Any properties that have been created but\n * not disposed will be included when calling the various `root.list*()` methods.\n *\n * A document's root cannot be removed, and no other root may be created. Unlike other\n * {@link Property} types, the `.dispose()`, `.detach()` methods have no useful function on a\n * Root property.\n *\n * Usage:\n *\n * ```ts\n * const root = document.getRoot();\n * const scene = document.createScene('myScene');\n * const node = document.createNode('myNode');\n * scene.addChild(node);\n *\n * console.log(root.listScenes()); // → [scene x 1]\n * ```\n *\n * Reference: [glTF → Concepts](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#concepts)\n *\n * @category Properties\n */\nclass Root extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.ROOT;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      asset: {\n        generator: `glTF-Transform ${VERSION}`,\n        version: '2.0'\n      },\n      defaultScene: null,\n      accessors: new RefSet(),\n      animations: new RefSet(),\n      buffers: new RefSet(),\n      cameras: new RefSet(),\n      materials: new RefSet(),\n      meshes: new RefSet(),\n      nodes: new RefSet(),\n      scenes: new RefSet(),\n      skins: new RefSet(),\n      textures: new RefSet()\n    });\n  }\n  /** @internal */\n  constructor(graph) {\n    super(graph);\n    this._extensions = new Set();\n    graph.addEventListener('node:create', event => {\n      this._addChildOfRoot(event.target);\n    });\n  }\n  clone() {\n    throw new Error('Root cannot be cloned.');\n  }\n  copy(other, resolve = COPY_IDENTITY) {\n    // Root cannot be cloned in isolation: only with its Document. Extensions are managed by\n    // the Document during cloning. The Root, and only the Root, should keep existing\n    // references while copying to avoid overwriting during a merge.\n    if (resolve === COPY_IDENTITY) throw new Error('Root cannot be copied.');\n    // IMPORTANT: Root cannot call super.copy(), which removes existing references.\n    this.set('asset', _extends({}, other.get('asset')));\n    this.setName(other.getName());\n    this.setExtras(_extends({}, other.getExtras()));\n    this.setDefaultScene(other.getDefaultScene() ? resolve(other.getDefaultScene()) : null);\n    for (const extensionName of other.listRefMapKeys('extensions')) {\n      const otherExtension = other.getExtension(extensionName);\n      this.setExtension(extensionName, resolve(otherExtension));\n    }\n    return this;\n  }\n  _addChildOfRoot(child) {\n    if (child instanceof Scene) {\n      this.addRef('scenes', child);\n    } else if (child instanceof Node) {\n      this.addRef('nodes', child);\n    } else if (child instanceof Camera) {\n      this.addRef('cameras', child);\n    } else if (child instanceof Skin) {\n      this.addRef('skins', child);\n    } else if (child instanceof Mesh) {\n      this.addRef('meshes', child);\n    } else if (child instanceof Material) {\n      this.addRef('materials', child);\n    } else if (child instanceof Texture) {\n      this.addRef('textures', child);\n    } else if (child instanceof Animation) {\n      this.addRef('animations', child);\n    } else if (child instanceof Accessor) {\n      this.addRef('accessors', child);\n    } else if (child instanceof Buffer$1) {\n      this.addRef('buffers', child);\n    }\n    // No error for untracked property types.\n    return this;\n  }\n  /**\n   * Returns the `asset` object, which specifies the target glTF version of the asset. Additional\n   * metadata can be stored in optional properties such as `generator` or `copyright`.\n   *\n   * Reference: [glTF → Asset](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#asset)\n   */\n  getAsset() {\n    return this.get('asset');\n  }\n  /**********************************************************************************************\n   * Extensions.\n   */\n  /** Lists all {@link Extension Extensions} enabled for this root. */\n  listExtensionsUsed() {\n    return Array.from(this._extensions);\n  }\n  /** Lists all {@link Extension Extensions} enabled and required for this root. */\n  listExtensionsRequired() {\n    return this.listExtensionsUsed().filter(extension => extension.isRequired());\n  }\n  /** @internal */\n  _enableExtension(extension) {\n    this._extensions.add(extension);\n    return this;\n  }\n  /** @internal */\n  _disableExtension(extension) {\n    this._extensions.delete(extension);\n    return this;\n  }\n  /**********************************************************************************************\n   * Properties.\n   */\n  /** Lists all {@link Scene} properties associated with this root. */\n  listScenes() {\n    return this.listRefs('scenes');\n  }\n  /** Default {@link Scene} associated with this root. */\n  setDefaultScene(defaultScene) {\n    return this.setRef('defaultScene', defaultScene);\n  }\n  /** Default {@link Scene} associated with this root. */\n  getDefaultScene() {\n    return this.getRef('defaultScene');\n  }\n  /** Lists all {@link Node} properties associated with this root. */\n  listNodes() {\n    return this.listRefs('nodes');\n  }\n  /** Lists all {@link Camera} properties associated with this root. */\n  listCameras() {\n    return this.listRefs('cameras');\n  }\n  /** Lists all {@link Skin} properties associated with this root. */\n  listSkins() {\n    return this.listRefs('skins');\n  }\n  /** Lists all {@link Mesh} properties associated with this root. */\n  listMeshes() {\n    return this.listRefs('meshes');\n  }\n  /** Lists all {@link Material} properties associated with this root. */\n  listMaterials() {\n    return this.listRefs('materials');\n  }\n  /** Lists all {@link Texture} properties associated with this root. */\n  listTextures() {\n    return this.listRefs('textures');\n  }\n  /** Lists all {@link Animation} properties associated with this root. */\n  listAnimations() {\n    return this.listRefs('animations');\n  }\n  /** Lists all {@link Accessor} properties associated with this root. */\n  listAccessors() {\n    return this.listRefs('accessors');\n  }\n  /** Lists all {@link Buffer} properties associated with this root. */\n  listBuffers() {\n    return this.listRefs('buffers');\n  }\n}\n\n/**\n * *Wraps a glTF asset and its resources for easier modification.*\n *\n * Documents manage glTF assets and the relationships among dependencies. The document wrapper\n * allow tools to read and write changes without dealing with array indices or byte offsets, which\n * would otherwise require careful management over the course of a file modification. An internal\n * graph structure allows any property in the glTF file to maintain references to its dependencies,\n * and makes it easy to determine where a particular property dependency is being used. For\n * example, finding a list of materials that use a particular texture is as simple as calling\n * {@link Texture.listParents}().\n *\n * A new resource {@link Property} (e.g. a {@link Mesh} or {@link Material}) is created by calling\n * 'create' methods on the document. Resources are destroyed by calling {@link Property.dispose}().\n *\n * ```ts\n * import fs from 'fs/promises';\n * import { Document } from '@gltf-transform/core';\n * import { dedup } from '@gltf-transform/functions';\n *\n * const document = new Document();\n *\n * const texture1 = document.createTexture('myTexture')\n * \t.setImage(await fs.readFile('path/to/image.png'))\n * \t.setMimeType('image/png');\n * const texture2 = document.createTexture('myTexture2')\n * \t.setImage(await fs.readFile('path/to/image2.png'))\n * \t.setMimeType('image/png');\n *\n * // Document containing duplicate copies of the same texture.\n * document.getRoot().listTextures(); // → [texture x 2]\n *\n * await document.transform(\n * \tdedup({textures: true}),\n * \t// ...\n * );\n *\n * // Document with duplicate textures removed.\n * document.getRoot().listTextures(); // → [texture x 1]\n * ```\n *\n * Reference:\n * - [glTF → Basics](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#gltf-basics)\n * - [glTF → Concepts](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#concepts)\n *\n * @category Documents\n */\nclass Document {\n  /**\n   * Returns the Document associated with a given Graph, if any.\n   * @hidden\n   * @experimental\n   */\n  static fromGraph(graph) {\n    return Document._GRAPH_DOCUMENTS.get(graph) || null;\n  }\n  /** Creates a new Document, representing an empty glTF asset. */\n  constructor() {\n    this._graph = new Graph();\n    this._root = new Root(this._graph);\n    this._logger = Logger.DEFAULT_INSTANCE;\n    Document._GRAPH_DOCUMENTS.set(this._graph, this);\n  }\n  /** Returns the glTF {@link Root} property. */\n  getRoot() {\n    return this._root;\n  }\n  /**\n   * Returns the {@link Graph} representing connectivity of resources within this document.\n   * @hidden\n   */\n  getGraph() {\n    return this._graph;\n  }\n  /** Returns the {@link Logger} instance used for any operations performed on this document. */\n  getLogger() {\n    return this._logger;\n  }\n  /**\n   * Overrides the {@link Logger} instance used for any operations performed on this document.\n   *\n   * Usage:\n   *\n   * ```ts\n   * doc\n   * \t.setLogger(new Logger(Logger.Verbosity.SILENT))\n   * \t.transform(dedup(), weld());\n   * ```\n   */\n  setLogger(logger) {\n    this._logger = logger;\n    return this;\n  }\n  /**\n   * Clones this Document, copying all resources within it.\n   * @deprecated Use 'cloneDocument(document)' from '@gltf-transform/functions'.\n   * @hidden\n   * @internal\n   */\n  clone() {\n    throw new Error(`Use 'cloneDocument(source)' from '@gltf-transform/functions'.`);\n  }\n  /**\n   * Merges the content of another Document into this one, without affecting the original.\n   * @deprecated Use 'mergeDocuments(target, source)' from '@gltf-transform/functions'.\n   * @hidden\n   * @internal\n   */\n  merge(_other) {\n    throw new Error(`Use 'mergeDocuments(target, source)' from '@gltf-transform/functions'.`);\n  }\n  /**\n   * Applies a series of modifications to this document. Each transformation is asynchronous,\n   * takes the {@link Document} as input, and returns nothing. Transforms are applied in the\n   * order given, which may affect the final result.\n   *\n   * Usage:\n   *\n   * ```ts\n   * await doc.transform(\n   * \tdedup(),\n   * \tprune()\n   * );\n   * ```\n   *\n   * @param transforms List of synchronous transformation functions to apply.\n   */\n  async transform(...transforms) {\n    const stack = transforms.map(fn => fn.name);\n    for (const transform of transforms) {\n      await transform(this, {\n        stack\n      });\n    }\n    return this;\n  }\n  /**********************************************************************************************\n   * Extension factory method.\n   */\n  /**\n   * Creates a new {@link Extension}, for the extension type of the given constructor. If the\n   * extension is already enabled for this Document, the previous Extension reference is reused.\n   */\n  createExtension(ctor) {\n    const extensionName = ctor.EXTENSION_NAME;\n    const prevExtension = this.getRoot().listExtensionsUsed().find(ext => ext.extensionName === extensionName);\n    return prevExtension || new ctor(this);\n  }\n  /**********************************************************************************************\n   * Property factory methods.\n   */\n  /** Creates a new {@link Scene} attached to this document's {@link Root}. */\n  createScene(name = '') {\n    return new Scene(this._graph, name);\n  }\n  /** Creates a new {@link Node} attached to this document's {@link Root}. */\n  createNode(name = '') {\n    return new Node(this._graph, name);\n  }\n  /** Creates a new {@link Camera} attached to this document's {@link Root}. */\n  createCamera(name = '') {\n    return new Camera(this._graph, name);\n  }\n  /** Creates a new {@link Skin} attached to this document's {@link Root}. */\n  createSkin(name = '') {\n    return new Skin(this._graph, name);\n  }\n  /** Creates a new {@link Mesh} attached to this document's {@link Root}. */\n  createMesh(name = '') {\n    return new Mesh(this._graph, name);\n  }\n  /**\n   * Creates a new {@link Primitive}. Primitives must be attached to a {@link Mesh}\n   * for use and export; they are not otherwise associated with a {@link Root}.\n   */\n  createPrimitive() {\n    return new Primitive(this._graph);\n  }\n  /**\n   * Creates a new {@link PrimitiveTarget}, or morph target. Targets must be attached to a\n   * {@link Primitive} for use and export; they are not otherwise associated with a {@link Root}.\n   */\n  createPrimitiveTarget(name = '') {\n    return new PrimitiveTarget(this._graph, name);\n  }\n  /** Creates a new {@link Material} attached to this document's {@link Root}. */\n  createMaterial(name = '') {\n    return new Material(this._graph, name);\n  }\n  /** Creates a new {@link Texture} attached to this document's {@link Root}. */\n  createTexture(name = '') {\n    return new Texture(this._graph, name);\n  }\n  /** Creates a new {@link Animation} attached to this document's {@link Root}. */\n  createAnimation(name = '') {\n    return new Animation(this._graph, name);\n  }\n  /**\n   * Creates a new {@link AnimationChannel}. Channels must be attached to an {@link Animation}\n   * for use and export; they are not otherwise associated with a {@link Root}.\n   */\n  createAnimationChannel(name = '') {\n    return new AnimationChannel(this._graph, name);\n  }\n  /**\n   * Creates a new {@link AnimationSampler}. Samplers must be attached to an {@link Animation}\n   * for use and export; they are not otherwise associated with a {@link Root}.\n   */\n  createAnimationSampler(name = '') {\n    return new AnimationSampler(this._graph, name);\n  }\n  /** Creates a new {@link Accessor} attached to this document's {@link Root}. */\n  createAccessor(name = '', buffer = null) {\n    if (!buffer) {\n      buffer = this.getRoot().listBuffers()[0];\n    }\n    return new Accessor(this._graph, name).setBuffer(buffer);\n  }\n  /** Creates a new {@link Buffer} attached to this document's {@link Root}. */\n  createBuffer(name = '') {\n    return new Buffer$1(this._graph, name);\n  }\n}\n/**\n * Enables lookup of a Document from its Graph. For internal use, only.\n * @internal\n * @experimental\n */\nDocument._GRAPH_DOCUMENTS = new WeakMap();\n\n/**\n * *Base class for all Extensions.*\n *\n * Extensions enhance a glTF {@link Document} with additional features and schema, beyond the core\n * glTF specification. Common extensions may be imported from the `@gltf-transform/extensions`\n * package, or custom extensions may be created by extending this base class.\n *\n * An extension is added to a Document by calling {@link Document.createExtension} with the\n * extension constructor. The extension object may then be used to construct\n * {@link ExtensionProperty} instances, which are attached to properties throughout the Document\n * as prescribed by the extension itself.\n *\n * For more information on available extensions and their usage, see [Extensions](/extensions).\n *\n * Reference:\n * - [glTF → Extensions](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#specifying-extensions)\n * - [glTF Extension Registry](https://github.com/KhronosGroup/gltf/blob/main/extensions)\n *\n * @category Extensions\n */\nclass Extension {\n  /** @hidden */\n  constructor(document) {\n    /** Official name of the extension. */\n    this.extensionName = '';\n    /**\n     * Before reading, extension should be called for these {@link Property} types. *Most\n     * extensions don't need to implement this.*\n     * @hidden\n     */\n    this.prereadTypes = [];\n    /**\n     * Before writing, extension should be called for these {@link Property} types. *Most\n     * extensions don't need to implement this.*\n     * @hidden\n     */\n    this.prewriteTypes = [];\n    /** @hidden Dependency IDs needed to read this extension, to be installed before I/O. */\n    this.readDependencies = [];\n    /** @hidden Dependency IDs needed to write this extension, to be installed before I/O. */\n    this.writeDependencies = [];\n    /** @hidden */\n    this.document = void 0;\n    /** @hidden */\n    this.required = false;\n    /** @hidden */\n    this.properties = new Set();\n    /** @hidden */\n    this._listener = void 0;\n    this.document = document;\n    document.getRoot()._enableExtension(this);\n    this._listener = _event => {\n      const event = _event;\n      const target = event.target;\n      if (target instanceof ExtensionProperty && target.extensionName === this.extensionName) {\n        if (event.type === 'node:create') this._addExtensionProperty(target);\n        if (event.type === 'node:dispose') this._removeExtensionProperty(target);\n      }\n    };\n    const graph = document.getGraph();\n    graph.addEventListener('node:create', this._listener);\n    graph.addEventListener('node:dispose', this._listener);\n  }\n  /** Disables and removes the extension from the Document. */\n  dispose() {\n    this.document.getRoot()._disableExtension(this);\n    const graph = this.document.getGraph();\n    graph.removeEventListener('node:create', this._listener);\n    graph.removeEventListener('node:dispose', this._listener);\n    for (const property of this.properties) {\n      property.dispose();\n    }\n  }\n  /** @hidden Performs first-time setup for the extension. Must be idempotent. */\n  static register() {}\n  /**\n   * Indicates to the client whether it is OK to load the asset when this extension is not\n   * recognized. Optional extensions are generally preferred, if there is not a good reason\n   * to require a client to completely fail when an extension isn't known.\n   */\n  isRequired() {\n    return this.required;\n  }\n  /**\n   * Indicates to the client whether it is OK to load the asset when this extension is not\n   * recognized. Optional extensions are generally preferred, if there is not a good reason\n   * to require a client to completely fail when an extension isn't known.\n   */\n  setRequired(required) {\n    this.required = required;\n    return this;\n  }\n  /**\n   * Lists all {@link ExtensionProperty} instances associated with, or created by, this\n   * extension. Includes only instances that are attached to the Document's graph; detached\n   * instances will be excluded.\n   */\n  listProperties() {\n    return Array.from(this.properties);\n  }\n  /**********************************************************************************************\n   * ExtensionProperty management.\n   */\n  /** @internal */\n  _addExtensionProperty(property) {\n    this.properties.add(property);\n    return this;\n  }\n  /** @internal */\n  _removeExtensionProperty(property) {\n    this.properties.delete(property);\n    return this;\n  }\n  /**********************************************************************************************\n   * I/O implementation.\n   */\n  /** @hidden Installs dependencies required by the extension. */\n  install(_key, _dependency) {\n    return this;\n  }\n  /**\n   * Used by the {@link PlatformIO} utilities when reading a glTF asset. This method may\n   * optionally be implemented by an extension, and should then support any property type\n   * declared by the Extension's {@link Extension.prereadTypes} list. The Extension will\n   * be given a ReaderContext instance, and is expected to update either the context or its\n   * {@link JSONDocument} with resources known to the Extension. *Most extensions don't need to\n   * implement this.*\n   * @hidden\n   */\n  preread(_readerContext, _propertyType) {\n    return this;\n  }\n  /**\n   * Used by the {@link PlatformIO} utilities when writing a glTF asset. This method may\n   * optionally be implemented by an extension, and should then support any property type\n   * declared by the Extension's {@link Extension.prewriteTypes} list. The Extension will\n   * be given a WriterContext instance, and is expected to update either the context or its\n   * {@link JSONDocument} with resources known to the Extension. *Most extensions don't need to\n   * implement this.*\n   * @hidden\n   */\n  prewrite(_writerContext, _propertyType) {\n    return this;\n  }\n}\n/** Official name of the extension. */\nExtension.EXTENSION_NAME = void 0;\n\n/**\n * Model class providing glTF Transform objects representing each definition in the glTF file, used\n * by a {@link GLTFReader} and its {@link Extension} implementations. Indices of all properties will be\n * consistent with the glTF file.\n *\n * @hidden\n */\nclass ReaderContext {\n  constructor(jsonDoc) {\n    this.jsonDoc = void 0;\n    this.buffers = [];\n    this.bufferViews = [];\n    this.bufferViewBuffers = [];\n    this.accessors = [];\n    this.textures = [];\n    this.textureInfos = new Map();\n    this.materials = [];\n    this.meshes = [];\n    this.cameras = [];\n    this.nodes = [];\n    this.skins = [];\n    this.animations = [];\n    this.scenes = [];\n    this.jsonDoc = jsonDoc;\n  }\n  setTextureInfo(textureInfo, textureInfoDef) {\n    this.textureInfos.set(textureInfo, textureInfoDef);\n    if (textureInfoDef.texCoord !== undefined) {\n      textureInfo.setTexCoord(textureInfoDef.texCoord);\n    }\n    if (textureInfoDef.extras !== undefined) {\n      textureInfo.setExtras(textureInfoDef.extras);\n    }\n    const textureDef = this.jsonDoc.json.textures[textureInfoDef.index];\n    if (textureDef.sampler === undefined) return;\n    const samplerDef = this.jsonDoc.json.samplers[textureDef.sampler];\n    if (samplerDef.magFilter !== undefined) {\n      textureInfo.setMagFilter(samplerDef.magFilter);\n    }\n    if (samplerDef.minFilter !== undefined) {\n      textureInfo.setMinFilter(samplerDef.minFilter);\n    }\n    if (samplerDef.wrapS !== undefined) {\n      textureInfo.setWrapS(samplerDef.wrapS);\n    }\n    if (samplerDef.wrapT !== undefined) {\n      textureInfo.setWrapT(samplerDef.wrapT);\n    }\n  }\n}\n\nconst DEFAULT_OPTIONS = {\n  logger: Logger.DEFAULT_INSTANCE,\n  extensions: [],\n  dependencies: {}\n};\nconst SUPPORTED_PREREAD_TYPES = new Set([PropertyType.BUFFER, PropertyType.TEXTURE, PropertyType.MATERIAL, PropertyType.MESH, PropertyType.PRIMITIVE, PropertyType.NODE, PropertyType.SCENE]);\n/** @internal */\nclass GLTFReader {\n  static read(jsonDoc, _options = DEFAULT_OPTIONS) {\n    const options = _extends({}, DEFAULT_OPTIONS, _options);\n    const {\n      json\n    } = jsonDoc;\n    const document = new Document().setLogger(options.logger);\n    this.validate(jsonDoc, options);\n    /* Reader context. */\n    const context = new ReaderContext(jsonDoc);\n    /** Asset. */\n    const assetDef = json.asset;\n    const asset = document.getRoot().getAsset();\n    if (assetDef.copyright) asset.copyright = assetDef.copyright;\n    if (assetDef.extras) asset.extras = assetDef.extras;\n    if (json.extras !== undefined) {\n      document.getRoot().setExtras(_extends({}, json.extras));\n    }\n    /** Extensions (1/2). */\n    const extensionsUsed = json.extensionsUsed || [];\n    const extensionsRequired = json.extensionsRequired || [];\n    options.extensions.sort((a, b) => a.EXTENSION_NAME > b.EXTENSION_NAME ? 1 : -1);\n    for (const Extension of options.extensions) {\n      if (extensionsUsed.includes(Extension.EXTENSION_NAME)) {\n        // Create extension.\n        const extension = document.createExtension(Extension).setRequired(extensionsRequired.includes(Extension.EXTENSION_NAME));\n        // Warn on unsupported preread hooks.\n        const unsupportedHooks = extension.prereadTypes.filter(type => !SUPPORTED_PREREAD_TYPES.has(type));\n        if (unsupportedHooks.length) {\n          options.logger.warn(`Preread hooks for some types (${unsupportedHooks.join()}), requested by extension ` + `${extension.extensionName}, are unsupported. Please file an issue or a PR.`);\n        }\n        // Install dependencies.\n        for (const key of extension.readDependencies) {\n          extension.install(key, options.dependencies[key]);\n        }\n      }\n    }\n    /** Buffers. */\n    const bufferDefs = json.buffers || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.BUFFER)).forEach(extension => extension.preread(context, PropertyType.BUFFER));\n    context.buffers = bufferDefs.map(bufferDef => {\n      const buffer = document.createBuffer(bufferDef.name);\n      if (bufferDef.extras) buffer.setExtras(bufferDef.extras);\n      if (bufferDef.uri && bufferDef.uri.indexOf('__') !== 0) {\n        buffer.setURI(bufferDef.uri);\n      }\n      return buffer;\n    });\n    /** Buffer views. */\n    const bufferViewDefs = json.bufferViews || [];\n    context.bufferViewBuffers = bufferViewDefs.map((bufferViewDef, index) => {\n      if (!context.bufferViews[index]) {\n        const bufferDef = jsonDoc.json.buffers[bufferViewDef.buffer];\n        const resource = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n        const byteOffset = bufferViewDef.byteOffset || 0;\n        context.bufferViews[index] = BufferUtils.toView(resource, byteOffset, bufferViewDef.byteLength);\n      }\n      return context.buffers[bufferViewDef.buffer];\n    });\n    /** Accessors. */\n    // Accessor .count and .componentType properties are inferred dynamically.\n    const accessorDefs = json.accessors || [];\n    context.accessors = accessorDefs.map(accessorDef => {\n      const buffer = context.bufferViewBuffers[accessorDef.bufferView];\n      const accessor = document.createAccessor(accessorDef.name, buffer).setType(accessorDef.type);\n      if (accessorDef.extras) accessor.setExtras(accessorDef.extras);\n      if (accessorDef.normalized !== undefined) {\n        accessor.setNormalized(accessorDef.normalized);\n      }\n      // Sparse accessors, KHR_draco_mesh_compression, and EXT_meshopt_compression.\n      if (accessorDef.bufferView === undefined) return accessor;\n      // NOTICE: We mark sparse accessors at the end of the I/O reading process. Consider an\n      // accessor to be 'sparse' if it (A) includes sparse value overrides, or (B) does not\n      // define .bufferView _and_ no extension provides that data.\n      accessor.setArray(getAccessorArray(accessorDef, context));\n      return accessor;\n    });\n    /** Textures. */\n    // glTF Transform's \"Texture\" properties correspond 1:1 with glTF \"Image\" properties, and\n    // with image files. The glTF file may contain more one texture per image, where images\n    // are reused with different sampler properties.\n    const imageDefs = json.images || [];\n    const textureDefs = json.textures || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.TEXTURE)).forEach(extension => extension.preread(context, PropertyType.TEXTURE));\n    context.textures = imageDefs.map(imageDef => {\n      const texture = document.createTexture(imageDef.name);\n      // glTF Image corresponds 1:1 with glTF Transform Texture. See `writer.ts`.\n      if (imageDef.extras) texture.setExtras(imageDef.extras);\n      if (imageDef.bufferView !== undefined) {\n        const bufferViewDef = json.bufferViews[imageDef.bufferView];\n        const bufferDef = jsonDoc.json.buffers[bufferViewDef.buffer];\n        const bufferData = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n        const byteOffset = bufferViewDef.byteOffset || 0;\n        const byteLength = bufferViewDef.byteLength;\n        const imageData = bufferData.slice(byteOffset, byteOffset + byteLength);\n        texture.setImage(imageData);\n      } else if (imageDef.uri !== undefined) {\n        texture.setImage(jsonDoc.resources[imageDef.uri]);\n        if (imageDef.uri.indexOf('__') !== 0) {\n          texture.setURI(imageDef.uri);\n        }\n      }\n      if (imageDef.mimeType !== undefined) {\n        texture.setMimeType(imageDef.mimeType);\n      } else if (imageDef.uri) {\n        const extension = FileUtils.extension(imageDef.uri);\n        texture.setMimeType(ImageUtils.extensionToMimeType(extension));\n      }\n      return texture;\n    });\n    /** Materials. */\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.MATERIAL)).forEach(extension => extension.preread(context, PropertyType.MATERIAL));\n    const materialDefs = json.materials || [];\n    context.materials = materialDefs.map(materialDef => {\n      const material = document.createMaterial(materialDef.name);\n      if (materialDef.extras) material.setExtras(materialDef.extras);\n      // Program state & blending.\n      if (materialDef.alphaMode !== undefined) {\n        material.setAlphaMode(materialDef.alphaMode);\n      }\n      if (materialDef.alphaCutoff !== undefined) {\n        material.setAlphaCutoff(materialDef.alphaCutoff);\n      }\n      if (materialDef.doubleSided !== undefined) {\n        material.setDoubleSided(materialDef.doubleSided);\n      }\n      // Factors.\n      const pbrDef = materialDef.pbrMetallicRoughness || {};\n      if (pbrDef.baseColorFactor !== undefined) {\n        material.setBaseColorFactor(pbrDef.baseColorFactor);\n      }\n      if (materialDef.emissiveFactor !== undefined) {\n        material.setEmissiveFactor(materialDef.emissiveFactor);\n      }\n      if (pbrDef.metallicFactor !== undefined) {\n        material.setMetallicFactor(pbrDef.metallicFactor);\n      }\n      if (pbrDef.roughnessFactor !== undefined) {\n        material.setRoughnessFactor(pbrDef.roughnessFactor);\n      }\n      // Textures.\n      if (pbrDef.baseColorTexture !== undefined) {\n        const textureInfoDef = pbrDef.baseColorTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setBaseColorTexture(texture);\n        context.setTextureInfo(material.getBaseColorTextureInfo(), textureInfoDef);\n      }\n      if (materialDef.emissiveTexture !== undefined) {\n        const textureInfoDef = materialDef.emissiveTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setEmissiveTexture(texture);\n        context.setTextureInfo(material.getEmissiveTextureInfo(), textureInfoDef);\n      }\n      if (materialDef.normalTexture !== undefined) {\n        const textureInfoDef = materialDef.normalTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setNormalTexture(texture);\n        context.setTextureInfo(material.getNormalTextureInfo(), textureInfoDef);\n        if (materialDef.normalTexture.scale !== undefined) {\n          material.setNormalScale(materialDef.normalTexture.scale);\n        }\n      }\n      if (materialDef.occlusionTexture !== undefined) {\n        const textureInfoDef = materialDef.occlusionTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setOcclusionTexture(texture);\n        context.setTextureInfo(material.getOcclusionTextureInfo(), textureInfoDef);\n        if (materialDef.occlusionTexture.strength !== undefined) {\n          material.setOcclusionStrength(materialDef.occlusionTexture.strength);\n        }\n      }\n      if (pbrDef.metallicRoughnessTexture !== undefined) {\n        const textureInfoDef = pbrDef.metallicRoughnessTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setMetallicRoughnessTexture(texture);\n        context.setTextureInfo(material.getMetallicRoughnessTextureInfo(), textureInfoDef);\n      }\n      return material;\n    });\n    /** Meshes. */\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.MESH)).forEach(extension => extension.preread(context, PropertyType.MESH));\n    const meshDefs = json.meshes || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.PRIMITIVE)).forEach(extension => extension.preread(context, PropertyType.PRIMITIVE));\n    context.meshes = meshDefs.map(meshDef => {\n      const mesh = document.createMesh(meshDef.name);\n      if (meshDef.extras) mesh.setExtras(meshDef.extras);\n      if (meshDef.weights !== undefined) {\n        mesh.setWeights(meshDef.weights);\n      }\n      const primitiveDefs = meshDef.primitives || [];\n      primitiveDefs.forEach(primitiveDef => {\n        const primitive = document.createPrimitive();\n        if (primitiveDef.extras) primitive.setExtras(primitiveDef.extras);\n        if (primitiveDef.material !== undefined) {\n          primitive.setMaterial(context.materials[primitiveDef.material]);\n        }\n        if (primitiveDef.mode !== undefined) {\n          primitive.setMode(primitiveDef.mode);\n        }\n        for (const [semantic, index] of Object.entries(primitiveDef.attributes || {})) {\n          primitive.setAttribute(semantic, context.accessors[index]);\n        }\n        if (primitiveDef.indices !== undefined) {\n          primitive.setIndices(context.accessors[primitiveDef.indices]);\n        }\n        const targetNames = meshDef.extras && meshDef.extras.targetNames || [];\n        const targetDefs = primitiveDef.targets || [];\n        targetDefs.forEach((targetDef, targetIndex) => {\n          const targetName = targetNames[targetIndex] || targetIndex.toString();\n          const target = document.createPrimitiveTarget(targetName);\n          for (const [semantic, accessorIndex] of Object.entries(targetDef)) {\n            target.setAttribute(semantic, context.accessors[accessorIndex]);\n          }\n          primitive.addTarget(target);\n        });\n        mesh.addPrimitive(primitive);\n      });\n      return mesh;\n    });\n    /** Cameras. */\n    const cameraDefs = json.cameras || [];\n    context.cameras = cameraDefs.map(cameraDef => {\n      const camera = document.createCamera(cameraDef.name).setType(cameraDef.type);\n      if (cameraDef.extras) camera.setExtras(cameraDef.extras);\n      if (cameraDef.type === Camera.Type.PERSPECTIVE) {\n        const perspectiveDef = cameraDef.perspective;\n        camera.setYFov(perspectiveDef.yfov);\n        camera.setZNear(perspectiveDef.znear);\n        if (perspectiveDef.zfar !== undefined) {\n          camera.setZFar(perspectiveDef.zfar);\n        }\n        if (perspectiveDef.aspectRatio !== undefined) {\n          camera.setAspectRatio(perspectiveDef.aspectRatio);\n        }\n      } else {\n        const orthoDef = cameraDef.orthographic;\n        camera.setZNear(orthoDef.znear).setZFar(orthoDef.zfar).setXMag(orthoDef.xmag).setYMag(orthoDef.ymag);\n      }\n      return camera;\n    });\n    /** Nodes. */\n    const nodeDefs = json.nodes || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.NODE)).forEach(extension => extension.preread(context, PropertyType.NODE));\n    context.nodes = nodeDefs.map(nodeDef => {\n      const node = document.createNode(nodeDef.name);\n      if (nodeDef.extras) node.setExtras(nodeDef.extras);\n      if (nodeDef.translation !== undefined) {\n        node.setTranslation(nodeDef.translation);\n      }\n      if (nodeDef.rotation !== undefined) {\n        node.setRotation(nodeDef.rotation);\n      }\n      if (nodeDef.scale !== undefined) {\n        node.setScale(nodeDef.scale);\n      }\n      if (nodeDef.matrix !== undefined) {\n        const translation = [0, 0, 0];\n        const rotation = [0, 0, 0, 1];\n        const scale = [1, 1, 1];\n        MathUtils.decompose(nodeDef.matrix, translation, rotation, scale);\n        node.setTranslation(translation);\n        node.setRotation(rotation);\n        node.setScale(scale);\n      }\n      if (nodeDef.weights !== undefined) {\n        node.setWeights(nodeDef.weights);\n      }\n      // Attachments (mesh, camera, skin) defined later in reading process.\n      return node;\n    });\n    /** Skins. */\n    const skinDefs = json.skins || [];\n    context.skins = skinDefs.map(skinDef => {\n      const skin = document.createSkin(skinDef.name);\n      if (skinDef.extras) skin.setExtras(skinDef.extras);\n      if (skinDef.inverseBindMatrices !== undefined) {\n        skin.setInverseBindMatrices(context.accessors[skinDef.inverseBindMatrices]);\n      }\n      if (skinDef.skeleton !== undefined) {\n        skin.setSkeleton(context.nodes[skinDef.skeleton]);\n      }\n      for (const nodeIndex of skinDef.joints) {\n        skin.addJoint(context.nodes[nodeIndex]);\n      }\n      return skin;\n    });\n    /** Node attachments. */\n    nodeDefs.map((nodeDef, nodeIndex) => {\n      const node = context.nodes[nodeIndex];\n      const children = nodeDef.children || [];\n      children.forEach(childIndex => node.addChild(context.nodes[childIndex]));\n      if (nodeDef.mesh !== undefined) node.setMesh(context.meshes[nodeDef.mesh]);\n      if (nodeDef.camera !== undefined) node.setCamera(context.cameras[nodeDef.camera]);\n      if (nodeDef.skin !== undefined) node.setSkin(context.skins[nodeDef.skin]);\n    });\n    /** Animations. */\n    const animationDefs = json.animations || [];\n    context.animations = animationDefs.map(animationDef => {\n      const animation = document.createAnimation(animationDef.name);\n      if (animationDef.extras) animation.setExtras(animationDef.extras);\n      const samplerDefs = animationDef.samplers || [];\n      const samplers = samplerDefs.map(samplerDef => {\n        const sampler = document.createAnimationSampler().setInput(context.accessors[samplerDef.input]).setOutput(context.accessors[samplerDef.output]).setInterpolation(samplerDef.interpolation || AnimationSampler.Interpolation.LINEAR);\n        if (samplerDef.extras) sampler.setExtras(samplerDef.extras);\n        animation.addSampler(sampler);\n        return sampler;\n      });\n      const channels = animationDef.channels || [];\n      channels.forEach(channelDef => {\n        const channel = document.createAnimationChannel().setSampler(samplers[channelDef.sampler]).setTargetPath(channelDef.target.path);\n        if (channelDef.target.node !== undefined) channel.setTargetNode(context.nodes[channelDef.target.node]);\n        if (channelDef.extras) channel.setExtras(channelDef.extras);\n        animation.addChannel(channel);\n      });\n      return animation;\n    });\n    /** Scenes. */\n    const sceneDefs = json.scenes || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.SCENE)).forEach(extension => extension.preread(context, PropertyType.SCENE));\n    context.scenes = sceneDefs.map(sceneDef => {\n      const scene = document.createScene(sceneDef.name);\n      if (sceneDef.extras) scene.setExtras(sceneDef.extras);\n      const children = sceneDef.nodes || [];\n      children.map(nodeIndex => context.nodes[nodeIndex]).forEach(node => scene.addChild(node));\n      return scene;\n    });\n    if (json.scene !== undefined) {\n      document.getRoot().setDefaultScene(context.scenes[json.scene]);\n    }\n    /** Extensions (2/2). */\n    document.getRoot().listExtensionsUsed().forEach(extension => extension.read(context));\n    /** Post-processing. */\n    // Consider an accessor to be 'sparse' if it (A) includes sparse value overrides,\n    // or (B) does not define .bufferView _and_ no extension provides that data. Case\n    // (B) represents a zero-filled accessor.\n    accessorDefs.forEach((accessorDef, index) => {\n      const accessor = context.accessors[index];\n      const hasSparseValues = !!accessorDef.sparse;\n      const isZeroFilled = !accessorDef.bufferView && !accessor.getArray();\n      if (hasSparseValues || isZeroFilled) {\n        accessor.setSparse(true).setArray(getSparseArray(accessorDef, context));\n      }\n    });\n    return document;\n  }\n  static validate(jsonDoc, options) {\n    const json = jsonDoc.json;\n    if (json.asset.version !== '2.0') {\n      throw new Error(`Unsupported glTF version, \"${json.asset.version}\".`);\n    }\n    if (json.extensionsRequired) {\n      for (const extensionName of json.extensionsRequired) {\n        if (!options.extensions.find(extension => extension.EXTENSION_NAME === extensionName)) {\n          throw new Error(`Missing required extension, \"${extensionName}\".`);\n        }\n      }\n    }\n    if (json.extensionsUsed) {\n      for (const extensionName of json.extensionsUsed) {\n        if (!options.extensions.find(extension => extension.EXTENSION_NAME === extensionName)) {\n          options.logger.warn(`Missing optional extension, \"${extensionName}\".`);\n        }\n      }\n    }\n  }\n}\n/**\n * Returns the contents of an interleaved accessor, as a typed array.\n * @internal\n */\nfunction getInterleavedArray(accessorDef, context) {\n  const jsonDoc = context.jsonDoc;\n  const bufferView = context.bufferViews[accessorDef.bufferView];\n  const bufferViewDef = jsonDoc.json.bufferViews[accessorDef.bufferView];\n  const TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n  const elementSize = Accessor.getElementSize(accessorDef.type);\n  const componentSize = TypedArray.BYTES_PER_ELEMENT;\n  const accessorByteOffset = accessorDef.byteOffset || 0;\n  const array = new TypedArray(accessorDef.count * elementSize);\n  const view = new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n  const byteStride = bufferViewDef.byteStride;\n  for (let i = 0; i < accessorDef.count; i++) {\n    for (let j = 0; j < elementSize; j++) {\n      const byteOffset = accessorByteOffset + i * byteStride + j * componentSize;\n      let value;\n      switch (accessorDef.componentType) {\n        case Accessor.ComponentType.FLOAT:\n          value = view.getFloat32(byteOffset, true);\n          break;\n        case Accessor.ComponentType.UNSIGNED_INT:\n          value = view.getUint32(byteOffset, true);\n          break;\n        case Accessor.ComponentType.UNSIGNED_SHORT:\n          value = view.getUint16(byteOffset, true);\n          break;\n        case Accessor.ComponentType.UNSIGNED_BYTE:\n          value = view.getUint8(byteOffset);\n          break;\n        case Accessor.ComponentType.SHORT:\n          value = view.getInt16(byteOffset, true);\n          break;\n        case Accessor.ComponentType.BYTE:\n          value = view.getInt8(byteOffset);\n          break;\n        default:\n          throw new Error(`Unexpected componentType \"${accessorDef.componentType}\".`);\n      }\n      array[i * elementSize + j] = value;\n    }\n  }\n  return array;\n}\n/**\n * Returns the contents of an accessor, as a typed array.\n * @internal\n */\nfunction getAccessorArray(accessorDef, context) {\n  const jsonDoc = context.jsonDoc;\n  const bufferView = context.bufferViews[accessorDef.bufferView];\n  const bufferViewDef = jsonDoc.json.bufferViews[accessorDef.bufferView];\n  const TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n  const elementSize = Accessor.getElementSize(accessorDef.type);\n  const componentSize = TypedArray.BYTES_PER_ELEMENT;\n  const elementStride = elementSize * componentSize;\n  // Interleaved buffer view.\n  if (bufferViewDef.byteStride !== undefined && bufferViewDef.byteStride !== elementStride) {\n    return getInterleavedArray(accessorDef, context);\n  }\n  const byteOffset = bufferView.byteOffset + (accessorDef.byteOffset || 0);\n  const byteLength = accessorDef.count * elementSize * componentSize;\n  // Might optimize this to avoid deep copy later, but it's useful for now and not a known\n  // bottleneck. See https://github.com/donmccurdy/glTF-Transform/issues/256.\n  return new TypedArray(bufferView.buffer.slice(byteOffset, byteOffset + byteLength));\n}\n/**\n * Returns the contents of a sparse accessor, as a typed array.\n * @internal\n */\nfunction getSparseArray(accessorDef, context) {\n  const TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n  const elementSize = Accessor.getElementSize(accessorDef.type);\n  let array;\n  if (accessorDef.bufferView !== undefined) {\n    array = getAccessorArray(accessorDef, context);\n  } else {\n    array = new TypedArray(accessorDef.count * elementSize);\n  }\n  const sparseDef = accessorDef.sparse;\n  if (!sparseDef) return array; // Zero-filled accessor.\n  const count = sparseDef.count;\n  const indicesDef = _extends({}, accessorDef, sparseDef.indices, {\n    count,\n    type: 'SCALAR'\n  });\n  const valuesDef = _extends({}, accessorDef, sparseDef.values, {\n    count\n  });\n  const indices = getAccessorArray(indicesDef, context);\n  const values = getAccessorArray(valuesDef, context);\n  // Override indices given in the sparse data.\n  for (let i = 0; i < indicesDef.count; i++) {\n    for (let j = 0; j < elementSize; j++) {\n      array[indices[i] * elementSize + j] = values[i * elementSize + j];\n    }\n  }\n  return array;\n}\n\nvar BufferViewTarget;\n(function (BufferViewTarget) {\n  BufferViewTarget[BufferViewTarget[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n  BufferViewTarget[BufferViewTarget[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n})(BufferViewTarget || (BufferViewTarget = {}));\n/**\n * Model class providing writing state to a {@link GLTFWriter} and its {@link Extension}\n * implementations.\n *\n * @hidden\n */\nclass WriterContext {\n  constructor(_doc, jsonDoc, options) {\n    this._doc = void 0;\n    this.jsonDoc = void 0;\n    this.options = void 0;\n    this.accessorIndexMap = new Map();\n    this.animationIndexMap = new Map();\n    this.bufferIndexMap = new Map();\n    this.cameraIndexMap = new Map();\n    this.skinIndexMap = new Map();\n    this.materialIndexMap = new Map();\n    this.meshIndexMap = new Map();\n    this.nodeIndexMap = new Map();\n    this.imageIndexMap = new Map();\n    this.textureDefIndexMap = new Map();\n    // textureDef JSON -> index\n    this.textureInfoDefMap = new Map();\n    this.samplerDefIndexMap = new Map();\n    // samplerDef JSON -> index\n    this.sceneIndexMap = new Map();\n    this.imageBufferViews = [];\n    this.otherBufferViews = new Map();\n    this.otherBufferViewsIndexMap = new Map();\n    this.extensionData = {};\n    this.bufferURIGenerator = void 0;\n    this.imageURIGenerator = void 0;\n    this.logger = void 0;\n    this._accessorUsageMap = new Map();\n    this.accessorUsageGroupedByParent = new Set(['ARRAY_BUFFER']);\n    this.accessorParents = new Map();\n    this._doc = _doc;\n    this.jsonDoc = jsonDoc;\n    this.options = options;\n    const root = _doc.getRoot();\n    const numBuffers = root.listBuffers().length;\n    const numImages = root.listTextures().length;\n    this.bufferURIGenerator = new UniqueURIGenerator(numBuffers > 1, () => options.basename || 'buffer');\n    this.imageURIGenerator = new UniqueURIGenerator(numImages > 1, texture => getSlot(_doc, texture) || options.basename || 'texture');\n    this.logger = _doc.getLogger();\n  }\n  /**\n   * Creates a TextureInfo definition, and any Texture or Sampler definitions it requires. If\n   * possible, Texture and Sampler definitions are shared.\n   */\n  createTextureInfoDef(texture, textureInfo) {\n    const samplerDef = {\n      magFilter: textureInfo.getMagFilter() || undefined,\n      minFilter: textureInfo.getMinFilter() || undefined,\n      wrapS: textureInfo.getWrapS(),\n      wrapT: textureInfo.getWrapT()\n    };\n    const samplerKey = JSON.stringify(samplerDef);\n    if (!this.samplerDefIndexMap.has(samplerKey)) {\n      this.samplerDefIndexMap.set(samplerKey, this.jsonDoc.json.samplers.length);\n      this.jsonDoc.json.samplers.push(samplerDef);\n    }\n    const textureDef = {\n      source: this.imageIndexMap.get(texture),\n      sampler: this.samplerDefIndexMap.get(samplerKey)\n    };\n    const textureKey = JSON.stringify(textureDef);\n    if (!this.textureDefIndexMap.has(textureKey)) {\n      this.textureDefIndexMap.set(textureKey, this.jsonDoc.json.textures.length);\n      this.jsonDoc.json.textures.push(textureDef);\n    }\n    const textureInfoDef = {\n      index: this.textureDefIndexMap.get(textureKey)\n    };\n    if (textureInfo.getTexCoord() !== 0) {\n      textureInfoDef.texCoord = textureInfo.getTexCoord();\n    }\n    if (Object.keys(textureInfo.getExtras()).length > 0) {\n      textureInfoDef.extras = textureInfo.getExtras();\n    }\n    this.textureInfoDefMap.set(textureInfo, textureInfoDef);\n    return textureInfoDef;\n  }\n  createPropertyDef(property) {\n    const def = {};\n    if (property.getName()) {\n      def.name = property.getName();\n    }\n    if (Object.keys(property.getExtras()).length > 0) {\n      def.extras = property.getExtras();\n    }\n    return def;\n  }\n  createAccessorDef(accessor) {\n    const accessorDef = this.createPropertyDef(accessor);\n    accessorDef.type = accessor.getType();\n    accessorDef.componentType = accessor.getComponentType();\n    accessorDef.count = accessor.getCount();\n    const needsBounds = this._doc.getGraph().listParentEdges(accessor).some(edge => edge.getName() === 'attributes' && edge.getAttributes().key === 'POSITION' || edge.getName() === 'input');\n    if (needsBounds) {\n      accessorDef.max = accessor.getMax([]).map(Math.fround);\n      accessorDef.min = accessor.getMin([]).map(Math.fround);\n    }\n    if (accessor.getNormalized()) {\n      accessorDef.normalized = accessor.getNormalized();\n    }\n    return accessorDef;\n  }\n  createImageData(imageDef, data, texture) {\n    if (this.options.format === Format.GLB) {\n      this.imageBufferViews.push(data);\n      imageDef.bufferView = this.jsonDoc.json.bufferViews.length;\n      this.jsonDoc.json.bufferViews.push({\n        buffer: 0,\n        byteOffset: -1,\n        // determined while iterating buffers, in Writer.ts.\n        byteLength: data.byteLength\n      });\n    } else {\n      const extension = ImageUtils.mimeTypeToExtension(texture.getMimeType());\n      imageDef.uri = this.imageURIGenerator.createURI(texture, extension);\n      this.assignResourceURI(imageDef.uri, data, false);\n    }\n  }\n  assignResourceURI(uri, data, throwOnConflict) {\n    const resources = this.jsonDoc.resources;\n    // https://github.com/KhronosGroup/glTF/issues/2446\n    if (!(uri in resources)) {\n      resources[uri] = data;\n      return;\n    }\n    if (data === resources[uri]) {\n      this.logger.warn(`Duplicate resource URI, \"${uri}\".`);\n      return;\n    }\n    const conflictMessage = `Resource URI \"${uri}\" already assigned to different data.`;\n    if (!throwOnConflict) {\n      this.logger.warn(conflictMessage);\n      return;\n    }\n    throw new Error(conflictMessage);\n  }\n  /**\n   * Returns implicit usage type of the given accessor, related to grouping accessors into\n   * buffer views. Usage is a superset of buffer view target, including ARRAY_BUFFER and\n   * ELEMENT_ARRAY_BUFFER, but also usages that do not match GPU buffer view targets such as\n   * IBMs. Additional usages are defined by extensions, like `EXT_mesh_gpu_instancing`.\n   */\n  getAccessorUsage(accessor) {\n    const cachedUsage = this._accessorUsageMap.get(accessor);\n    if (cachedUsage) return cachedUsage;\n    if (accessor.getSparse()) return BufferViewUsage$1.SPARSE;\n    for (const edge of this._doc.getGraph().listParentEdges(accessor)) {\n      const {\n        usage\n      } = edge.getAttributes();\n      if (usage) return usage;\n      if (edge.getParent().propertyType !== PropertyType.ROOT) {\n        this.logger.warn(`Missing attribute \".usage\" on edge, \"${edge.getName()}\".`);\n      }\n    }\n    // Group accessors with no specified usage into a miscellaneous buffer view.\n    return BufferViewUsage$1.OTHER;\n  }\n  /**\n   * Sets usage for the given accessor. Some accessor types must be grouped into\n   * buffer views with like accessors. This includes the specified buffer view \"targets\", but\n   * also implicit usage like IBMs or instanced mesh attributes. If unspecified, an accessor\n   * will be grouped with other accessors of unspecified usage.\n   */\n  addAccessorToUsageGroup(accessor, usage) {\n    const prevUsage = this._accessorUsageMap.get(accessor);\n    if (prevUsage && prevUsage !== usage) {\n      throw new Error(`Accessor with usage \"${prevUsage}\" cannot be reused as \"${usage}\".`);\n    }\n    this._accessorUsageMap.set(accessor, usage);\n    return this;\n  }\n}\n/** Explicit buffer view targets defined by glTF specification. */\nWriterContext.BufferViewTarget = BufferViewTarget;\n/**\n * Implicit buffer view usage, not required by glTF specification, but nonetheless useful for\n * proper grouping of accessors into buffer views. Additional usages are defined by extensions,\n * like `EXT_mesh_gpu_instancing`.\n */\nWriterContext.BufferViewUsage = BufferViewUsage$1;\n/** Maps usage type to buffer view target. Usages not mapped have undefined targets. */\nWriterContext.USAGE_TO_TARGET = {\n  [BufferViewUsage$1.ARRAY_BUFFER]: BufferViewTarget.ARRAY_BUFFER,\n  [BufferViewUsage$1.ELEMENT_ARRAY_BUFFER]: BufferViewTarget.ELEMENT_ARRAY_BUFFER\n};\nclass UniqueURIGenerator {\n  constructor(multiple, basename) {\n    this.multiple = void 0;\n    this.basename = void 0;\n    this.counter = {};\n    this.multiple = multiple;\n    this.basename = basename;\n  }\n  createURI(object, extension) {\n    if (object.getURI()) {\n      return object.getURI();\n    } else if (!this.multiple) {\n      return `${this.basename(object)}.${extension}`;\n    } else {\n      const basename = this.basename(object);\n      this.counter[basename] = this.counter[basename] || 1;\n      return `${basename}_${this.counter[basename]++}.${extension}`;\n    }\n  }\n}\n/** Returns the first slot (by name) to which the texture is assigned. */\nfunction getSlot(document, texture) {\n  const edge = document.getGraph().listParentEdges(texture).find(edge => edge.getParent() !== document.getRoot());\n  return edge ? edge.getName().replace(/texture$/i, '') : '';\n}\n\nconst {\n  BufferViewUsage\n} = WriterContext;\nconst {\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  UNSIGNED_BYTE\n} = Accessor.ComponentType;\nconst SUPPORTED_PREWRITE_TYPES = new Set([PropertyType.ACCESSOR, PropertyType.BUFFER, PropertyType.MATERIAL, PropertyType.MESH]);\n/**\n * @internal\n * @hidden\n */\nclass GLTFWriter {\n  static write(doc, options) {\n    const graph = doc.getGraph();\n    const root = doc.getRoot();\n    const json = {\n      asset: _extends({\n        generator: `glTF-Transform ${VERSION}`\n      }, root.getAsset()),\n      extras: _extends({}, root.getExtras())\n    };\n    const jsonDoc = {\n      json,\n      resources: {}\n    };\n    const context = new WriterContext(doc, jsonDoc, options);\n    const logger = options.logger || Logger.DEFAULT_INSTANCE;\n    /* Extensions (1/2). */\n    // Extensions present on the Document are not written unless they are also registered with\n    // the I/O class. This ensures that setup in `extension.register()` is completed, and\n    // allows a Document to be written with specific extensions disabled.\n    const extensionsRegistered = new Set(options.extensions.map(ext => ext.EXTENSION_NAME));\n    const extensionsUsed = doc.getRoot().listExtensionsUsed().filter(ext => extensionsRegistered.has(ext.extensionName)).sort((a, b) => a.extensionName > b.extensionName ? 1 : -1);\n    const extensionsRequired = doc.getRoot().listExtensionsRequired().filter(ext => extensionsRegistered.has(ext.extensionName)).sort((a, b) => a.extensionName > b.extensionName ? 1 : -1);\n    if (extensionsUsed.length < doc.getRoot().listExtensionsUsed().length) {\n      logger.warn('Some extensions were not registered for I/O, and will not be written.');\n    }\n    for (const extension of extensionsUsed) {\n      // Warn on unsupported prewrite hooks.\n      const unsupportedHooks = extension.prewriteTypes.filter(type => !SUPPORTED_PREWRITE_TYPES.has(type));\n      if (unsupportedHooks.length) {\n        logger.warn(`Prewrite hooks for some types (${unsupportedHooks.join()}), requested by extension ` + `${extension.extensionName}, are unsupported. Please file an issue or a PR.`);\n      }\n      // Install dependencies.\n      for (const key of extension.writeDependencies) {\n        extension.install(key, options.dependencies[key]);\n      }\n    }\n    /**\n     * Pack a group of accessors into a sequential buffer view. Appends accessor and buffer view\n     * definitions to the root JSON lists.\n     *\n     * @param accessors Accessors to be included.\n     * @param bufferIndex Buffer to write to.\n     * @param bufferByteOffset Current offset into the buffer, accounting for other buffer views.\n     * @param bufferViewTarget (Optional) target use of the buffer view.\n     */\n    function concatAccessors(accessors, bufferIndex, bufferByteOffset, bufferViewTarget) {\n      const buffers = [];\n      let byteLength = 0;\n      // Create accessor definitions, determining size of final buffer view.\n      for (const accessor of accessors) {\n        const accessorDef = context.createAccessorDef(accessor);\n        accessorDef.bufferView = json.bufferViews.length;\n        const accessorArray = accessor.getArray();\n        const data = BufferUtils.pad(BufferUtils.toView(accessorArray));\n        accessorDef.byteOffset = byteLength;\n        byteLength += data.byteLength;\n        buffers.push(data);\n        context.accessorIndexMap.set(accessor, json.accessors.length);\n        json.accessors.push(accessorDef);\n      }\n      // Create buffer view definition.\n      const bufferViewData = BufferUtils.concat(buffers);\n      const bufferViewDef = {\n        buffer: bufferIndex,\n        byteOffset: bufferByteOffset,\n        byteLength: bufferViewData.byteLength\n      };\n      if (bufferViewTarget) bufferViewDef.target = bufferViewTarget;\n      json.bufferViews.push(bufferViewDef);\n      return {\n        buffers,\n        byteLength\n      };\n    }\n    /**\n     * Pack a group of accessors into an interleaved buffer view. Appends accessor and buffer\n     * view definitions to the root JSON lists. Buffer view target is implicitly attribute data.\n     *\n     * References:\n     * - [Apple • Best Practices for Working with Vertex Data](https://developer.apple.com/library/archive/documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/TechniquesforWorkingwithVertexData/TechniquesforWorkingwithVertexData.html)\n     * - [Khronos • Vertex Specification Best Practices](https://www.khronos.org/opengl/wiki/Vertex_Specification_Best_Practices)\n     *\n     * @param accessors Accessors to be included.\n     * @param bufferIndex Buffer to write to.\n     * @param bufferByteOffset Offset into the buffer, accounting for other buffer views.\n     */\n    function interleaveAccessors(accessors, bufferIndex, bufferByteOffset) {\n      const vertexCount = accessors[0].getCount();\n      let byteStride = 0;\n      // Create accessor definitions, determining size and stride of final buffer view.\n      for (const accessor of accessors) {\n        const accessorDef = context.createAccessorDef(accessor);\n        accessorDef.bufferView = json.bufferViews.length;\n        accessorDef.byteOffset = byteStride;\n        const elementSize = accessor.getElementSize();\n        const componentSize = accessor.getComponentSize();\n        byteStride += BufferUtils.padNumber(elementSize * componentSize);\n        context.accessorIndexMap.set(accessor, json.accessors.length);\n        json.accessors.push(accessorDef);\n      }\n      // Allocate interleaved buffer view.\n      const byteLength = vertexCount * byteStride;\n      const buffer = new ArrayBuffer(byteLength);\n      const view = new DataView(buffer);\n      // Write interleaved accessor data to the buffer view.\n      for (let i = 0; i < vertexCount; i++) {\n        let vertexByteOffset = 0;\n        for (const accessor of accessors) {\n          const elementSize = accessor.getElementSize();\n          const componentSize = accessor.getComponentSize();\n          const componentType = accessor.getComponentType();\n          const array = accessor.getArray();\n          for (let j = 0; j < elementSize; j++) {\n            const viewByteOffset = i * byteStride + vertexByteOffset + j * componentSize;\n            const value = array[i * elementSize + j];\n            switch (componentType) {\n              case Accessor.ComponentType.FLOAT:\n                view.setFloat32(viewByteOffset, value, true);\n                break;\n              case Accessor.ComponentType.BYTE:\n                view.setInt8(viewByteOffset, value);\n                break;\n              case Accessor.ComponentType.SHORT:\n                view.setInt16(viewByteOffset, value, true);\n                break;\n              case Accessor.ComponentType.UNSIGNED_BYTE:\n                view.setUint8(viewByteOffset, value);\n                break;\n              case Accessor.ComponentType.UNSIGNED_SHORT:\n                view.setUint16(viewByteOffset, value, true);\n                break;\n              case Accessor.ComponentType.UNSIGNED_INT:\n                view.setUint32(viewByteOffset, value, true);\n                break;\n              default:\n                throw new Error('Unexpected component type: ' + componentType);\n            }\n          }\n          vertexByteOffset += BufferUtils.padNumber(elementSize * componentSize);\n        }\n      }\n      // Create buffer view definition.\n      const bufferViewDef = {\n        buffer: bufferIndex,\n        byteOffset: bufferByteOffset,\n        byteLength: byteLength,\n        byteStride: byteStride,\n        target: WriterContext.BufferViewTarget.ARRAY_BUFFER\n      };\n      json.bufferViews.push(bufferViewDef);\n      return {\n        byteLength,\n        buffers: [new Uint8Array(buffer)]\n      };\n    }\n    /**\n     * Pack a group of sparse accessors. Appends accessor and buffer view\n     * definitions to the root JSON lists.\n     *\n     * @param accessors Accessors to be included.\n     * @param bufferIndex Buffer to write to.\n     * @param bufferByteOffset Current offset into the buffer, accounting for other buffer views.\n     */\n    function concatSparseAccessors(accessors, bufferIndex, bufferByteOffset) {\n      const buffers = [];\n      let byteLength = 0;\n      const sparseData = new Map();\n      let maxIndex = -Infinity;\n      let needSparseWarning = false;\n      // (1) Write accessor definitions, gathering indices and values.\n      for (const accessor of accessors) {\n        const accessorDef = context.createAccessorDef(accessor);\n        json.accessors.push(accessorDef);\n        context.accessorIndexMap.set(accessor, json.accessors.length - 1);\n        const indices = [];\n        const values = [];\n        const el = [];\n        const base = new Array(accessor.getElementSize()).fill(0);\n        for (let i = 0, il = accessor.getCount(); i < il; i++) {\n          accessor.getElement(i, el);\n          if (MathUtils.eq(el, base, 0)) continue;\n          maxIndex = Math.max(i, maxIndex);\n          indices.push(i);\n          for (let j = 0; j < el.length; j++) values.push(el[j]);\n        }\n        const count = indices.length;\n        const data = {\n          accessorDef,\n          count\n        };\n        sparseData.set(accessor, data);\n        if (count === 0) continue;\n        if (count > accessor.getCount() / 2) {\n          needSparseWarning = true;\n        }\n        const ValueArray = ComponentTypeToTypedArray[accessor.getComponentType()];\n        data.indices = indices;\n        data.values = new ValueArray(values);\n      }\n      // (2) Early exit if all sparse accessors are just zero-filled arrays.\n      if (!Number.isFinite(maxIndex)) {\n        return {\n          buffers,\n          byteLength\n        };\n      }\n      if (needSparseWarning) {\n        logger.warn(`Some sparse accessors have >50% non-zero elements, which may increase file size.`);\n      }\n      // (3) Write index buffer view.\n      const IndexArray = maxIndex < 255 ? Uint8Array : maxIndex < 65535 ? Uint16Array : Uint32Array;\n      const IndexComponentType = maxIndex < 255 ? UNSIGNED_BYTE : maxIndex < 65535 ? UNSIGNED_SHORT : UNSIGNED_INT;\n      const indicesBufferViewDef = {\n        buffer: bufferIndex,\n        byteOffset: bufferByteOffset + byteLength,\n        byteLength: 0\n      };\n      for (const accessor of accessors) {\n        const data = sparseData.get(accessor);\n        if (data.count === 0) continue;\n        data.indicesByteOffset = indicesBufferViewDef.byteLength;\n        const buffer = BufferUtils.pad(BufferUtils.toView(new IndexArray(data.indices)));\n        buffers.push(buffer);\n        byteLength += buffer.byteLength;\n        indicesBufferViewDef.byteLength += buffer.byteLength;\n      }\n      json.bufferViews.push(indicesBufferViewDef);\n      const indicesBufferViewIndex = json.bufferViews.length - 1;\n      // (4) Write value buffer view.\n      const valuesBufferViewDef = {\n        buffer: bufferIndex,\n        byteOffset: bufferByteOffset + byteLength,\n        byteLength: 0\n      };\n      for (const accessor of accessors) {\n        const data = sparseData.get(accessor);\n        if (data.count === 0) continue;\n        data.valuesByteOffset = valuesBufferViewDef.byteLength;\n        const buffer = BufferUtils.pad(BufferUtils.toView(data.values));\n        buffers.push(buffer);\n        byteLength += buffer.byteLength;\n        valuesBufferViewDef.byteLength += buffer.byteLength;\n      }\n      json.bufferViews.push(valuesBufferViewDef);\n      const valuesBufferViewIndex = json.bufferViews.length - 1;\n      // (5) Write accessor sparse entries.\n      for (const accessor of accessors) {\n        const data = sparseData.get(accessor);\n        if (data.count === 0) continue;\n        data.accessorDef.sparse = {\n          count: data.count,\n          indices: {\n            bufferView: indicesBufferViewIndex,\n            byteOffset: data.indicesByteOffset,\n            componentType: IndexComponentType\n          },\n          values: {\n            bufferView: valuesBufferViewIndex,\n            byteOffset: data.valuesByteOffset\n          }\n        };\n      }\n      return {\n        buffers,\n        byteLength\n      };\n    }\n    json.accessors = [];\n    json.bufferViews = [];\n    /* Textures. */\n    // glTF Transform's \"Texture\" properties correspond 1:1 with glTF \"Image\" properties, and\n    // with image files. The glTF file may contain more one texture per image, where images\n    // are reused with different sampler properties.\n    json.samplers = [];\n    json.textures = [];\n    json.images = root.listTextures().map((texture, textureIndex) => {\n      const imageDef = context.createPropertyDef(texture);\n      if (texture.getMimeType()) {\n        imageDef.mimeType = texture.getMimeType();\n      }\n      const image = texture.getImage();\n      if (image) {\n        context.createImageData(imageDef, image, texture);\n      }\n      context.imageIndexMap.set(texture, textureIndex);\n      return imageDef;\n    });\n    /* Accessors. */\n    extensionsUsed.filter(extension => extension.prewriteTypes.includes(PropertyType.ACCESSOR)).forEach(extension => extension.prewrite(context, PropertyType.ACCESSOR));\n    root.listAccessors().forEach(accessor => {\n      // Attributes are grouped and interleaved in one buffer view per mesh primitive.\n      // Indices for all primitives are grouped into a single buffer view. IBMs are grouped\n      // into a single buffer view. Other usage (if specified by extensions) also goes into\n      // a dedicated buffer view. Everything else goes into a miscellaneous buffer view.\n      // Certain accessor usage should group data into buffer views by the accessor parent.\n      // The `accessorParents` map uses the first parent of each accessor for this purpose.\n      const groupByParent = context.accessorUsageGroupedByParent;\n      const accessorParents = context.accessorParents;\n      // Skip if already written by an extension.\n      if (context.accessorIndexMap.has(accessor)) return;\n      // Assign usage for core accessor usage types (explicit targets and implicit usage).\n      const usage = context.getAccessorUsage(accessor);\n      context.addAccessorToUsageGroup(accessor, usage);\n      // For accessor usage that requires grouping by parent (vertex and instance\n      // attributes) organize buffer views accordingly.\n      if (groupByParent.has(usage)) {\n        const parent = graph.listParents(accessor).find(parent => parent.propertyType !== PropertyType.ROOT);\n        accessorParents.set(accessor, parent);\n      }\n    });\n    /* Buffers, buffer views. */\n    extensionsUsed.filter(extension => extension.prewriteTypes.includes(PropertyType.BUFFER)).forEach(extension => extension.prewrite(context, PropertyType.BUFFER));\n    const needsBuffer = root.listAccessors().length > 0 || context.otherBufferViews.size > 0 || root.listTextures().length > 0 && options.format === Format.GLB;\n    if (needsBuffer && root.listBuffers().length === 0) {\n      throw new Error('Buffer required for Document resources, but none was found.');\n    }\n    json.buffers = [];\n    root.listBuffers().forEach((buffer, index) => {\n      const bufferDef = context.createPropertyDef(buffer);\n      const groupByParent = context.accessorUsageGroupedByParent;\n      const accessors = buffer.listParents().filter(property => property instanceof Accessor);\n      const uniqueParents = new Set(accessors.map(accessor => context.accessorParents.get(accessor)));\n      const parentToIndex = new Map(Array.from(uniqueParents).map((parent, index) => [parent, index]));\n      const accessorGroups = {};\n      for (const accessor of accessors) {\n        var _key;\n        // Skip if already written by an extension.\n        if (context.accessorIndexMap.has(accessor)) continue;\n        const usage = context.getAccessorUsage(accessor);\n        let key = usage;\n        if (groupByParent.has(usage)) {\n          const parent = context.accessorParents.get(accessor);\n          key += `:${parentToIndex.get(parent)}`;\n        }\n        accessorGroups[_key = key] || (accessorGroups[_key] = {\n          usage,\n          accessors: []\n        });\n        accessorGroups[key].accessors.push(accessor);\n      }\n      // Write accessor groups to buffer views.\n      const buffers = [];\n      const bufferIndex = json.buffers.length;\n      let bufferByteLength = 0;\n      for (const {\n        usage,\n        accessors: groupAccessors\n      } of Object.values(accessorGroups)) {\n        if (usage === BufferViewUsage.ARRAY_BUFFER && options.vertexLayout === VertexLayout.INTERLEAVED) {\n          // (1) Interleaved vertex attributes.\n          const result = interleaveAccessors(groupAccessors, bufferIndex, bufferByteLength);\n          bufferByteLength += result.byteLength;\n          for (const _buffer of result.buffers) {\n            buffers.push(_buffer);\n          }\n        } else if (usage === BufferViewUsage.ARRAY_BUFFER) {\n          // (2) Non-interleaved vertex attributes.\n          for (const accessor of groupAccessors) {\n            // We 'interleave' a single accessor because the method pads to\n            // 4-byte boundaries, which concatAccessors() does not.\n            const result = interleaveAccessors([accessor], bufferIndex, bufferByteLength);\n            bufferByteLength += result.byteLength;\n            for (const _buffer2 of result.buffers) {\n              buffers.push(_buffer2);\n            }\n          }\n        } else if (usage === BufferViewUsage.SPARSE) {\n          // (3) Sparse accessors.\n          const result = concatSparseAccessors(groupAccessors, bufferIndex, bufferByteLength);\n          bufferByteLength += result.byteLength;\n          for (const _buffer3 of result.buffers) {\n            buffers.push(_buffer3);\n          }\n        } else if (usage === BufferViewUsage.ELEMENT_ARRAY_BUFFER) {\n          // (4) Indices.\n          const target = WriterContext.BufferViewTarget.ELEMENT_ARRAY_BUFFER;\n          const result = concatAccessors(groupAccessors, bufferIndex, bufferByteLength, target);\n          bufferByteLength += result.byteLength;\n          for (const _buffer4 of result.buffers) {\n            buffers.push(_buffer4);\n          }\n        } else {\n          // (5) Other.\n          const result = concatAccessors(groupAccessors, bufferIndex, bufferByteLength);\n          bufferByteLength += result.byteLength;\n          for (const _buffer5 of result.buffers) {\n            buffers.push(_buffer5);\n          }\n        }\n      }\n      // We only support embedded images in GLB, where the embedded buffer must be the first.\n      // Additional buffers are currently left empty (see EXT_meshopt_compression fallback).\n      if (context.imageBufferViews.length && index === 0) {\n        for (let i = 0; i < context.imageBufferViews.length; i++) {\n          json.bufferViews[json.images[i].bufferView].byteOffset = bufferByteLength;\n          bufferByteLength += context.imageBufferViews[i].byteLength;\n          buffers.push(context.imageBufferViews[i]);\n          if (bufferByteLength % 8) {\n            // See: https://github.com/KhronosGroup/glTF/issues/1935\n            const imagePadding = 8 - bufferByteLength % 8;\n            bufferByteLength += imagePadding;\n            buffers.push(new Uint8Array(imagePadding));\n          }\n        }\n      }\n      if (context.otherBufferViews.has(buffer)) {\n        for (const data of context.otherBufferViews.get(buffer)) {\n          json.bufferViews.push({\n            buffer: bufferIndex,\n            byteOffset: bufferByteLength,\n            byteLength: data.byteLength\n          });\n          context.otherBufferViewsIndexMap.set(data, json.bufferViews.length - 1);\n          bufferByteLength += data.byteLength;\n          buffers.push(data);\n        }\n      }\n      if (bufferByteLength) {\n        // Assign buffer URI.\n        let uri;\n        if (options.format === Format.GLB) {\n          uri = GLB_BUFFER;\n        } else {\n          uri = context.bufferURIGenerator.createURI(buffer, 'bin');\n          bufferDef.uri = uri;\n        }\n        // Write buffer views to buffer.\n        bufferDef.byteLength = bufferByteLength;\n        context.assignResourceURI(uri, BufferUtils.concat(buffers), true);\n      }\n      json.buffers.push(bufferDef);\n      context.bufferIndexMap.set(buffer, index);\n    });\n    if (root.listAccessors().find(a => !a.getBuffer())) {\n      logger.warn('Skipped writing one or more Accessors: no Buffer assigned.');\n    }\n    /* Materials. */\n    extensionsUsed.filter(extension => extension.prewriteTypes.includes(PropertyType.MATERIAL)).forEach(extension => extension.prewrite(context, PropertyType.MATERIAL));\n    json.materials = root.listMaterials().map((material, index) => {\n      const materialDef = context.createPropertyDef(material);\n      // Program state & blending.\n      if (material.getAlphaMode() !== Material.AlphaMode.OPAQUE) {\n        materialDef.alphaMode = material.getAlphaMode();\n      }\n      if (material.getAlphaMode() === Material.AlphaMode.MASK) {\n        materialDef.alphaCutoff = material.getAlphaCutoff();\n      }\n      if (material.getDoubleSided()) materialDef.doubleSided = true;\n      // Factors.\n      materialDef.pbrMetallicRoughness = {};\n      if (!MathUtils.eq(material.getBaseColorFactor(), [1, 1, 1, 1])) {\n        materialDef.pbrMetallicRoughness.baseColorFactor = material.getBaseColorFactor();\n      }\n      if (!MathUtils.eq(material.getEmissiveFactor(), [0, 0, 0])) {\n        materialDef.emissiveFactor = material.getEmissiveFactor();\n      }\n      if (material.getRoughnessFactor() !== 1) {\n        materialDef.pbrMetallicRoughness.roughnessFactor = material.getRoughnessFactor();\n      }\n      if (material.getMetallicFactor() !== 1) {\n        materialDef.pbrMetallicRoughness.metallicFactor = material.getMetallicFactor();\n      }\n      // Textures.\n      if (material.getBaseColorTexture()) {\n        const texture = material.getBaseColorTexture();\n        const textureInfo = material.getBaseColorTextureInfo();\n        materialDef.pbrMetallicRoughness.baseColorTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n      if (material.getEmissiveTexture()) {\n        const texture = material.getEmissiveTexture();\n        const textureInfo = material.getEmissiveTextureInfo();\n        materialDef.emissiveTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n      if (material.getNormalTexture()) {\n        const texture = material.getNormalTexture();\n        const textureInfo = material.getNormalTextureInfo();\n        const textureInfoDef = context.createTextureInfoDef(texture, textureInfo);\n        if (material.getNormalScale() !== 1) {\n          textureInfoDef.scale = material.getNormalScale();\n        }\n        materialDef.normalTexture = textureInfoDef;\n      }\n      if (material.getOcclusionTexture()) {\n        const texture = material.getOcclusionTexture();\n        const textureInfo = material.getOcclusionTextureInfo();\n        const textureInfoDef = context.createTextureInfoDef(texture, textureInfo);\n        if (material.getOcclusionStrength() !== 1) {\n          textureInfoDef.strength = material.getOcclusionStrength();\n        }\n        materialDef.occlusionTexture = textureInfoDef;\n      }\n      if (material.getMetallicRoughnessTexture()) {\n        const texture = material.getMetallicRoughnessTexture();\n        const textureInfo = material.getMetallicRoughnessTextureInfo();\n        materialDef.pbrMetallicRoughness.metallicRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n      context.materialIndexMap.set(material, index);\n      return materialDef;\n    });\n    /* Meshes. */\n    extensionsUsed.filter(extension => extension.prewriteTypes.includes(PropertyType.MESH)).forEach(extension => extension.prewrite(context, PropertyType.MESH));\n    json.meshes = root.listMeshes().map((mesh, index) => {\n      const meshDef = context.createPropertyDef(mesh);\n      let targetNames = null;\n      meshDef.primitives = mesh.listPrimitives().map(primitive => {\n        const primitiveDef = {\n          attributes: {}\n        };\n        primitiveDef.mode = primitive.getMode();\n        const material = primitive.getMaterial();\n        if (material) {\n          primitiveDef.material = context.materialIndexMap.get(material);\n        }\n        if (Object.keys(primitive.getExtras()).length) {\n          primitiveDef.extras = primitive.getExtras();\n        }\n        const indices = primitive.getIndices();\n        if (indices) {\n          primitiveDef.indices = context.accessorIndexMap.get(indices);\n        }\n        for (const semantic of primitive.listSemantics()) {\n          primitiveDef.attributes[semantic] = context.accessorIndexMap.get(primitive.getAttribute(semantic));\n        }\n        for (const target of primitive.listTargets()) {\n          const targetDef = {};\n          for (const semantic of target.listSemantics()) {\n            targetDef[semantic] = context.accessorIndexMap.get(target.getAttribute(semantic));\n          }\n          primitiveDef.targets = primitiveDef.targets || [];\n          primitiveDef.targets.push(targetDef);\n        }\n        if (primitive.listTargets().length && !targetNames) {\n          targetNames = primitive.listTargets().map(target => target.getName());\n        }\n        return primitiveDef;\n      });\n      if (mesh.getWeights().length) {\n        meshDef.weights = mesh.getWeights();\n      }\n      if (targetNames) {\n        meshDef.extras = meshDef.extras || {};\n        meshDef.extras['targetNames'] = targetNames;\n      }\n      context.meshIndexMap.set(mesh, index);\n      return meshDef;\n    });\n    /** Cameras. */\n    json.cameras = root.listCameras().map((camera, index) => {\n      const cameraDef = context.createPropertyDef(camera);\n      cameraDef.type = camera.getType();\n      if (cameraDef.type === Camera.Type.PERSPECTIVE) {\n        cameraDef.perspective = {\n          znear: camera.getZNear(),\n          zfar: camera.getZFar(),\n          yfov: camera.getYFov()\n        };\n        const aspectRatio = camera.getAspectRatio();\n        if (aspectRatio !== null) {\n          cameraDef.perspective.aspectRatio = aspectRatio;\n        }\n      } else {\n        cameraDef.orthographic = {\n          znear: camera.getZNear(),\n          zfar: camera.getZFar(),\n          xmag: camera.getXMag(),\n          ymag: camera.getYMag()\n        };\n      }\n      context.cameraIndexMap.set(camera, index);\n      return cameraDef;\n    });\n    /* Nodes. */\n    json.nodes = root.listNodes().map((node, index) => {\n      const nodeDef = context.createPropertyDef(node);\n      if (!MathUtils.eq(node.getTranslation(), [0, 0, 0])) {\n        nodeDef.translation = node.getTranslation();\n      }\n      if (!MathUtils.eq(node.getRotation(), [0, 0, 0, 1])) {\n        nodeDef.rotation = node.getRotation();\n      }\n      if (!MathUtils.eq(node.getScale(), [1, 1, 1])) {\n        nodeDef.scale = node.getScale();\n      }\n      if (node.getWeights().length) {\n        nodeDef.weights = node.getWeights();\n      }\n      // Attachments (mesh, camera, skin) defined later in writing process.\n      context.nodeIndexMap.set(node, index);\n      return nodeDef;\n    });\n    /** Skins. */\n    json.skins = root.listSkins().map((skin, index) => {\n      const skinDef = context.createPropertyDef(skin);\n      const inverseBindMatrices = skin.getInverseBindMatrices();\n      if (inverseBindMatrices) {\n        skinDef.inverseBindMatrices = context.accessorIndexMap.get(inverseBindMatrices);\n      }\n      const skeleton = skin.getSkeleton();\n      if (skeleton) {\n        skinDef.skeleton = context.nodeIndexMap.get(skeleton);\n      }\n      skinDef.joints = skin.listJoints().map(joint => context.nodeIndexMap.get(joint));\n      context.skinIndexMap.set(skin, index);\n      return skinDef;\n    });\n    /** Node attachments. */\n    root.listNodes().forEach((node, index) => {\n      const nodeDef = json.nodes[index];\n      const mesh = node.getMesh();\n      if (mesh) {\n        nodeDef.mesh = context.meshIndexMap.get(mesh);\n      }\n      const camera = node.getCamera();\n      if (camera) {\n        nodeDef.camera = context.cameraIndexMap.get(camera);\n      }\n      const skin = node.getSkin();\n      if (skin) {\n        nodeDef.skin = context.skinIndexMap.get(skin);\n      }\n      if (node.listChildren().length > 0) {\n        nodeDef.children = node.listChildren().map(node => context.nodeIndexMap.get(node));\n      }\n    });\n    /** Animations. */\n    json.animations = root.listAnimations().map((animation, index) => {\n      const animationDef = context.createPropertyDef(animation);\n      const samplerIndexMap = new Map();\n      animationDef.samplers = animation.listSamplers().map((sampler, samplerIndex) => {\n        const samplerDef = context.createPropertyDef(sampler);\n        samplerDef.input = context.accessorIndexMap.get(sampler.getInput());\n        samplerDef.output = context.accessorIndexMap.get(sampler.getOutput());\n        samplerDef.interpolation = sampler.getInterpolation();\n        samplerIndexMap.set(sampler, samplerIndex);\n        return samplerDef;\n      });\n      animationDef.channels = animation.listChannels().map(channel => {\n        const channelDef = context.createPropertyDef(channel);\n        channelDef.sampler = samplerIndexMap.get(channel.getSampler());\n        channelDef.target = {\n          node: context.nodeIndexMap.get(channel.getTargetNode()),\n          path: channel.getTargetPath()\n        };\n        return channelDef;\n      });\n      context.animationIndexMap.set(animation, index);\n      return animationDef;\n    });\n    /* Scenes. */\n    json.scenes = root.listScenes().map((scene, index) => {\n      const sceneDef = context.createPropertyDef(scene);\n      sceneDef.nodes = scene.listChildren().map(node => context.nodeIndexMap.get(node));\n      context.sceneIndexMap.set(scene, index);\n      return sceneDef;\n    });\n    const defaultScene = root.getDefaultScene();\n    if (defaultScene) {\n      json.scene = root.listScenes().indexOf(defaultScene);\n    }\n    /* Extensions (2/2). */\n    json.extensionsUsed = extensionsUsed.map(ext => ext.extensionName);\n    json.extensionsRequired = extensionsRequired.map(ext => ext.extensionName);\n    extensionsUsed.forEach(extension => extension.write(context));\n    //\n    clean(json);\n    return jsonDoc;\n  }\n}\n/**\n * Removes empty and null values from an object.\n * @param object\n * @internal\n */\nfunction clean(object) {\n  const unused = [];\n  for (const key in object) {\n    const value = object[key];\n    if (Array.isArray(value) && value.length === 0) {\n      unused.push(key);\n    } else if (value === null || value === '') {\n      unused.push(key);\n    } else if (value && typeof value === 'object' && Object.keys(value).length === 0) {\n      unused.push(key);\n    }\n  }\n  for (const key of unused) {\n    delete object[key];\n  }\n}\n\nvar ChunkType;\n(function (ChunkType) {\n  ChunkType[ChunkType[\"JSON\"] = 1313821514] = \"JSON\";\n  ChunkType[ChunkType[\"BIN\"] = 5130562] = \"BIN\";\n})(ChunkType || (ChunkType = {}));\n/**\n * *Abstract I/O service.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * For platform-specific implementations, see {@link NodeIO}, {@link WebIO}, and {@link DenoIO}.\n *\n * @category I/O\n */\nclass PlatformIO {\n  constructor() {\n    this._logger = Logger.DEFAULT_INSTANCE;\n    this._extensions = new Set();\n    this._dependencies = {};\n    this._vertexLayout = VertexLayout.INTERLEAVED;\n    /** @hidden */\n    this.lastReadBytes = 0;\n    /** @hidden */\n    this.lastWriteBytes = 0;\n  }\n  /** Sets the {@link Logger} used by this I/O instance. Defaults to Logger.DEFAULT_INSTANCE. */\n  setLogger(logger) {\n    this._logger = logger;\n    return this;\n  }\n  /** Registers extensions, enabling I/O class to read and write glTF assets requiring them. */\n  registerExtensions(extensions) {\n    for (const extension of extensions) {\n      this._extensions.add(extension);\n      extension.register();\n    }\n    return this;\n  }\n  /** Registers dependencies used (e.g. by extensions) in the I/O process. */\n  registerDependencies(dependencies) {\n    Object.assign(this._dependencies, dependencies);\n    return this;\n  }\n  /**\n   * Sets the vertex layout method used by this I/O instance. Defaults to\n   * VertexLayout.INTERLEAVED.\n   */\n  setVertexLayout(layout) {\n    this._vertexLayout = layout;\n    return this;\n  }\n  /**********************************************************************************************\n   * Public Read API.\n   */\n  /** Reads a {@link Document} from the given URI. */\n  async read(uri) {\n    return await this.readJSON(await this.readAsJSON(uri));\n  }\n  /** Loads a URI and returns a {@link JSONDocument} struct, without parsing. */\n  async readAsJSON(uri) {\n    const view = await this.readURI(uri, 'view');\n    this.lastReadBytes = view.byteLength;\n    const jsonDoc = isGLB(view) ? this._binaryToJSON(view) : {\n      json: JSON.parse(BufferUtils.decodeText(view)),\n      resources: {}\n    };\n    // Read external resources first, before Data URIs are replaced.\n    await this._readResourcesExternal(jsonDoc, this.dirname(uri));\n    this._readResourcesInternal(jsonDoc);\n    return jsonDoc;\n  }\n  /** Converts glTF-formatted JSON and a resource map to a {@link Document}. */\n  async readJSON(jsonDoc) {\n    jsonDoc = this._copyJSON(jsonDoc);\n    this._readResourcesInternal(jsonDoc);\n    return GLTFReader.read(jsonDoc, {\n      extensions: Array.from(this._extensions),\n      dependencies: this._dependencies,\n      logger: this._logger\n    });\n  }\n  /** Converts a GLB-formatted Uint8Array to a {@link JSONDocument}. */\n  async binaryToJSON(glb) {\n    const jsonDoc = this._binaryToJSON(BufferUtils.assertView(glb));\n    this._readResourcesInternal(jsonDoc);\n    const json = jsonDoc.json;\n    // Check for external references, which can't be resolved by this method.\n    if (json.buffers && json.buffers.some(bufferDef => isExternalBuffer(jsonDoc, bufferDef))) {\n      throw new Error('Cannot resolve external buffers with binaryToJSON().');\n    } else if (json.images && json.images.some(imageDef => isExternalImage(jsonDoc, imageDef))) {\n      throw new Error('Cannot resolve external images with binaryToJSON().');\n    }\n    return jsonDoc;\n  }\n  /** Converts a GLB-formatted Uint8Array to a {@link Document}. */\n  async readBinary(glb) {\n    return this.readJSON(await this.binaryToJSON(BufferUtils.assertView(glb)));\n  }\n  /**********************************************************************************************\n   * Public Write API.\n   */\n  /** Converts a {@link Document} to glTF-formatted JSON and a resource map. */\n  async writeJSON(doc, _options = {}) {\n    if (_options.format === Format.GLB && doc.getRoot().listBuffers().length > 1) {\n      throw new Error('GLB must have 0–1 buffers.');\n    }\n    return GLTFWriter.write(doc, {\n      format: _options.format || Format.GLTF,\n      basename: _options.basename || '',\n      logger: this._logger,\n      vertexLayout: this._vertexLayout,\n      dependencies: _extends({}, this._dependencies),\n      extensions: Array.from(this._extensions)\n    });\n  }\n  /** Converts a {@link Document} to a GLB-formatted Uint8Array. */\n  async writeBinary(doc) {\n    const {\n      json,\n      resources\n    } = await this.writeJSON(doc, {\n      format: Format.GLB\n    });\n    const header = new Uint32Array([0x46546c67, 2, 12]);\n    const jsonText = JSON.stringify(json);\n    const jsonChunkData = BufferUtils.pad(BufferUtils.encodeText(jsonText), 0x20);\n    const jsonChunkHeader = BufferUtils.toView(new Uint32Array([jsonChunkData.byteLength, 0x4e4f534a]));\n    const jsonChunk = BufferUtils.concat([jsonChunkHeader, jsonChunkData]);\n    header[header.length - 1] += jsonChunk.byteLength;\n    const binBuffer = Object.values(resources)[0];\n    if (!binBuffer || !binBuffer.byteLength) {\n      return BufferUtils.concat([BufferUtils.toView(header), jsonChunk]);\n    }\n    const binChunkData = BufferUtils.pad(binBuffer, 0x00);\n    const binChunkHeader = BufferUtils.toView(new Uint32Array([binChunkData.byteLength, 0x004e4942]));\n    const binChunk = BufferUtils.concat([binChunkHeader, binChunkData]);\n    header[header.length - 1] += binChunk.byteLength;\n    return BufferUtils.concat([BufferUtils.toView(header), jsonChunk, binChunk]);\n  }\n  /**********************************************************************************************\n   * Internal.\n   */\n  async _readResourcesExternal(jsonDoc, base) {\n    var _this = this;\n    const images = jsonDoc.json.images || [];\n    const buffers = jsonDoc.json.buffers || [];\n    const pendingResources = [...images, ...buffers].map(async function (resource) {\n      const uri = resource.uri;\n      if (!uri || uri.match(/data:/)) return Promise.resolve();\n      jsonDoc.resources[uri] = await _this.readURI(_this.resolve(base, uri), 'view');\n      _this.lastReadBytes += jsonDoc.resources[uri].byteLength;\n    });\n    await Promise.all(pendingResources);\n  }\n  _readResourcesInternal(jsonDoc) {\n    // NOTICE: This method may be called more than once during the loading\n    // process (e.g. WebIO.read) and should handle that safely.\n    function resolveResource(resource) {\n      if (!resource.uri) return;\n      if (resource.uri in jsonDoc.resources) {\n        BufferUtils.assertView(jsonDoc.resources[resource.uri]);\n        return;\n      }\n      if (resource.uri.match(/data:/)) {\n        // Rewrite Data URIs to something short and unique.\n        const resourceUUID = `__${uuid()}.${FileUtils.extension(resource.uri)}`;\n        jsonDoc.resources[resourceUUID] = BufferUtils.createBufferFromDataURI(resource.uri);\n        resource.uri = resourceUUID;\n      }\n    }\n    // Unpack images.\n    const images = jsonDoc.json.images || [];\n    images.forEach(image => {\n      if (image.bufferView === undefined && image.uri === undefined) {\n        throw new Error('Missing resource URI or buffer view.');\n      }\n      resolveResource(image);\n    });\n    // Unpack buffers.\n    const buffers = jsonDoc.json.buffers || [];\n    buffers.forEach(resolveResource);\n  }\n  /**\n   * Creates a shallow copy of glTF-formatted {@link JSONDocument}.\n   *\n   * Images, Buffers, and Resources objects are deep copies so that PlatformIO can safely\n   * modify them during the parsing process. Other properties are shallow copies, and buffers\n   * are passed by reference.\n   */\n  _copyJSON(jsonDoc) {\n    const {\n      images,\n      buffers\n    } = jsonDoc.json;\n    jsonDoc = {\n      json: _extends({}, jsonDoc.json),\n      resources: _extends({}, jsonDoc.resources)\n    };\n    if (images) {\n      jsonDoc.json.images = images.map(image => _extends({}, image));\n    }\n    if (buffers) {\n      jsonDoc.json.buffers = buffers.map(buffer => _extends({}, buffer));\n    }\n    return jsonDoc;\n  }\n  /** Internal version of binaryToJSON; does not warn about external resources. */\n  _binaryToJSON(glb) {\n    // Decode and verify GLB header.\n    if (!isGLB(glb)) {\n      throw new Error('Invalid glTF 2.0 binary.');\n    }\n    // Decode JSON chunk.\n    const jsonChunkHeader = new Uint32Array(glb.buffer, glb.byteOffset + 12, 2);\n    if (jsonChunkHeader[1] !== ChunkType.JSON) {\n      throw new Error('Missing required GLB JSON chunk.');\n    }\n    const jsonByteOffset = 20;\n    const jsonByteLength = jsonChunkHeader[0];\n    const jsonText = BufferUtils.decodeText(BufferUtils.toView(glb, jsonByteOffset, jsonByteLength));\n    const json = JSON.parse(jsonText);\n    // Decode BIN chunk.\n    const binByteOffset = jsonByteOffset + jsonByteLength;\n    if (glb.byteLength <= binByteOffset) {\n      return {\n        json,\n        resources: {}\n      };\n    }\n    const binChunkHeader = new Uint32Array(glb.buffer, glb.byteOffset + binByteOffset, 2);\n    if (binChunkHeader[1] !== ChunkType.BIN) {\n      // Allow GLB files without BIN chunk, but with unknown chunk\n      // Spec: https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#chunks-overview\n      return {\n        json,\n        resources: {}\n      };\n    }\n    const binByteLength = binChunkHeader[0];\n    const binBuffer = BufferUtils.toView(glb, binByteOffset + 8, binByteLength);\n    return {\n      json,\n      resources: {\n        [GLB_BUFFER]: binBuffer\n      }\n    };\n  }\n}\nfunction isExternalBuffer(jsonDocument, bufferDef) {\n  return bufferDef.uri !== undefined && !(bufferDef.uri in jsonDocument.resources);\n}\nfunction isExternalImage(jsonDocument, imageDef) {\n  return imageDef.uri !== undefined && !(imageDef.uri in jsonDocument.resources) && imageDef.bufferView === undefined;\n}\nfunction isGLB(view) {\n  if (view.byteLength < 3 * Uint32Array.BYTES_PER_ELEMENT) return false;\n  const header = new Uint32Array(view.buffer, view.byteOffset, 3);\n  return header[0] === 0x46546c67 && header[1] === 2;\n}\n\n/**\n * *I/O service for [Deno](https://deno.land/).*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * _*NOTICE:* Support for the Deno environment is currently experimental. See\n * [glTF-Transform#457](https://github.com/donmccurdy/glTF-Transform/issues/457)._\n *\n * Usage:\n *\n * ```typescript\n * import { DenoIO } from 'https://esm.sh/@gltf-transform/core';\n * import * as path from 'https://deno.land/std/path/mod.ts';\n *\n * const io = new DenoIO(path);\n *\n * // Read.\n * let document;\n * document = io.read('model.glb');  // → Document\n * document = io.readBinary(glb);    // Uint8Array → Document\n *\n * // Write.\n * const glb = io.writeBinary(document);  // Document → Uint8Array\n * ```\n *\n * @category I/O\n */\nclass DenoIO extends PlatformIO {\n  constructor(path) {\n    super();\n    this._path = void 0;\n    this._path = path;\n  }\n  async readURI(uri, type) {\n    switch (type) {\n      case 'view':\n        return Deno.readFile(uri);\n      case 'text':\n        return Deno.readTextFile(uri);\n    }\n  }\n  resolve(base, path) {\n    // https://github.com/KhronosGroup/glTF/issues/1449\n    // https://stackoverflow.com/a/27278490/1314762\n    return this._path.resolve(base, decodeURIComponent(path));\n  }\n  dirname(uri) {\n    return this._path.dirname(uri);\n  }\n}\n\n/**\n * *I/O service for Node.js.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * Usage:\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n *\n * const io = new NodeIO();\n *\n * // Read.\n * let document;\n * document = await io.read('model.glb'); // → Document\n * document = await io.readBinary(glb);   // Uint8Array → Document\n *\n * // Write.\n * await io.write('model.glb', document);      // → void\n * const glb = await io.writeBinary(document); // Document → Uint8Array\n * ```\n *\n * By default, NodeIO can only read/write paths on disk. To enable network requests, provide a Fetch\n * API implementation (global [`fetch()`](https://nodejs.org/api/globals.html#fetch) is stable in\n * Node.js v21+, or [`node-fetch`](https://www.npmjs.com/package/node-fetch) may be installed) and enable\n * {@link NodeIO.setAllowNetwork setAllowNetwork}. Network requests may optionally be configured with\n * [RequestInit](https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters) parameters.\n *\n * ```typescript\n * const io = new NodeIO(fetch, {headers: {...}}).setAllowNetwork(true);\n *\n * const document = await io.read('https://example.com/path/to/model.glb');\n * ```\n *\n * @category I/O\n */\nclass NodeIO extends PlatformIO {\n  /**\n   * Constructs a new NodeIO service. Instances are reusable. By default, only NodeIO can only\n   * read/write paths on disk. To enable HTTP requests, provide a Fetch API implementation and\n   * enable {@link NodeIO.setAllowNetwork setAllowNetwork}.\n   *\n   * @param fetch Implementation of Fetch API.\n   * @param fetchConfig Configuration object for Fetch API.\n   */\n  constructor(_fetch = null, _fetchConfig = HTTPUtils.DEFAULT_INIT) {\n    super();\n    this._fetch = void 0;\n    this._fetchConfig = void 0;\n    this._init = void 0;\n    this._fetchEnabled = false;\n    this._fetch = _fetch;\n    this._fetchConfig = _fetchConfig;\n    this._init = this.init();\n  }\n  async init() {\n    if (this._init) return this._init;\n    return Promise.all([import('fs'), import('path')]).then(([fs, path]) => {\n      this._fs = fs.promises;\n      this._path = path;\n    });\n  }\n  setAllowNetwork(allow) {\n    if (allow && !this._fetch) {\n      throw new Error('NodeIO requires a Fetch API implementation for HTTP requests.');\n    }\n    this._fetchEnabled = allow;\n    return this;\n  }\n  async readURI(uri, type) {\n    await this.init();\n    if (HTTPUtils.isAbsoluteURL(uri)) {\n      if (!this._fetchEnabled || !this._fetch) {\n        throw new Error('Network request blocked. Allow HTTP requests explicitly, if needed.');\n      }\n      const response = await this._fetch(uri, this._fetchConfig);\n      switch (type) {\n        case 'view':\n          return new Uint8Array(await response.arrayBuffer());\n        case 'text':\n          return response.text();\n      }\n    } else {\n      switch (type) {\n        case 'view':\n          return this._fs.readFile(uri);\n        case 'text':\n          return this._fs.readFile(uri, 'utf8');\n      }\n    }\n  }\n  resolve(base, path) {\n    if (HTTPUtils.isAbsoluteURL(base) || HTTPUtils.isAbsoluteURL(path)) {\n      return HTTPUtils.resolve(base, path);\n    }\n    // https://github.com/KhronosGroup/glTF/issues/1449\n    // https://stackoverflow.com/a/27278490/1314762\n    return this._path.resolve(base, decodeURIComponent(path));\n  }\n  dirname(uri) {\n    if (HTTPUtils.isAbsoluteURL(uri)) {\n      return HTTPUtils.dirname(uri);\n    }\n    return this._path.dirname(uri);\n  }\n  /**********************************************************************************************\n   * Public.\n   */\n  /** Writes a {@link Document} instance to a local path. */\n  async write(uri, doc) {\n    await this.init();\n    const isGLB = !!uri.match(/\\.glb$/);\n    await (isGLB ? this._writeGLB(uri, doc) : this._writeGLTF(uri, doc));\n  }\n  /**********************************************************************************************\n   * Private.\n   */\n  /** @internal */\n  async _writeGLTF(uri, doc) {\n    var _this = this;\n    this.lastWriteBytes = 0;\n    const {\n      json,\n      resources\n    } = await this.writeJSON(doc, {\n      format: Format.GLTF,\n      basename: FileUtils.basename(uri)\n    });\n    const {\n      _fs: fs,\n      _path: path\n    } = this;\n    const dir = path.dirname(uri);\n    // write json\n    const jsonContent = JSON.stringify(json, null, 2);\n    await fs.writeFile(uri, jsonContent);\n    this.lastWriteBytes += jsonContent.length;\n    // write resources\n    for (const batch of listBatches(Object.keys(resources), 10)) {\n      await Promise.all(batch.map(async function (resourceURI) {\n        if (HTTPUtils.isAbsoluteURL(resourceURI)) {\n          if (HTTPUtils.extension(resourceURI) === 'bin') {\n            throw new Error(`Cannot write buffer to path \"${resourceURI}\".`);\n          }\n          return;\n        }\n        const resourcePath = path.join(dir, decodeURIComponent(resourceURI));\n        await fs.mkdir(path.dirname(resourcePath), {\n          recursive: true\n        });\n        await fs.writeFile(resourcePath, resources[resourceURI]);\n        _this.lastWriteBytes += resources[resourceURI].byteLength;\n      }));\n    }\n  }\n  /** @internal */\n  async _writeGLB(uri, doc) {\n    const buffer = await this.writeBinary(doc);\n    await this._fs.writeFile(uri, buffer);\n    this.lastWriteBytes = buffer.byteLength;\n  }\n}\n/** Divides a flat input array into batches of size `batchSize`. */\nfunction listBatches(array, batchSize) {\n  const batches = [];\n  for (let i = 0, il = array.length; i < il; i += batchSize) {\n    const batch = [];\n    for (let j = 0; j < batchSize && i + j < il; j++) {\n      batch.push(array[i + j]);\n    }\n    batches.push(batch);\n  }\n  return batches;\n}\n\n/**\n * *I/O service for Web.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * Usage:\n *\n * ```typescript\n * import { WebIO } from '@gltf-transform/core';\n *\n * const io = new WebIO({credentials: 'include'});\n *\n * // Read.\n * let document;\n * document = await io.read('model.glb');  // → Document\n * document = await io.readBinary(glb);    // Uint8Array → Document\n *\n * // Write.\n * const glb = await io.writeBinary(document); // Document → Uint8Array\n * ```\n *\n * @category I/O\n */\nclass WebIO extends PlatformIO {\n  /**\n   * Constructs a new WebIO service. Instances are reusable.\n   * @param fetchConfig Configuration object for Fetch API.\n   */\n  constructor(fetchConfig = HTTPUtils.DEFAULT_INIT) {\n    super();\n    this._fetchConfig = void 0;\n    this._fetchConfig = fetchConfig;\n  }\n  async readURI(uri, type) {\n    const response = await fetch(uri, this._fetchConfig);\n    switch (type) {\n      case 'view':\n        return new Uint8Array(await response.arrayBuffer());\n      case 'text':\n        return response.text();\n    }\n  }\n  resolve(base, path) {\n    return HTTPUtils.resolve(base, path);\n  }\n  dirname(uri) {\n    return HTTPUtils.dirname(uri);\n  }\n}\n\nexport { Accessor, Animation, AnimationChannel, AnimationSampler, Buffer$1 as Buffer, BufferUtils, COPY_IDENTITY, Camera, ColorUtils, ComponentTypeToTypedArray, DenoIO, Document, ExtensibleProperty, Extension, ExtensionProperty, FileUtils, Format, GLB_BUFFER, HTTPUtils, ImageUtils, Logger, Material, MathUtils, Mesh, Node, NodeIO, PlatformIO, Primitive, PrimitiveTarget, Property, PropertyType, ReaderContext, Root, Scene, Skin, Texture, TextureChannel, TextureInfo, VERSION, Verbosity, VertexLayout, WebIO, WriterContext, getBounds, uuid };\n//# sourceMappingURL=index.modern.js.map\n","///////////////////////////////////////////////////\n// KTX2 Header.\n///////////////////////////////////////////////////\nconst KHR_SUPERCOMPRESSION_NONE = 0;\nconst KHR_SUPERCOMPRESSION_BASISLZ = 1;\nconst KHR_SUPERCOMPRESSION_ZSTD = 2;\nconst KHR_SUPERCOMPRESSION_ZLIB = 3;\n///////////////////////////////////////////////////\n// Data Format Descriptor (DFD).\n///////////////////////////////////////////////////\nconst KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT = 0;\nconst KHR_DF_VENDORID_KHRONOS = 0;\nconst KHR_DF_VERSION = 2;\nconst KHR_DF_MODEL_UNSPECIFIED = 0;\nconst KHR_DF_MODEL_RGBSDA = 1;\n// ...\nconst KHR_DF_MODEL_ETC1 = 160;\nconst KHR_DF_MODEL_ETC2 = 161;\nconst KHR_DF_MODEL_ASTC = 162;\nconst KHR_DF_MODEL_ETC1S = 163;\nconst KHR_DF_MODEL_UASTC = 166;\nconst KHR_DF_FLAG_ALPHA_STRAIGHT = 0;\nconst KHR_DF_FLAG_ALPHA_PREMULTIPLIED = 1;\nconst KHR_DF_TRANSFER_UNSPECIFIED = 0;\nconst KHR_DF_TRANSFER_LINEAR = 1;\nconst KHR_DF_TRANSFER_SRGB = 2;\nconst KHR_DF_TRANSFER_ITU = 3;\nconst KHR_DF_TRANSFER_NTSC = 4;\nconst KHR_DF_TRANSFER_SLOG = 5;\nconst KHR_DF_TRANSFER_SLOG2 = 6;\nconst KHR_DF_TRANSFER_BT1886 = 7;\nconst KHR_DF_TRANSFER_HLG_OETF = 8;\nconst KHR_DF_TRANSFER_HLG_EOTF = 9;\nconst KHR_DF_TRANSFER_PQ_EOTF = 10;\nconst KHR_DF_TRANSFER_PQ_OETF = 11;\nconst KHR_DF_TRANSFER_DCIP3 = 12;\nconst KHR_DF_TRANSFER_PAL_OETF = 13;\nconst KHR_DF_TRANSFER_PAL625_EOTF = 14;\nconst KHR_DF_TRANSFER_ST240 = 15;\nconst KHR_DF_TRANSFER_ACESCC = 16;\nconst KHR_DF_TRANSFER_ACESCCT = 17;\nconst KHR_DF_TRANSFER_ADOBERGB = 18;\nconst KHR_DF_PRIMARIES_UNSPECIFIED = 0;\nconst KHR_DF_PRIMARIES_BT709 = 1;\nconst KHR_DF_PRIMARIES_BT601_EBU = 2;\nconst KHR_DF_PRIMARIES_BT601_SMPTE = 3;\nconst KHR_DF_PRIMARIES_BT2020 = 4;\nconst KHR_DF_PRIMARIES_CIEXYZ = 5;\nconst KHR_DF_PRIMARIES_ACES = 6;\nconst KHR_DF_PRIMARIES_ACESCC = 7;\nconst KHR_DF_PRIMARIES_NTSC1953 = 8;\nconst KHR_DF_PRIMARIES_PAL525 = 9;\nconst KHR_DF_PRIMARIES_DISPLAYP3 = 10;\nconst KHR_DF_PRIMARIES_ADOBERGB = 11;\nconst KHR_DF_CHANNEL_RGBSDA_RED = 0;\nconst KHR_DF_CHANNEL_RGBSDA_GREEN = 1;\nconst KHR_DF_CHANNEL_RGBSDA_BLUE = 2;\nconst KHR_DF_CHANNEL_RGBSDA_STENCIL = 13;\nconst KHR_DF_CHANNEL_RGBSDA_DEPTH = 14;\nconst KHR_DF_CHANNEL_RGBSDA_ALPHA = 15;\nconst KHR_DF_SAMPLE_DATATYPE_FLOAT = 0x80;\nconst KHR_DF_SAMPLE_DATATYPE_SIGNED = 0x40;\nconst KHR_DF_SAMPLE_DATATYPE_EXPONENT = 0x20;\nconst KHR_DF_SAMPLE_DATATYPE_LINEAR = 0x10;\n///////////////////////////////////////////////////\n// VK FORMAT.\n///////////////////////////////////////////////////\nconst VK_FORMAT_UNDEFINED = 0;\nconst VK_FORMAT_R4G4_UNORM_PACK8 = 1;\nconst VK_FORMAT_R4G4B4A4_UNORM_PACK16 = 2;\nconst VK_FORMAT_B4G4R4A4_UNORM_PACK16 = 3;\nconst VK_FORMAT_R5G6B5_UNORM_PACK16 = 4;\nconst VK_FORMAT_B5G6R5_UNORM_PACK16 = 5;\nconst VK_FORMAT_R5G5B5A1_UNORM_PACK16 = 6;\nconst VK_FORMAT_B5G5R5A1_UNORM_PACK16 = 7;\nconst VK_FORMAT_A1R5G5B5_UNORM_PACK16 = 8;\nconst VK_FORMAT_R8_UNORM = 9;\nconst VK_FORMAT_R8_SNORM = 10;\nconst VK_FORMAT_R8_UINT = 13;\nconst VK_FORMAT_R8_SINT = 14;\nconst VK_FORMAT_R8_SRGB = 15;\nconst VK_FORMAT_R8G8_UNORM = 16;\nconst VK_FORMAT_R8G8_SNORM = 17;\nconst VK_FORMAT_R8G8_UINT = 20;\nconst VK_FORMAT_R8G8_SINT = 21;\nconst VK_FORMAT_R8G8_SRGB = 22;\nconst VK_FORMAT_R8G8B8_UNORM = 23;\nconst VK_FORMAT_R8G8B8_SNORM = 24;\nconst VK_FORMAT_R8G8B8_UINT = 27;\nconst VK_FORMAT_R8G8B8_SINT = 28;\nconst VK_FORMAT_R8G8B8_SRGB = 29;\nconst VK_FORMAT_B8G8R8_UNORM = 30;\nconst VK_FORMAT_B8G8R8_SNORM = 31;\nconst VK_FORMAT_B8G8R8_UINT = 34;\nconst VK_FORMAT_B8G8R8_SINT = 35;\nconst VK_FORMAT_B8G8R8_SRGB = 36;\nconst VK_FORMAT_R8G8B8A8_UNORM = 37;\nconst VK_FORMAT_R8G8B8A8_SNORM = 38;\nconst VK_FORMAT_R8G8B8A8_UINT = 41;\nconst VK_FORMAT_R8G8B8A8_SINT = 42;\nconst VK_FORMAT_R8G8B8A8_SRGB = 43;\nconst VK_FORMAT_B8G8R8A8_UNORM = 44;\nconst VK_FORMAT_B8G8R8A8_SNORM = 45;\nconst VK_FORMAT_B8G8R8A8_UINT = 48;\nconst VK_FORMAT_B8G8R8A8_SINT = 49;\nconst VK_FORMAT_B8G8R8A8_SRGB = 50;\nconst VK_FORMAT_A2R10G10B10_UNORM_PACK32 = 58;\nconst VK_FORMAT_A2R10G10B10_SNORM_PACK32 = 59;\nconst VK_FORMAT_A2R10G10B10_UINT_PACK32 = 62;\nconst VK_FORMAT_A2R10G10B10_SINT_PACK32 = 63;\nconst VK_FORMAT_A2B10G10R10_UNORM_PACK32 = 64;\nconst VK_FORMAT_A2B10G10R10_SNORM_PACK32 = 65;\nconst VK_FORMAT_A2B10G10R10_UINT_PACK32 = 68;\nconst VK_FORMAT_A2B10G10R10_SINT_PACK32 = 69;\nconst VK_FORMAT_R16_UNORM = 70;\nconst VK_FORMAT_R16_SNORM = 71;\nconst VK_FORMAT_R16_UINT = 74;\nconst VK_FORMAT_R16_SINT = 75;\nconst VK_FORMAT_R16_SFLOAT = 76;\nconst VK_FORMAT_R16G16_UNORM = 77;\nconst VK_FORMAT_R16G16_SNORM = 78;\nconst VK_FORMAT_R16G16_UINT = 81;\nconst VK_FORMAT_R16G16_SINT = 82;\nconst VK_FORMAT_R16G16_SFLOAT = 83;\nconst VK_FORMAT_R16G16B16_UNORM = 84;\nconst VK_FORMAT_R16G16B16_SNORM = 85;\nconst VK_FORMAT_R16G16B16_UINT = 88;\nconst VK_FORMAT_R16G16B16_SINT = 89;\nconst VK_FORMAT_R16G16B16_SFLOAT = 90;\nconst VK_FORMAT_R16G16B16A16_UNORM = 91;\nconst VK_FORMAT_R16G16B16A16_SNORM = 92;\nconst VK_FORMAT_R16G16B16A16_UINT = 95;\nconst VK_FORMAT_R16G16B16A16_SINT = 96;\nconst VK_FORMAT_R16G16B16A16_SFLOAT = 97;\nconst VK_FORMAT_R32_UINT = 98;\nconst VK_FORMAT_R32_SINT = 99;\nconst VK_FORMAT_R32_SFLOAT = 100;\nconst VK_FORMAT_R32G32_UINT = 101;\nconst VK_FORMAT_R32G32_SINT = 102;\nconst VK_FORMAT_R32G32_SFLOAT = 103;\nconst VK_FORMAT_R32G32B32_UINT = 104;\nconst VK_FORMAT_R32G32B32_SINT = 105;\nconst VK_FORMAT_R32G32B32_SFLOAT = 106;\nconst VK_FORMAT_R32G32B32A32_UINT = 107;\nconst VK_FORMAT_R32G32B32A32_SINT = 108;\nconst VK_FORMAT_R32G32B32A32_SFLOAT = 109;\nconst VK_FORMAT_R64_UINT = 110;\nconst VK_FORMAT_R64_SINT = 111;\nconst VK_FORMAT_R64_SFLOAT = 112;\nconst VK_FORMAT_R64G64_UINT = 113;\nconst VK_FORMAT_R64G64_SINT = 114;\nconst VK_FORMAT_R64G64_SFLOAT = 115;\nconst VK_FORMAT_R64G64B64_UINT = 116;\nconst VK_FORMAT_R64G64B64_SINT = 117;\nconst VK_FORMAT_R64G64B64_SFLOAT = 118;\nconst VK_FORMAT_R64G64B64A64_UINT = 119;\nconst VK_FORMAT_R64G64B64A64_SINT = 120;\nconst VK_FORMAT_R64G64B64A64_SFLOAT = 121;\nconst VK_FORMAT_B10G11R11_UFLOAT_PACK32 = 122;\nconst VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 123;\nconst VK_FORMAT_D16_UNORM = 124;\nconst VK_FORMAT_X8_D24_UNORM_PACK32 = 125;\nconst VK_FORMAT_D32_SFLOAT = 126;\nconst VK_FORMAT_S8_UINT = 127;\nconst VK_FORMAT_D16_UNORM_S8_UINT = 128;\nconst VK_FORMAT_D24_UNORM_S8_UINT = 129;\nconst VK_FORMAT_D32_SFLOAT_S8_UINT = 130;\nconst VK_FORMAT_BC1_RGB_UNORM_BLOCK = 131;\nconst VK_FORMAT_BC1_RGB_SRGB_BLOCK = 132;\nconst VK_FORMAT_BC1_RGBA_UNORM_BLOCK = 133;\nconst VK_FORMAT_BC1_RGBA_SRGB_BLOCK = 134;\nconst VK_FORMAT_BC2_UNORM_BLOCK = 135;\nconst VK_FORMAT_BC2_SRGB_BLOCK = 136;\nconst VK_FORMAT_BC3_UNORM_BLOCK = 137;\nconst VK_FORMAT_BC3_SRGB_BLOCK = 138;\nconst VK_FORMAT_BC4_UNORM_BLOCK = 139;\nconst VK_FORMAT_BC4_SNORM_BLOCK = 140;\nconst VK_FORMAT_BC5_UNORM_BLOCK = 141;\nconst VK_FORMAT_BC5_SNORM_BLOCK = 142;\nconst VK_FORMAT_BC6H_UFLOAT_BLOCK = 143;\nconst VK_FORMAT_BC6H_SFLOAT_BLOCK = 144;\nconst VK_FORMAT_BC7_UNORM_BLOCK = 145;\nconst VK_FORMAT_BC7_SRGB_BLOCK = 146;\nconst VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 147;\nconst VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 148;\nconst VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 149;\nconst VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 150;\nconst VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 151;\nconst VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 152;\nconst VK_FORMAT_EAC_R11_UNORM_BLOCK = 153;\nconst VK_FORMAT_EAC_R11_SNORM_BLOCK = 154;\nconst VK_FORMAT_EAC_R11G11_UNORM_BLOCK = 155;\nconst VK_FORMAT_EAC_R11G11_SNORM_BLOCK = 156;\nconst VK_FORMAT_ASTC_4x4_UNORM_BLOCK = 157;\nconst VK_FORMAT_ASTC_4x4_SRGB_BLOCK = 158;\nconst VK_FORMAT_ASTC_5x4_UNORM_BLOCK = 159;\nconst VK_FORMAT_ASTC_5x4_SRGB_BLOCK = 160;\nconst VK_FORMAT_ASTC_5x5_UNORM_BLOCK = 161;\nconst VK_FORMAT_ASTC_5x5_SRGB_BLOCK = 162;\nconst VK_FORMAT_ASTC_6x5_UNORM_BLOCK = 163;\nconst VK_FORMAT_ASTC_6x5_SRGB_BLOCK = 164;\nconst VK_FORMAT_ASTC_6x6_UNORM_BLOCK = 165;\nconst VK_FORMAT_ASTC_6x6_SRGB_BLOCK = 166;\nconst VK_FORMAT_ASTC_8x5_UNORM_BLOCK = 167;\nconst VK_FORMAT_ASTC_8x5_SRGB_BLOCK = 168;\nconst VK_FORMAT_ASTC_8x6_UNORM_BLOCK = 169;\nconst VK_FORMAT_ASTC_8x6_SRGB_BLOCK = 170;\nconst VK_FORMAT_ASTC_8x8_UNORM_BLOCK = 171;\nconst VK_FORMAT_ASTC_8x8_SRGB_BLOCK = 172;\nconst VK_FORMAT_ASTC_10x5_UNORM_BLOCK = 173;\nconst VK_FORMAT_ASTC_10x5_SRGB_BLOCK = 174;\nconst VK_FORMAT_ASTC_10x6_UNORM_BLOCK = 175;\nconst VK_FORMAT_ASTC_10x6_SRGB_BLOCK = 176;\nconst VK_FORMAT_ASTC_10x8_UNORM_BLOCK = 177;\nconst VK_FORMAT_ASTC_10x8_SRGB_BLOCK = 178;\nconst VK_FORMAT_ASTC_10x10_UNORM_BLOCK = 179;\nconst VK_FORMAT_ASTC_10x10_SRGB_BLOCK = 180;\nconst VK_FORMAT_ASTC_12x10_UNORM_BLOCK = 181;\nconst VK_FORMAT_ASTC_12x10_SRGB_BLOCK = 182;\nconst VK_FORMAT_ASTC_12x12_UNORM_BLOCK = 183;\nconst VK_FORMAT_ASTC_12x12_SRGB_BLOCK = 184;\nconst VK_FORMAT_R10X6_UNORM_PACK16 = 1000156007;\nconst VK_FORMAT_R10X6G10X6_UNORM_2PACK16 = 1000156008;\nconst VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = 1000156009;\nconst VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = 1000156010;\nconst VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = 1000156011;\nconst VK_FORMAT_R12X4_UNORM_PACK16 = 1000156017;\nconst VK_FORMAT_R12X4G12X4_UNORM_2PACK16 = 1000156018;\nconst VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = 1000156019;\nconst VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = 1000156020;\nconst VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = 1000156021;\nconst VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = 1000054000;\nconst VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = 1000054001;\nconst VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = 1000054002;\nconst VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = 1000054003;\nconst VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = 1000054004;\nconst VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = 1000054005;\nconst VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = 1000054006;\nconst VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = 1000054007;\nconst VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT = 1000066000;\nconst VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT = 1000066001;\nconst VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT = 1000066002;\nconst VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT = 1000066003;\nconst VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT = 1000066004;\nconst VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT = 1000066005;\nconst VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT = 1000066006;\nconst VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT = 1000066007;\nconst VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT = 1000066008;\nconst VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT = 1000066009;\nconst VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT = 1000066010;\nconst VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT = 1000066011;\nconst VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT = 1000066012;\nconst VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT = 1000066013;\nconst VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT = 1000340000;\nconst VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT = 1000340001;\n\n/**\n * Creates a 'default' {@link KTX2Container} object, initialized with common\n * configuration wfor BT709 primaries and sRGB transfer, without pixel data.\n * There's nothing particularly special about the 'default' container; creating\n * the KTX2Container object explicitly is also fine.\n */\nfunction createDefaultContainer() {\n  return {\n    vkFormat: VK_FORMAT_UNDEFINED,\n    typeSize: 1,\n    pixelWidth: 0,\n    pixelHeight: 0,\n    pixelDepth: 0,\n    layerCount: 0,\n    faceCount: 1,\n    levelCount: 0,\n    supercompressionScheme: KHR_SUPERCOMPRESSION_NONE,\n    levels: [],\n    dataFormatDescriptor: [{\n      vendorId: KHR_DF_VENDORID_KHRONOS,\n      descriptorType: KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT,\n      versionNumber: KHR_DF_VERSION,\n      colorModel: KHR_DF_MODEL_UNSPECIFIED,\n      colorPrimaries: KHR_DF_PRIMARIES_BT709,\n      transferFunction: KHR_DF_TRANSFER_SRGB,\n      flags: KHR_DF_FLAG_ALPHA_STRAIGHT,\n      texelBlockDimension: [0, 0, 0, 0],\n      bytesPlane: [0, 0, 0, 0, 0, 0, 0, 0],\n      samples: []\n    }],\n    keyValue: {},\n    globalData: null\n  };\n}\n\nclass BufferReader {\n  constructor(data, byteOffset, byteLength, littleEndian) {\n    this._dataView = void 0;\n    this._littleEndian = void 0;\n    this._offset = void 0;\n    this._dataView = new DataView(data.buffer, data.byteOffset + byteOffset, byteLength);\n    this._littleEndian = littleEndian;\n    this._offset = 0;\n  }\n  _nextUint8() {\n    const value = this._dataView.getUint8(this._offset);\n    this._offset += 1;\n    return value;\n  }\n  _nextUint16() {\n    const value = this._dataView.getUint16(this._offset, this._littleEndian);\n    this._offset += 2;\n    return value;\n  }\n  _nextUint32() {\n    const value = this._dataView.getUint32(this._offset, this._littleEndian);\n    this._offset += 4;\n    return value;\n  }\n  _nextUint64() {\n    const left = this._dataView.getUint32(this._offset, this._littleEndian);\n    const right = this._dataView.getUint32(this._offset + 4, this._littleEndian);\n    // TODO(cleanup): Just test this...\n    // const value = this._littleEndian ? left + (2 ** 32 * right) : (2 ** 32 * left) + right;\n    const value = left + 2 ** 32 * right;\n    this._offset += 8;\n    return value;\n  }\n  _nextInt32() {\n    const value = this._dataView.getInt32(this._offset, this._littleEndian);\n    this._offset += 4;\n    return value;\n  }\n  _nextUint8Array(len) {\n    const value = new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + this._offset, len);\n    this._offset += len;\n    return value;\n  }\n  _skip(bytes) {\n    this._offset += bytes;\n    return this;\n  }\n  _scan(maxByteLength, term = 0x00) {\n    const byteOffset = this._offset;\n    let byteLength = 0;\n    while (this._dataView.getUint8(this._offset) !== term && byteLength < maxByteLength) {\n      byteLength++;\n      this._offset++;\n    }\n    if (byteLength < maxByteLength) this._offset++;\n    return new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + byteOffset, byteLength);\n  }\n}\n\n///////////////////////////////////////////////////\n// Common.\n///////////////////////////////////////////////////\nconst KTX_WRITER = `KTX-Parse v${\"1.1.0\"}`;\nconst NUL = new Uint8Array([0x00]);\n///////////////////////////////////////////////////\n// KTX2 Header.\n///////////////////////////////////////////////////\nconst KTX2_ID = [\n// '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\nconst HEADER_BYTE_LENGTH = 68; // 13 * 4 + 2 * 8\n\n/** Encodes text to an ArrayBuffer. */\nfunction encodeText(text) {\n  return new TextEncoder().encode(text);\n}\n/** Decodes an ArrayBuffer to text. */\nfunction decodeText(buffer) {\n  return new TextDecoder().decode(buffer);\n}\n/** Concatenates N ArrayBuffers. */\nfunction concat(buffers) {\n  let totalByteLength = 0;\n  for (const buffer of buffers) {\n    totalByteLength += buffer.byteLength;\n  }\n  const result = new Uint8Array(totalByteLength);\n  let byteOffset = 0;\n  for (const buffer of buffers) {\n    result.set(new Uint8Array(buffer), byteOffset);\n    byteOffset += buffer.byteLength;\n  }\n  return result;\n}\n/** Returns the least common multiple (LCM) for two positive integers. */\nfunction leastCommonMultiple(a, b) {\n  const max = Math.max(a, b);\n  const min = Math.min(a, b);\n  let lcm = max;\n  while (lcm % min !== 0) {\n    lcm += max;\n  }\n  return lcm;\n}\n/**\n * Returns amount of padding, in bytes, required to pad a value V to N-byte\n * boundaries. Both V and N must be positive integers.\n */\nfunction getPadding(v, n = 4) {\n  return Math.ceil(v / n) * n - v;\n}\n/** Returns byte length per texel block. */\nfunction getBlockByteLength(container) {\n  return container.levels[0].levelData.byteLength / getBlockCount(container, 0);\n}\n/**\n * Returns total number of blocks for given level. For VK_FORMAT_UNDEFINED, DFD is required.\n *\n * References:\n * - https://github.khronos.org/KTX-Specification/ktxspec.v2.html#levelImages\n */\nfunction getBlockCount(container, levelIndex) {\n  let blockCount = 1;\n  const pixelDimensions = [container.pixelWidth, container.pixelHeight, container.pixelDepth];\n  const blockDimensions = getBlockDimensions(container);\n  for (let i = 0; i < 3; i++) {\n    if (pixelDimensions[i] > 0) {\n      const dimBlockCount = Math.ceil(Math.floor(pixelDimensions[i] * 2 ** -levelIndex) / blockDimensions[i]);\n      blockCount *= Math.max(1, dimBlockCount);\n    }\n  }\n  if (container.layerCount > 0) {\n    blockCount *= container.layerCount;\n  }\n  if (container.faceCount > 0) {\n    blockCount *= container.faceCount;\n  }\n  return blockCount;\n}\n/**\n * Given a KTX2 container, returns block dimensions as [width, height, depth]. Requires valid DFD.\n */\nfunction getBlockDimensions(container) {\n  const [x, y, z] = container.dataFormatDescriptor[0].texelBlockDimension;\n  return [x + 1, y + 1, z + 1];\n}\n\n/**\n * Parses a KTX 2.0 file, returning an unpacked {@link KTX2Container} instance with all associated\n * data. The container's mip levels and other binary data are pointers into the original file, not\n * copies, so the original file should not be overwritten after reading.\n *\n * @param data Bytes of KTX 2.0 file, as Uint8Array or Buffer.\n */\nfunction read(data) {\n  ///////////////////////////////////////////////////\n  // KTX 2.0 Identifier.\n  ///////////////////////////////////////////////////\n  const id = new Uint8Array(data.buffer, data.byteOffset, KTX2_ID.length);\n  if (id[0] !== KTX2_ID[0] ||\n  // '´'\n  id[1] !== KTX2_ID[1] ||\n  // 'K'\n  id[2] !== KTX2_ID[2] ||\n  // 'T'\n  id[3] !== KTX2_ID[3] ||\n  // 'X'\n  id[4] !== KTX2_ID[4] ||\n  // ' '\n  id[5] !== KTX2_ID[5] ||\n  // '2'\n  id[6] !== KTX2_ID[6] ||\n  // '0'\n  id[7] !== KTX2_ID[7] ||\n  // 'ª'\n  id[8] !== KTX2_ID[8] ||\n  // '\\r'\n  id[9] !== KTX2_ID[9] ||\n  // '\\n'\n  id[10] !== KTX2_ID[10] ||\n  // '\\x1A'\n  id[11] !== KTX2_ID[11] // '\\n'\n  ) {\n    throw new Error('Missing KTX 2.0 identifier.');\n  }\n  const container = createDefaultContainer();\n  ///////////////////////////////////////////////////\n  // Header.\n  ///////////////////////////////////////////////////\n  const headerByteLength = 17 * Uint32Array.BYTES_PER_ELEMENT;\n  const headerReader = new BufferReader(data, KTX2_ID.length, headerByteLength, true);\n  container.vkFormat = headerReader._nextUint32();\n  container.typeSize = headerReader._nextUint32();\n  container.pixelWidth = headerReader._nextUint32();\n  container.pixelHeight = headerReader._nextUint32();\n  container.pixelDepth = headerReader._nextUint32();\n  container.layerCount = headerReader._nextUint32();\n  container.faceCount = headerReader._nextUint32();\n  container.levelCount = headerReader._nextUint32();\n  container.supercompressionScheme = headerReader._nextUint32();\n  const dfdByteOffset = headerReader._nextUint32();\n  const dfdByteLength = headerReader._nextUint32();\n  const kvdByteOffset = headerReader._nextUint32();\n  const kvdByteLength = headerReader._nextUint32();\n  const sgdByteOffset = headerReader._nextUint64();\n  const sgdByteLength = headerReader._nextUint64();\n  ///////////////////////////////////////////////////\n  // Level Index.\n  ///////////////////////////////////////////////////\n  const levelByteLength = Math.max(container.levelCount, 1) * 3 * 8;\n  const levelReader = new BufferReader(data, KTX2_ID.length + headerByteLength, levelByteLength, true);\n  for (let i = 0, il = Math.max(container.levelCount, 1); i < il; i++) {\n    container.levels.push({\n      levelData: new Uint8Array(data.buffer, data.byteOffset + levelReader._nextUint64(), levelReader._nextUint64()),\n      uncompressedByteLength: levelReader._nextUint64()\n    });\n  }\n  ///////////////////////////////////////////////////\n  // Data Format Descriptor (DFD).\n  ///////////////////////////////////////////////////\n  const dfdReader = new BufferReader(data, dfdByteOffset, dfdByteLength, true);\n  dfdReader._skip(4); // totalSize\n  const vendorId = dfdReader._nextUint16();\n  const descriptorType = dfdReader._nextUint16();\n  const versionNumber = dfdReader._nextUint16();\n  const descriptorBlockSize = dfdReader._nextUint16();\n  const colorModel = dfdReader._nextUint8();\n  const colorPrimaries = dfdReader._nextUint8();\n  const transferFunction = dfdReader._nextUint8();\n  const flags = dfdReader._nextUint8();\n  const texelBlockDimension = [dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8()];\n  const bytesPlane = [dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8()];\n  const samples = [];\n  const dfd = {\n    vendorId,\n    descriptorType,\n    versionNumber,\n    colorModel,\n    colorPrimaries,\n    transferFunction,\n    flags,\n    texelBlockDimension,\n    bytesPlane,\n    samples\n  };\n  const sampleStart = 6;\n  const sampleWords = 4;\n  const numSamples = (descriptorBlockSize / 4 - sampleStart) / sampleWords;\n  for (let i = 0; i < numSamples; i++) {\n    const sample = {\n      bitOffset: dfdReader._nextUint16(),\n      bitLength: dfdReader._nextUint8(),\n      channelType: dfdReader._nextUint8(),\n      samplePosition: [dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8()],\n      sampleLower: Number.NEGATIVE_INFINITY,\n      sampleUpper: Number.POSITIVE_INFINITY\n    };\n    if (sample.channelType & KHR_DF_SAMPLE_DATATYPE_SIGNED) {\n      sample.sampleLower = dfdReader._nextInt32();\n      sample.sampleUpper = dfdReader._nextInt32();\n    } else {\n      sample.sampleLower = dfdReader._nextUint32();\n      sample.sampleUpper = dfdReader._nextUint32();\n    }\n    dfd.samples[i] = sample;\n  }\n  container.dataFormatDescriptor.length = 0;\n  container.dataFormatDescriptor.push(dfd);\n  ///////////////////////////////////////////////////\n  // Key/Value Data (KVD).\n  ///////////////////////////////////////////////////\n  const kvdReader = new BufferReader(data, kvdByteOffset, kvdByteLength, true);\n  while (kvdReader._offset < kvdByteLength) {\n    const keyValueByteLength = kvdReader._nextUint32();\n    const keyData = kvdReader._scan(keyValueByteLength);\n    const key = decodeText(keyData);\n    container.keyValue[key] = kvdReader._nextUint8Array(keyValueByteLength - keyData.byteLength - 1);\n    if (key.match(/^ktx/i)) {\n      const text = decodeText(container.keyValue[key]);\n      container.keyValue[key] = text.substring(0, text.lastIndexOf('\\x00'));\n    }\n    const kvPadding = keyValueByteLength % 4 ? 4 - keyValueByteLength % 4 : 0; // align(4)\n    // 4-byte alignment.\n    kvdReader._skip(kvPadding);\n  }\n  ///////////////////////////////////////////////////\n  // Supercompression Global Data (SGD).\n  ///////////////////////////////////////////////////\n  if (sgdByteLength <= 0) return container;\n  const sgdReader = new BufferReader(data, sgdByteOffset, sgdByteLength, true);\n  const endpointCount = sgdReader._nextUint16();\n  const selectorCount = sgdReader._nextUint16();\n  const endpointsByteLength = sgdReader._nextUint32();\n  const selectorsByteLength = sgdReader._nextUint32();\n  const tablesByteLength = sgdReader._nextUint32();\n  const extendedByteLength = sgdReader._nextUint32();\n  const imageDescs = [];\n  for (let i = 0, il = Math.max(container.levelCount, 1); i < il; i++) {\n    imageDescs.push({\n      imageFlags: sgdReader._nextUint32(),\n      rgbSliceByteOffset: sgdReader._nextUint32(),\n      rgbSliceByteLength: sgdReader._nextUint32(),\n      alphaSliceByteOffset: sgdReader._nextUint32(),\n      alphaSliceByteLength: sgdReader._nextUint32()\n    });\n  }\n  const endpointsByteOffset = sgdByteOffset + sgdReader._offset;\n  const selectorsByteOffset = endpointsByteOffset + endpointsByteLength;\n  const tablesByteOffset = selectorsByteOffset + selectorsByteLength;\n  const extendedByteOffset = tablesByteOffset + tablesByteLength;\n  const endpointsData = new Uint8Array(data.buffer, data.byteOffset + endpointsByteOffset, endpointsByteLength);\n  const selectorsData = new Uint8Array(data.buffer, data.byteOffset + selectorsByteOffset, selectorsByteLength);\n  const tablesData = new Uint8Array(data.buffer, data.byteOffset + tablesByteOffset, tablesByteLength);\n  const extendedData = new Uint8Array(data.buffer, data.byteOffset + extendedByteOffset, extendedByteLength);\n  container.globalData = {\n    endpointCount,\n    selectorCount,\n    imageDescs,\n    endpointsData,\n    selectorsData,\n    tablesData,\n    extendedData\n  };\n  return container;\n}\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\nconst DEFAULT_OPTIONS = {\n  keepWriter: false\n};\n/**\n * Serializes a {@link KTX2Container} instance to a KTX 2.0 file. Mip levels and other binary data\n * are copied into the resulting Uint8Array, so the original container can safely be edited or\n * destroyed after it is serialized.\n *\n * Options:\n * - keepWriter: If true, 'KTXWriter' key/value field is written as provided by the container.\n * \t\tOtherwise, a string for the current ktx-parse version is generated. Default: false.\n *\n * @param container\n * @param options\n */\nfunction write(container, options = {}) {\n  // biome-ignore lint/style/noParameterAssign: Merging defaults only.\n  options = _extends({}, DEFAULT_OPTIONS, options);\n  ///////////////////////////////////////////////////\n  // Supercompression Global Data (SGD).\n  ///////////////////////////////////////////////////\n  let sgdBuffer = new ArrayBuffer(0);\n  if (container.globalData) {\n    const sgdHeaderBuffer = new ArrayBuffer(20 + container.globalData.imageDescs.length * 5 * 4);\n    const sgdHeaderView = new DataView(sgdHeaderBuffer);\n    sgdHeaderView.setUint16(0, container.globalData.endpointCount, true);\n    sgdHeaderView.setUint16(2, container.globalData.selectorCount, true);\n    sgdHeaderView.setUint32(4, container.globalData.endpointsData.byteLength, true);\n    sgdHeaderView.setUint32(8, container.globalData.selectorsData.byteLength, true);\n    sgdHeaderView.setUint32(12, container.globalData.tablesData.byteLength, true);\n    sgdHeaderView.setUint32(16, container.globalData.extendedData.byteLength, true);\n    for (let i = 0; i < container.globalData.imageDescs.length; i++) {\n      const imageDesc = container.globalData.imageDescs[i];\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 0, imageDesc.imageFlags, true);\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 4, imageDesc.rgbSliceByteOffset, true);\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 8, imageDesc.rgbSliceByteLength, true);\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 12, imageDesc.alphaSliceByteOffset, true);\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 16, imageDesc.alphaSliceByteLength, true);\n    }\n    sgdBuffer = concat([sgdHeaderBuffer, container.globalData.endpointsData, container.globalData.selectorsData, container.globalData.tablesData, container.globalData.extendedData]);\n  }\n  ///////////////////////////////////////////////////\n  // Key/Value Data (KVD).\n  ///////////////////////////////////////////////////\n  const keyValueData = [];\n  const keyValueList = Object.entries(_extends({}, container.keyValue, !options.keepWriter && {\n    KTXwriter: KTX_WRITER\n  }));\n  keyValueList.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (const [key, value] of keyValueList) {\n    const keyData = encodeText(key);\n    const valueData = typeof value === 'string' ? concat([encodeText(value), NUL]) : value;\n    const kvByteLength = keyData.byteLength + 1 + valueData.byteLength;\n    const kvPadding = getPadding(kvByteLength, 4); // align(4)\n    keyValueData.push(concat([new Uint32Array([kvByteLength]), keyData, NUL, valueData, new Uint8Array(kvPadding).fill(0x00) // align(4)\n    ]));\n  }\n  const kvdBuffer = concat(keyValueData);\n  ///////////////////////////////////////////////////\n  // Data Format Descriptor (DFD).\n  ///////////////////////////////////////////////////\n  if (container.dataFormatDescriptor.length !== 1 || container.dataFormatDescriptor[0].descriptorType !== KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT) {\n    throw new Error('Only BASICFORMAT Data Format Descriptor output supported.');\n  }\n  const dfd = container.dataFormatDescriptor[0];\n  const dfdBuffer = new ArrayBuffer(28 + dfd.samples.length * 16);\n  const dfdView = new DataView(dfdBuffer);\n  const descriptorBlockSize = 24 + dfd.samples.length * 16;\n  dfdView.setUint32(0, dfdBuffer.byteLength, true);\n  dfdView.setUint16(4, dfd.vendorId, true);\n  dfdView.setUint16(6, dfd.descriptorType, true);\n  dfdView.setUint16(8, dfd.versionNumber, true);\n  dfdView.setUint16(10, descriptorBlockSize, true);\n  dfdView.setUint8(12, dfd.colorModel);\n  dfdView.setUint8(13, dfd.colorPrimaries);\n  dfdView.setUint8(14, dfd.transferFunction);\n  dfdView.setUint8(15, dfd.flags);\n  if (!Array.isArray(dfd.texelBlockDimension)) {\n    throw new Error('texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.');\n  }\n  dfdView.setUint8(16, dfd.texelBlockDimension[0]);\n  dfdView.setUint8(17, dfd.texelBlockDimension[1]);\n  dfdView.setUint8(18, dfd.texelBlockDimension[2]);\n  dfdView.setUint8(19, dfd.texelBlockDimension[3]);\n  for (let i = 0; i < 8; i++) dfdView.setUint8(20 + i, dfd.bytesPlane[i]);\n  for (let i = 0; i < dfd.samples.length; i++) {\n    const sample = dfd.samples[i];\n    const sampleByteOffset = 28 + i * 16;\n    dfdView.setUint16(sampleByteOffset + 0, sample.bitOffset, true);\n    dfdView.setUint8(sampleByteOffset + 2, sample.bitLength);\n    dfdView.setUint8(sampleByteOffset + 3, sample.channelType);\n    dfdView.setUint8(sampleByteOffset + 4, sample.samplePosition[0]);\n    dfdView.setUint8(sampleByteOffset + 5, sample.samplePosition[1]);\n    dfdView.setUint8(sampleByteOffset + 6, sample.samplePosition[2]);\n    dfdView.setUint8(sampleByteOffset + 7, sample.samplePosition[3]);\n    if (sample.channelType & KHR_DF_SAMPLE_DATATYPE_SIGNED) {\n      dfdView.setInt32(sampleByteOffset + 8, sample.sampleLower, true);\n      dfdView.setInt32(sampleByteOffset + 12, sample.sampleUpper, true);\n    } else {\n      dfdView.setUint32(sampleByteOffset + 8, sample.sampleLower, true);\n      dfdView.setUint32(sampleByteOffset + 12, sample.sampleUpper, true);\n    }\n  }\n  ///////////////////////////////////////////////////\n  // Data alignment.\n  ///////////////////////////////////////////////////\n  const dfdByteOffset = KTX2_ID.length + HEADER_BYTE_LENGTH + container.levels.length * 3 * 8;\n  const kvdByteOffset = dfdByteOffset + dfdBuffer.byteLength;\n  let sgdByteOffset = sgdBuffer.byteLength > 0 ? kvdByteOffset + kvdBuffer.byteLength : 0;\n  if (sgdByteOffset % 8) sgdByteOffset += 8 - sgdByteOffset % 8; // align(8)\n  ///////////////////////////////////////////////////\n  // Level Index.\n  ///////////////////////////////////////////////////\n  const levelData = [];\n  const levelIndex = new DataView(new ArrayBuffer(container.levels.length * 3 * 8));\n  const levelDataByteOffsets = new Uint32Array(container.levels.length);\n  let levelAlign = 0;\n  if (container.supercompressionScheme === KHR_SUPERCOMPRESSION_NONE) {\n    levelAlign = leastCommonMultiple(getBlockByteLength(container), 4);\n  }\n  // Level data is ordered small → large.\n  let levelDataByteOffset = (sgdByteOffset || kvdByteOffset + kvdBuffer.byteLength) + sgdBuffer.byteLength;\n  for (let i = container.levels.length - 1; i >= 0; i--) {\n    // Level padding.\n    if (levelDataByteOffset % levelAlign) {\n      const paddingBytes = getPadding(levelDataByteOffset, levelAlign);\n      levelData.push(new Uint8Array(paddingBytes));\n      levelDataByteOffset += paddingBytes;\n    }\n    // Level data.\n    const level = container.levels[i];\n    levelData.push(level.levelData);\n    levelDataByteOffsets[i] = levelDataByteOffset;\n    levelDataByteOffset += level.levelData.byteLength;\n  }\n  // Level index is ordered large → small.\n  for (let i = 0; i < container.levels.length; i++) {\n    const level = container.levels[i];\n    levelIndex.setBigUint64(i * 24 + 0, BigInt(levelDataByteOffsets[i]), true);\n    levelIndex.setBigUint64(i * 24 + 8, BigInt(level.levelData.byteLength), true);\n    levelIndex.setBigUint64(i * 24 + 16, BigInt(level.uncompressedByteLength), true);\n  }\n  ///////////////////////////////////////////////////\n  // Header.\n  ///////////////////////////////////////////////////\n  const headerBuffer = new ArrayBuffer(HEADER_BYTE_LENGTH);\n  const headerView = new DataView(headerBuffer);\n  headerView.setUint32(0, container.vkFormat, true);\n  headerView.setUint32(4, container.typeSize, true);\n  headerView.setUint32(8, container.pixelWidth, true);\n  headerView.setUint32(12, container.pixelHeight, true);\n  headerView.setUint32(16, container.pixelDepth, true);\n  headerView.setUint32(20, container.layerCount, true);\n  headerView.setUint32(24, container.faceCount, true);\n  headerView.setUint32(28, container.levelCount, true);\n  headerView.setUint32(32, container.supercompressionScheme, true);\n  headerView.setUint32(36, dfdByteOffset, true);\n  headerView.setUint32(40, dfdBuffer.byteLength, true);\n  headerView.setUint32(44, kvdByteOffset, true);\n  headerView.setUint32(48, kvdBuffer.byteLength, true);\n  headerView.setBigUint64(52, BigInt(sgdBuffer.byteLength > 0 ? sgdByteOffset : 0), true);\n  headerView.setBigUint64(60, BigInt(sgdBuffer.byteLength), true);\n  ///////////////////////////////////////////////////\n  // Compose.\n  ///////////////////////////////////////////////////\n  return new Uint8Array(concat([new Uint8Array(KTX2_ID).buffer, headerBuffer, levelIndex.buffer, dfdBuffer, kvdBuffer, sgdByteOffset > 0 ? new ArrayBuffer(sgdByteOffset - (kvdByteOffset + kvdBuffer.byteLength)) // align(8)\n  : new ArrayBuffer(0), sgdBuffer, ...levelData]));\n}\n\nexport { KHR_DF_CHANNEL_RGBSDA_ALPHA, KHR_DF_CHANNEL_RGBSDA_BLUE, KHR_DF_CHANNEL_RGBSDA_DEPTH, KHR_DF_CHANNEL_RGBSDA_GREEN, KHR_DF_CHANNEL_RGBSDA_RED, KHR_DF_CHANNEL_RGBSDA_STENCIL, KHR_DF_FLAG_ALPHA_PREMULTIPLIED, KHR_DF_FLAG_ALPHA_STRAIGHT, KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT, KHR_DF_MODEL_ASTC, KHR_DF_MODEL_ETC1, KHR_DF_MODEL_ETC1S, KHR_DF_MODEL_ETC2, KHR_DF_MODEL_RGBSDA, KHR_DF_MODEL_UASTC, KHR_DF_MODEL_UNSPECIFIED, KHR_DF_PRIMARIES_ACES, KHR_DF_PRIMARIES_ACESCC, KHR_DF_PRIMARIES_ADOBERGB, KHR_DF_PRIMARIES_BT2020, KHR_DF_PRIMARIES_BT601_EBU, KHR_DF_PRIMARIES_BT601_SMPTE, KHR_DF_PRIMARIES_BT709, KHR_DF_PRIMARIES_CIEXYZ, KHR_DF_PRIMARIES_DISPLAYP3, KHR_DF_PRIMARIES_NTSC1953, KHR_DF_PRIMARIES_PAL525, KHR_DF_PRIMARIES_UNSPECIFIED, KHR_DF_SAMPLE_DATATYPE_EXPONENT, KHR_DF_SAMPLE_DATATYPE_FLOAT, KHR_DF_SAMPLE_DATATYPE_LINEAR, KHR_DF_SAMPLE_DATATYPE_SIGNED, KHR_DF_TRANSFER_ACESCC, KHR_DF_TRANSFER_ACESCCT, KHR_DF_TRANSFER_ADOBERGB, KHR_DF_TRANSFER_BT1886, KHR_DF_TRANSFER_DCIP3, KHR_DF_TRANSFER_HLG_EOTF, KHR_DF_TRANSFER_HLG_OETF, KHR_DF_TRANSFER_ITU, KHR_DF_TRANSFER_LINEAR, KHR_DF_TRANSFER_NTSC, KHR_DF_TRANSFER_PAL625_EOTF, KHR_DF_TRANSFER_PAL_OETF, KHR_DF_TRANSFER_PQ_EOTF, KHR_DF_TRANSFER_PQ_OETF, KHR_DF_TRANSFER_SLOG, KHR_DF_TRANSFER_SLOG2, KHR_DF_TRANSFER_SRGB, KHR_DF_TRANSFER_ST240, KHR_DF_TRANSFER_UNSPECIFIED, KHR_DF_VENDORID_KHRONOS, KHR_DF_VERSION, KHR_SUPERCOMPRESSION_BASISLZ, KHR_SUPERCOMPRESSION_NONE, KHR_SUPERCOMPRESSION_ZLIB, KHR_SUPERCOMPRESSION_ZSTD, VK_FORMAT_A1R5G5B5_UNORM_PACK16, VK_FORMAT_A2B10G10R10_SINT_PACK32, VK_FORMAT_A2B10G10R10_SNORM_PACK32, VK_FORMAT_A2B10G10R10_UINT_PACK32, VK_FORMAT_A2B10G10R10_UNORM_PACK32, VK_FORMAT_A2R10G10B10_SINT_PACK32, VK_FORMAT_A2R10G10B10_SNORM_PACK32, VK_FORMAT_A2R10G10B10_UINT_PACK32, VK_FORMAT_A2R10G10B10_UNORM_PACK32, VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT, VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT, VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_10x10_SRGB_BLOCK, VK_FORMAT_ASTC_10x10_UNORM_BLOCK, VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_10x5_SRGB_BLOCK, VK_FORMAT_ASTC_10x5_UNORM_BLOCK, VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_10x6_SRGB_BLOCK, VK_FORMAT_ASTC_10x6_UNORM_BLOCK, VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_10x8_SRGB_BLOCK, VK_FORMAT_ASTC_10x8_UNORM_BLOCK, VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_12x10_SRGB_BLOCK, VK_FORMAT_ASTC_12x10_UNORM_BLOCK, VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_12x12_SRGB_BLOCK, VK_FORMAT_ASTC_12x12_UNORM_BLOCK, VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_4x4_SRGB_BLOCK, VK_FORMAT_ASTC_4x4_UNORM_BLOCK, VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_5x4_SRGB_BLOCK, VK_FORMAT_ASTC_5x4_UNORM_BLOCK, VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_5x5_SRGB_BLOCK, VK_FORMAT_ASTC_5x5_UNORM_BLOCK, VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_6x5_SRGB_BLOCK, VK_FORMAT_ASTC_6x5_UNORM_BLOCK, VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_6x6_SRGB_BLOCK, VK_FORMAT_ASTC_6x6_UNORM_BLOCK, VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_8x5_SRGB_BLOCK, VK_FORMAT_ASTC_8x5_UNORM_BLOCK, VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_8x6_SRGB_BLOCK, VK_FORMAT_ASTC_8x6_UNORM_BLOCK, VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_8x8_SRGB_BLOCK, VK_FORMAT_ASTC_8x8_UNORM_BLOCK, VK_FORMAT_B10G11R11_UFLOAT_PACK32, VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16, VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16, VK_FORMAT_B4G4R4A4_UNORM_PACK16, VK_FORMAT_B5G5R5A1_UNORM_PACK16, VK_FORMAT_B5G6R5_UNORM_PACK16, VK_FORMAT_B8G8R8A8_SINT, VK_FORMAT_B8G8R8A8_SNORM, VK_FORMAT_B8G8R8A8_SRGB, VK_FORMAT_B8G8R8A8_UINT, VK_FORMAT_B8G8R8A8_UNORM, VK_FORMAT_B8G8R8_SINT, VK_FORMAT_B8G8R8_SNORM, VK_FORMAT_B8G8R8_SRGB, VK_FORMAT_B8G8R8_UINT, VK_FORMAT_B8G8R8_UNORM, VK_FORMAT_BC1_RGBA_SRGB_BLOCK, VK_FORMAT_BC1_RGBA_UNORM_BLOCK, VK_FORMAT_BC1_RGB_SRGB_BLOCK, VK_FORMAT_BC1_RGB_UNORM_BLOCK, VK_FORMAT_BC2_SRGB_BLOCK, VK_FORMAT_BC2_UNORM_BLOCK, VK_FORMAT_BC3_SRGB_BLOCK, VK_FORMAT_BC3_UNORM_BLOCK, VK_FORMAT_BC4_SNORM_BLOCK, VK_FORMAT_BC4_UNORM_BLOCK, VK_FORMAT_BC5_SNORM_BLOCK, VK_FORMAT_BC5_UNORM_BLOCK, VK_FORMAT_BC6H_SFLOAT_BLOCK, VK_FORMAT_BC6H_UFLOAT_BLOCK, VK_FORMAT_BC7_SRGB_BLOCK, VK_FORMAT_BC7_UNORM_BLOCK, VK_FORMAT_D16_UNORM, VK_FORMAT_D16_UNORM_S8_UINT, VK_FORMAT_D24_UNORM_S8_UINT, VK_FORMAT_D32_SFLOAT, VK_FORMAT_D32_SFLOAT_S8_UINT, VK_FORMAT_E5B9G9R9_UFLOAT_PACK32, VK_FORMAT_EAC_R11G11_SNORM_BLOCK, VK_FORMAT_EAC_R11G11_UNORM_BLOCK, VK_FORMAT_EAC_R11_SNORM_BLOCK, VK_FORMAT_EAC_R11_UNORM_BLOCK, VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK, VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK, VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK, VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK, VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK, VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK, VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16, VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16, VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG, VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG, VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG, VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG, VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG, VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG, VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG, VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG, VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16, VK_FORMAT_R10X6G10X6_UNORM_2PACK16, VK_FORMAT_R10X6_UNORM_PACK16, VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16, VK_FORMAT_R12X4G12X4_UNORM_2PACK16, VK_FORMAT_R12X4_UNORM_PACK16, VK_FORMAT_R16G16B16A16_SFLOAT, VK_FORMAT_R16G16B16A16_SINT, VK_FORMAT_R16G16B16A16_SNORM, VK_FORMAT_R16G16B16A16_UINT, VK_FORMAT_R16G16B16A16_UNORM, VK_FORMAT_R16G16B16_SFLOAT, VK_FORMAT_R16G16B16_SINT, VK_FORMAT_R16G16B16_SNORM, VK_FORMAT_R16G16B16_UINT, VK_FORMAT_R16G16B16_UNORM, VK_FORMAT_R16G16_SFLOAT, VK_FORMAT_R16G16_SINT, VK_FORMAT_R16G16_SNORM, VK_FORMAT_R16G16_UINT, VK_FORMAT_R16G16_UNORM, VK_FORMAT_R16_SFLOAT, VK_FORMAT_R16_SINT, VK_FORMAT_R16_SNORM, VK_FORMAT_R16_UINT, VK_FORMAT_R16_UNORM, VK_FORMAT_R32G32B32A32_SFLOAT, VK_FORMAT_R32G32B32A32_SINT, VK_FORMAT_R32G32B32A32_UINT, VK_FORMAT_R32G32B32_SFLOAT, VK_FORMAT_R32G32B32_SINT, VK_FORMAT_R32G32B32_UINT, VK_FORMAT_R32G32_SFLOAT, VK_FORMAT_R32G32_SINT, VK_FORMAT_R32G32_UINT, VK_FORMAT_R32_SFLOAT, VK_FORMAT_R32_SINT, VK_FORMAT_R32_UINT, VK_FORMAT_R4G4B4A4_UNORM_PACK16, VK_FORMAT_R4G4_UNORM_PACK8, VK_FORMAT_R5G5B5A1_UNORM_PACK16, VK_FORMAT_R5G6B5_UNORM_PACK16, VK_FORMAT_R64G64B64A64_SFLOAT, VK_FORMAT_R64G64B64A64_SINT, VK_FORMAT_R64G64B64A64_UINT, VK_FORMAT_R64G64B64_SFLOAT, VK_FORMAT_R64G64B64_SINT, VK_FORMAT_R64G64B64_UINT, VK_FORMAT_R64G64_SFLOAT, VK_FORMAT_R64G64_SINT, VK_FORMAT_R64G64_UINT, VK_FORMAT_R64_SFLOAT, VK_FORMAT_R64_SINT, VK_FORMAT_R64_UINT, VK_FORMAT_R8G8B8A8_SINT, VK_FORMAT_R8G8B8A8_SNORM, VK_FORMAT_R8G8B8A8_SRGB, VK_FORMAT_R8G8B8A8_UINT, VK_FORMAT_R8G8B8A8_UNORM, VK_FORMAT_R8G8B8_SINT, VK_FORMAT_R8G8B8_SNORM, VK_FORMAT_R8G8B8_SRGB, VK_FORMAT_R8G8B8_UINT, VK_FORMAT_R8G8B8_UNORM, VK_FORMAT_R8G8_SINT, VK_FORMAT_R8G8_SNORM, VK_FORMAT_R8G8_SRGB, VK_FORMAT_R8G8_UINT, VK_FORMAT_R8G8_UNORM, VK_FORMAT_R8_SINT, VK_FORMAT_R8_SNORM, VK_FORMAT_R8_SRGB, VK_FORMAT_R8_UINT, VK_FORMAT_R8_UNORM, VK_FORMAT_S8_UINT, VK_FORMAT_UNDEFINED, VK_FORMAT_X8_D24_UNORM_PACK32, createDefaultContainer, read, write };\n//# sourceMappingURL=ktx-parse.modern.js.map\n","import { ExtensionProperty, PropertyType, RefMap, Extension, BufferUtils, WriterContext, Primitive, Root, AnimationSampler, AnimationChannel, Accessor, MathUtils, GLB_BUFFER, ImageUtils, getBounds, TextureInfo, TextureChannel, RefSet } from '@gltf-transform/core';\nimport { read, KHR_DF_MODEL_ETC1S, KHR_DF_MODEL_UASTC } from 'ktx-parse';\n\nconst EXT_MESH_GPU_INSTANCING = 'EXT_mesh_gpu_instancing';\nconst EXT_MESHOPT_COMPRESSION = 'EXT_meshopt_compression';\nconst EXT_TEXTURE_WEBP = 'EXT_texture_webp';\nconst EXT_TEXTURE_AVIF = 'EXT_texture_avif';\nconst KHR_DRACO_MESH_COMPRESSION = 'KHR_draco_mesh_compression';\nconst KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\nconst KHR_MATERIALS_ANISOTROPY = 'KHR_materials_anisotropy';\nconst KHR_MATERIALS_CLEARCOAT = 'KHR_materials_clearcoat';\nconst KHR_MATERIALS_DIFFUSE_TRANSMISSION = 'KHR_materials_diffuse_transmission';\nconst KHR_MATERIALS_DISPERSION = 'KHR_materials_dispersion';\nconst KHR_MATERIALS_EMISSIVE_STRENGTH = 'KHR_materials_emissive_strength';\nconst KHR_MATERIALS_IOR = 'KHR_materials_ior';\nconst KHR_MATERIALS_IRIDESCENCE = 'KHR_materials_iridescence';\nconst KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS = 'KHR_materials_pbrSpecularGlossiness';\nconst KHR_MATERIALS_SHEEN = 'KHR_materials_sheen';\nconst KHR_MATERIALS_SPECULAR = 'KHR_materials_specular';\nconst KHR_MATERIALS_TRANSMISSION = 'KHR_materials_transmission';\nconst KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\nconst KHR_MATERIALS_VOLUME = 'KHR_materials_volume';\nconst KHR_MATERIALS_VARIANTS = 'KHR_materials_variants';\nconst KHR_MESH_QUANTIZATION = 'KHR_mesh_quantization';\nconst KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\nconst KHR_TEXTURE_TRANSFORM = 'KHR_texture_transform';\nconst KHR_XMP_JSON_LD = 'KHR_xmp_json_ld';\n\n// See BufferViewUsage in `writer-context.ts`.\nconst INSTANCE_ATTRIBUTE = 'INSTANCE_ATTRIBUTE';\n/**\n * Defines GPU instances of a {@link Mesh} under one {@link Node}. See {@link EXTMeshGPUInstancing}.\n */\nclass InstancedMesh extends ExtensionProperty {\n  init() {\n    this.extensionName = EXT_MESH_GPU_INSTANCING;\n    this.propertyType = 'InstancedMesh';\n    this.parentTypes = [PropertyType.NODE];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      attributes: new RefMap()\n    });\n  }\n  /** Returns an instance attribute as an {@link Accessor}. */\n  getAttribute(semantic) {\n    return this.getRefMap('attributes', semantic);\n  }\n  /**\n   * Sets an instance attribute to an {@link Accessor}. All attributes must have the same\n   * instance count.\n   */\n  setAttribute(semantic, accessor) {\n    return this.setRefMap('attributes', semantic, accessor, {\n      usage: INSTANCE_ATTRIBUTE\n    });\n  }\n  /**\n   * Lists all instance attributes {@link Accessor}s associated with the InstancedMesh. Order\n   * will be consistent with the order returned by {@link .listSemantics}().\n   */\n  listAttributes() {\n    return this.listRefMapValues('attributes');\n  }\n  /**\n   * Lists all instance attribute semantics associated with the primitive. Order will be\n   * consistent with the order returned by {@link .listAttributes}().\n   */\n  listSemantics() {\n    return this.listRefMapKeys('attributes');\n  }\n}\nInstancedMesh.EXTENSION_NAME = EXT_MESH_GPU_INSTANCING;\n\n/**\n * [`EXT_mesh_gpu_instancing`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing/)\n * prepares mesh data for efficient GPU instancing.\n *\n * GPU instancing allows engines to render many copies of a single mesh at once using a small number\n * of draw calls. Instancing is particularly useful for things like trees, grass, road signs, etc.\n * Keep in mind that predefined batches, as used in this extension, may prevent frustum culling\n * within a batch. Dividing batches into collocated cells may be preferable to using a single large\n * batch.\n *\n * > _**NOTICE:** While this extension stores mesh data optimized for GPU instancing, it\n * > is important to note that (1) GPU instancing and other optimizations are possible — and\n * > encouraged — even without this extension, and (2) other common meanings of the term\n * > \"instancing\" exist, distinct from this extension. See\n * > [Appendix: Motivation and Purpose](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing#appendix-motivation-and-purpose)\n * > of the `EXT_mesh_gpu_instancing` specification._\n *\n * Properties:\n * - {@link InstancedMesh}\n *\n * ### Example\n *\n * The `EXTMeshGPUInstancing` class provides a single {@link ExtensionProperty} type, `InstancedMesh`,\n * which may be attached to any {@link Node} instance. For example:\n *\n * ```typescript\n * import { EXTMeshGPUInstancing } from '@gltf-transform/extensions';\n *\n * // Create standard mesh, node, and scene hierarchy.\n * // ...\n *\n * // Assign positions for each instance.\n * const batchPositions = doc.createAccessor('instance_positions')\n * \t.setArray(new Float32Array([\n * \t\t0, 0, 0,\n * \t\t1, 0, 0,\n * \t\t2, 0, 0,\n * \t]))\n * \t.setType(Accessor.Type.VEC3)\n * \t.setBuffer(buffer);\n *\n * // Assign IDs for each instance.\n * const batchIDs = doc.createAccessor('instance_ids')\n * \t.setArray(new Uint8Array([0, 1, 2]))\n * \t.setType(Accessor.Type.SCALAR)\n * \t.setBuffer(buffer);\n *\n * // Create an Extension attached to the Document.\n * const batchExtension = document.createExtension(EXTMeshGPUInstancing)\n * \t.setRequired(true);\n * const batch = batchExtension.createInstancedMesh()\n * \t.setAttribute('TRANSLATION', batchPositions)\n * \t.setAttribute('_ID', batchIDs);\n *\n * node\n * \t.setMesh(mesh)\n * \t.setExtension('EXT_mesh_gpu_instancing', batch);\n * ```\n *\n * Standard instance attributes are `TRANSLATION`, `ROTATION`, and `SCALE`, and support the accessor\n * types allowed by the extension specification. Custom instance attributes are allowed, and should\n * be prefixed with an underscore (`_*`).\n */\nclass EXTMeshGPUInstancing extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = EXT_MESH_GPU_INSTANCING;\n    /** @hidden */\n    this.provideTypes = [PropertyType.NODE];\n    /** @hidden */\n    this.prewriteTypes = [PropertyType.ACCESSOR];\n  }\n  /** Creates a new InstancedMesh property for use on a {@link Node}. */\n  createInstancedMesh() {\n    return new InstancedMesh(this.document.getGraph());\n  }\n  /** @hidden */\n  read(context) {\n    const jsonDoc = context.jsonDoc;\n    const nodeDefs = jsonDoc.json.nodes || [];\n    nodeDefs.forEach((nodeDef, nodeIndex) => {\n      if (!nodeDef.extensions || !nodeDef.extensions[EXT_MESH_GPU_INSTANCING]) return;\n      const instancedMeshDef = nodeDef.extensions[EXT_MESH_GPU_INSTANCING];\n      const instancedMesh = this.createInstancedMesh();\n      for (const semantic in instancedMeshDef.attributes) {\n        instancedMesh.setAttribute(semantic, context.accessors[instancedMeshDef.attributes[semantic]]);\n      }\n      context.nodes[nodeIndex].setExtension(EXT_MESH_GPU_INSTANCING, instancedMesh);\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    // Set usage for instance attribute accessors, so they are stored in separate buffer\n    // views grouped by parent reference.\n    context.accessorUsageGroupedByParent.add(INSTANCE_ATTRIBUTE);\n    for (const prop of this.properties) {\n      for (const attribute of prop.listAttributes()) {\n        context.addAccessorToUsageGroup(attribute, INSTANCE_ATTRIBUTE);\n      }\n    }\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listNodes().forEach(node => {\n      const instancedMesh = node.getExtension(EXT_MESH_GPU_INSTANCING);\n      if (instancedMesh) {\n        const nodeIndex = context.nodeIndexMap.get(node);\n        const nodeDef = jsonDoc.json.nodes[nodeIndex];\n        const instancedMeshDef = {\n          attributes: {}\n        };\n        instancedMesh.listSemantics().forEach(semantic => {\n          const attribute = instancedMesh.getAttribute(semantic);\n          instancedMeshDef.attributes[semantic] = context.accessorIndexMap.get(attribute);\n        });\n        nodeDef.extensions = nodeDef.extensions || {};\n        nodeDef.extensions[EXT_MESH_GPU_INSTANCING] = instancedMeshDef;\n      }\n    });\n    return this;\n  }\n}\nEXTMeshGPUInstancing.EXTENSION_NAME = EXT_MESH_GPU_INSTANCING;\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\nvar EncoderMethod$1;\n(function (EncoderMethod) {\n  EncoderMethod[\"QUANTIZE\"] = \"quantize\";\n  EncoderMethod[\"FILTER\"] = \"filter\";\n})(EncoderMethod$1 || (EncoderMethod$1 = {}));\nvar MeshoptMode;\n(function (MeshoptMode) {\n  MeshoptMode[\"ATTRIBUTES\"] = \"ATTRIBUTES\";\n  MeshoptMode[\"TRIANGLES\"] = \"TRIANGLES\";\n  MeshoptMode[\"INDICES\"] = \"INDICES\";\n})(MeshoptMode || (MeshoptMode = {}));\nvar MeshoptFilter;\n(function (MeshoptFilter) {\n  /** No filter — quantize only. */\n  MeshoptFilter[\"NONE\"] = \"NONE\";\n  /** Four 8- or 16-bit normalized values. */\n  MeshoptFilter[\"OCTAHEDRAL\"] = \"OCTAHEDRAL\";\n  /** Four 16-bit normalized values. */\n  MeshoptFilter[\"QUATERNION\"] = \"QUATERNION\";\n  /** K single-precision floating point values. */\n  MeshoptFilter[\"EXPONENTIAL\"] = \"EXPONENTIAL\";\n})(MeshoptFilter || (MeshoptFilter = {}));\n\n/**\n * Returns true for a fallback buffer, else false.\n *\n *   - All references to the fallback buffer must come from bufferViews that\n *     have a EXT_meshopt_compression extension specified.\n *   - No references to the fallback buffer may come from\n *     EXT_meshopt_compression extension JSON.\n */\nfunction isFallbackBuffer(bufferDef) {\n  if (!bufferDef.extensions || !bufferDef.extensions[EXT_MESHOPT_COMPRESSION]) return false;\n  const fallbackDef = bufferDef.extensions[EXT_MESHOPT_COMPRESSION];\n  return !!fallbackDef.fallback;\n}\n\nconst {\n  BYTE,\n  SHORT,\n  FLOAT\n} = Accessor.ComponentType;\nconst {\n  encodeNormalizedInt,\n  decodeNormalizedInt\n} = MathUtils;\n/** Pre-processes array with required filters or padding. */\nfunction prepareAccessor(accessor, encoder, mode, filterOptions) {\n  const {\n    filter,\n    bits\n  } = filterOptions;\n  const result = {\n    array: accessor.getArray(),\n    byteStride: accessor.getElementSize() * accessor.getComponentSize(),\n    componentType: accessor.getComponentType(),\n    normalized: accessor.getNormalized()\n  };\n  if (mode !== MeshoptMode.ATTRIBUTES) return result;\n  if (filter !== MeshoptFilter.NONE) {\n    let array = accessor.getNormalized() ? decodeNormalizedIntArray(accessor) : new Float32Array(result.array);\n    switch (filter) {\n      case MeshoptFilter.EXPONENTIAL:\n        // → K single-precision floating point values.\n        result.byteStride = accessor.getElementSize() * 4;\n        result.componentType = FLOAT;\n        result.normalized = false;\n        result.array = encoder.encodeFilterExp(array, accessor.getCount(), result.byteStride, bits);\n        break;\n      case MeshoptFilter.OCTAHEDRAL:\n        // → four 8- or 16-bit normalized values.\n        result.byteStride = bits > 8 ? 8 : 4;\n        result.componentType = bits > 8 ? SHORT : BYTE;\n        result.normalized = true;\n        array = accessor.getElementSize() === 3 ? padNormals(array) : array;\n        result.array = encoder.encodeFilterOct(array, accessor.getCount(), result.byteStride, bits);\n        break;\n      case MeshoptFilter.QUATERNION:\n        // → four 16-bit normalized values.\n        result.byteStride = 8;\n        result.componentType = SHORT;\n        result.normalized = true;\n        result.array = encoder.encodeFilterQuat(array, accessor.getCount(), result.byteStride, bits);\n        break;\n      default:\n        throw new Error('Invalid filter.');\n    }\n    result.min = accessor.getMin([]);\n    result.max = accessor.getMax([]);\n    if (accessor.getNormalized()) {\n      result.min = result.min.map(v => decodeNormalizedInt(v, accessor.getComponentType()));\n      result.max = result.max.map(v => decodeNormalizedInt(v, accessor.getComponentType()));\n    }\n    if (result.normalized) {\n      result.min = result.min.map(v => encodeNormalizedInt(v, result.componentType));\n      result.max = result.max.map(v => encodeNormalizedInt(v, result.componentType));\n    }\n  } else if (result.byteStride % 4) {\n    result.array = padArrayElements(result.array, accessor.getElementSize());\n    result.byteStride = result.array.byteLength / accessor.getCount();\n  }\n  return result;\n}\nfunction decodeNormalizedIntArray(attribute) {\n  const componentType = attribute.getComponentType();\n  const srcArray = attribute.getArray();\n  const dstArray = new Float32Array(srcArray.length);\n  for (let i = 0; i < srcArray.length; i++) {\n    dstArray[i] = decodeNormalizedInt(srcArray[i], componentType);\n  }\n  return dstArray;\n}\n/** Pads array to 4 byte alignment, required for Meshopt ATTRIBUTE buffer views. */\nfunction padArrayElements(srcArray, elementSize) {\n  const byteStride = BufferUtils.padNumber(srcArray.BYTES_PER_ELEMENT * elementSize);\n  const elementStride = byteStride / srcArray.BYTES_PER_ELEMENT;\n  const elementCount = srcArray.length / elementSize;\n  const dstArray = new srcArray.constructor(elementCount * elementStride);\n  for (let i = 0; i * elementSize < srcArray.length; i++) {\n    for (let j = 0; j < elementSize; j++) {\n      dstArray[i * elementStride + j] = srcArray[i * elementSize + j];\n    }\n  }\n  return dstArray;\n}\n/** Pad normals with a .w component for octahedral encoding. */\nfunction padNormals(srcArray) {\n  const dstArray = new Float32Array(srcArray.length * 4 / 3);\n  for (let i = 0, il = srcArray.length / 3; i < il; i++) {\n    dstArray[i * 4] = srcArray[i * 3];\n    dstArray[i * 4 + 1] = srcArray[i * 3 + 1];\n    dstArray[i * 4 + 2] = srcArray[i * 3 + 2];\n  }\n  return dstArray;\n}\nfunction getMeshoptMode(accessor, usage) {\n  if (usage === WriterContext.BufferViewUsage.ELEMENT_ARRAY_BUFFER) {\n    const isTriangles = accessor.listParents().some(parent => {\n      return parent instanceof Primitive && parent.getMode() === Primitive.Mode.TRIANGLES;\n    });\n    return isTriangles ? MeshoptMode.TRIANGLES : MeshoptMode.INDICES;\n  }\n  return MeshoptMode.ATTRIBUTES;\n}\nfunction getMeshoptFilter(accessor, doc) {\n  const refs = doc.getGraph().listParentEdges(accessor).filter(edge => !(edge.getParent() instanceof Root));\n  for (const ref of refs) {\n    const refName = ref.getName();\n    const refKey = ref.getAttributes().key || '';\n    const isDelta = ref.getParent().propertyType === PropertyType.PRIMITIVE_TARGET;\n    // Indices.\n    if (refName === 'indices') return {\n      filter: MeshoptFilter.NONE\n    };\n    // Attributes.\n    //\n    // NOTES:\n    // - Vertex attributes should be filtered IFF they are _not_ quantized in\n    //   'packages/cli/src/transforms/meshopt.ts'.\n    // - POSITION and TEXCOORD_0 could use exponential filtering, but this produces broken\n    //   output in some cases (e.g. Matilda.glb), for unknown reasons. gltfpack uses manual\n    //   quantization for these attributes.\n    // - NORMAL and TANGENT attributes use Octahedral filters, but deltas in morphs do not.\n    // - When specifying bit depth for vertex attributes, check the defaults in `quantize.ts`\n    //\t and overrides in `meshopt.ts`. Don't store deltas at higher precision than base.\n    if (refName === 'attributes') {\n      if (refKey === 'POSITION') return {\n        filter: MeshoptFilter.NONE\n      };\n      if (refKey === 'TEXCOORD_0') return {\n        filter: MeshoptFilter.NONE\n      };\n      if (refKey.startsWith('JOINTS_')) return {\n        filter: MeshoptFilter.NONE\n      };\n      if (refKey.startsWith('WEIGHTS_')) return {\n        filter: MeshoptFilter.NONE\n      };\n      if (refKey === 'NORMAL' || refKey === 'TANGENT') {\n        return isDelta ? {\n          filter: MeshoptFilter.NONE\n        } : {\n          filter: MeshoptFilter.OCTAHEDRAL,\n          bits: 8\n        };\n      }\n    }\n    // Animation.\n    if (refName === 'output') {\n      const targetPath = getTargetPath(accessor);\n      if (targetPath === 'rotation') return {\n        filter: MeshoptFilter.QUATERNION,\n        bits: 16\n      };\n      if (targetPath === 'translation') return {\n        filter: MeshoptFilter.EXPONENTIAL,\n        bits: 12\n      };\n      if (targetPath === 'scale') return {\n        filter: MeshoptFilter.EXPONENTIAL,\n        bits: 12\n      };\n      return {\n        filter: MeshoptFilter.NONE\n      };\n    }\n    // See: https://github.com/donmccurdy/glTF-Transform/issues/489\n    if (refName === 'input') return {\n      filter: MeshoptFilter.NONE\n    };\n    if (refName === 'inverseBindMatrices') return {\n      filter: MeshoptFilter.NONE\n    };\n  }\n  return {\n    filter: MeshoptFilter.NONE\n  };\n}\nfunction getTargetPath(accessor) {\n  for (const sampler of accessor.listParents()) {\n    if (!(sampler instanceof AnimationSampler)) continue;\n    for (const channel of sampler.listParents()) {\n      if (!(channel instanceof AnimationChannel)) continue;\n      return channel.getTargetPath();\n    }\n  }\n  return null;\n}\n\nconst DEFAULT_ENCODER_OPTIONS$1 = {\n  method: EncoderMethod$1.QUANTIZE\n};\n/**\n * [`EXT_meshopt_compression`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Vendor/EXT_meshopt_compression/)\n * provides compression and fast decoding for geometry, morph targets, and animations.\n *\n * Meshopt compression (based on the [meshoptimizer](https://github.com/zeux/meshoptimizer)\n * library) offers a lightweight decoder with very fast runtime decompression, and is\n * appropriate for models of any size. Meshopt can reduce the transmission sizes of geometry,\n * morph targets, animation, and other numeric data stored in buffer views. When textures are\n * large, other complementary compression methods should be used as well.\n *\n * For the full benefits of meshopt compression, **apply gzip, brotli, or another lossless\n * compression method** to the resulting .glb, .gltf, or .bin files. Meshopt specifically\n * pre-optimizes assets for this purpose — without this secondary compression, the size\n * reduction is considerably less.\n *\n * Be aware that decompression happens before uploading to the GPU. While Meshopt decoding is\n * considerably faster than Draco decoding, neither compression method will improve runtime\n * performance directly. To improve framerate, you'll need to simplify the geometry by reducing\n * vertex count or draw calls — not just compress it. Finally, be aware that Meshopt compression is\n * lossy: repeatedly compressing and decompressing a model in a pipeline will lose precision, so\n * compression should generally be the last stage of an art workflow, and uncompressed original\n * files should be kept.\n *\n * The meshoptimizer library ([github](https://github.com/zeux/meshoptimizer/tree/master/js),\n * [npm](https://www.npmjs.com/package/meshoptimizer)) is a required dependency for reading or\n * writing files, and must be provided by the application. Compression may alternatively be applied\n * with the [gltfpack](https://github.com/zeux/meshoptimizer/tree/master/gltf) tool.\n *\n * ### Example — Read\n *\n * To read glTF files using Meshopt compression, ensure that the extension\n * and a decoder are registered. Geometry and other data are decompressed\n * while reading the file.\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { EXTMeshoptCompression } from '@gltf-transform/extensions';\n * import { MeshoptDecoder } from 'meshoptimizer';\n *\n * await MeshoptDecoder.ready;\n *\n * const io = new NodeIO()\n * \t.registerExtensions([EXTMeshoptCompression])\n * \t.registerDependencies({ 'meshopt.decoder': MeshoptDecoder });\n *\n * // Read and decode.\n * const document = await io.read('compressed.glb');\n * ```\n *\n * ### Example — Write\n *\n * The simplest way to apply Meshopt compression is with the {@link meshopt}\n * transform. The extension and an encoder must be registered.\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { EXTMeshoptCompression } from '@gltf-transform/extensions';\n * import { meshopt } from '@gltf-transform/functions';\n * import { MeshoptEncoder } from 'meshoptimizer';\n *\n * await MeshoptEncoder.ready;\n *\n * const io = new NodeIO()\n * \t.registerExtensions([EXTMeshoptCompression])\n * \t.registerDependencies({ 'meshopt.encoder': MeshoptEncoder });\n *\n * await document.transform(\n *   meshopt({encoder: MeshoptEncoder, level: 'medium'})\n * );\n *\n * await io.write('compressed-medium.glb', document);\n * ```\n *\n * ### Example — Advanced\n *\n * Internally, the {@link meshopt} transform reorders and quantizes vertex data\n * to preparate for compression. If you prefer different pre-processing, the\n * EXTMeshoptCompression extension can be added to the document manually:\n *\n * ```typescript\n * import { reorder, quantize } from '@gltf-transform/functions';\n * import { EXTMeshoptCompression } from '@gltf-transform/extensions';\n * import { MeshoptEncoder } from 'meshoptimizer';\n *\n * await document.transform(\n * \treorder({encoder: MeshoptEncoder}),\n * \tquantize()\n * );\n *\n * document.createExtension(EXTMeshoptCompression)\n * \t.setRequired(true)\n * \t.setEncoderOptions({ method: EXTMeshoptCompression.EncoderMethod.QUANTIZE });\n * ```\n *\n * In either case, compression is deferred until generating output with an I/O\n * class.\n */\nclass EXTMeshoptCompression extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = EXT_MESHOPT_COMPRESSION;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.BUFFER, PropertyType.PRIMITIVE];\n    /** @hidden */\n    this.prewriteTypes = [PropertyType.BUFFER, PropertyType.ACCESSOR];\n    /** @hidden */\n    this.readDependencies = ['meshopt.decoder'];\n    /** @hidden */\n    this.writeDependencies = ['meshopt.encoder'];\n    this._decoder = null;\n    this._decoderFallbackBufferMap = new Map();\n    this._encoder = null;\n    this._encoderOptions = DEFAULT_ENCODER_OPTIONS$1;\n    this._encoderFallbackBuffer = null;\n    this._encoderBufferViews = {};\n    this._encoderBufferViewData = {};\n    this._encoderBufferViewAccessors = {};\n  }\n  /** @hidden */\n  install(key, dependency) {\n    if (key === 'meshopt.decoder') {\n      this._decoder = dependency;\n    }\n    if (key === 'meshopt.encoder') {\n      this._encoder = dependency;\n    }\n    return this;\n  }\n  /**\n   * Configures Meshopt options for quality/compression tuning. The two methods rely on different\n   * pre-processing before compression, and should be compared on the basis of (a) quality/loss\n   * and (b) final asset size after _also_ applying a lossless compression such as gzip or brotli.\n   *\n   * - QUANTIZE: Default. Pre-process with {@link quantize quantize()} (lossy to specified\n   * \tprecision) before applying lossless Meshopt compression. Offers a considerable compression\n   * \tratio with or without further supercompression. Equivalent to `gltfpack -c`.\n   * - FILTER: Pre-process with lossy filters to improve compression, before applying lossless\n   *\tMeshopt compression. While output may initially be larger than with the QUANTIZE method,\n   *\tthis method will benefit more from supercompression (e.g. gzip or brotli). Equivalent to\n   * \t`gltfpack -cc`.\n   *\n   * Output with the FILTER method will generally be smaller after supercompression (e.g. gzip or\n   * brotli) is applied, but may be larger than QUANTIZE output without it. Decoding is very fast\n   * with both methods.\n   *\n   * Example:\n   *\n   * ```ts\n   * import { EXTMeshoptCompression } from '@gltf-transform/extensions';\n   *\n   * doc.createExtension(EXTMeshoptCompression)\n   * \t.setRequired(true)\n   * \t.setEncoderOptions({\n   * \t\tmethod: EXTMeshoptCompression.EncoderMethod.QUANTIZE\n   * \t});\n   * ```\n   */\n  setEncoderOptions(options) {\n    this._encoderOptions = _extends({}, DEFAULT_ENCODER_OPTIONS$1, options);\n    return this;\n  }\n  /**********************************************************************************************\n   * Decoding.\n   */\n  /** @internal Checks preconditions, decodes buffer views, and creates decoded primitives. */\n  preread(context, propertyType) {\n    if (!this._decoder) {\n      if (!this.isRequired()) return this;\n      throw new Error(`[${EXT_MESHOPT_COMPRESSION}] Please install extension dependency, \"meshopt.decoder\".`);\n    }\n    if (!this._decoder.supported) {\n      if (!this.isRequired()) return this;\n      throw new Error(`[${EXT_MESHOPT_COMPRESSION}]: Missing WASM support.`);\n    }\n    if (propertyType === PropertyType.BUFFER) {\n      this._prereadBuffers(context);\n    } else if (propertyType === PropertyType.PRIMITIVE) {\n      this._prereadPrimitives(context);\n    }\n    return this;\n  }\n  /** @internal Decode buffer views. */\n  _prereadBuffers(context) {\n    const jsonDoc = context.jsonDoc;\n    const viewDefs = jsonDoc.json.bufferViews || [];\n    viewDefs.forEach((viewDef, index) => {\n      if (!viewDef.extensions || !viewDef.extensions[EXT_MESHOPT_COMPRESSION]) return;\n      const meshoptDef = viewDef.extensions[EXT_MESHOPT_COMPRESSION];\n      const byteOffset = meshoptDef.byteOffset || 0;\n      const byteLength = meshoptDef.byteLength || 0;\n      const count = meshoptDef.count;\n      const stride = meshoptDef.byteStride;\n      const result = new Uint8Array(count * stride);\n      const bufferDef = jsonDoc.json.buffers[meshoptDef.buffer];\n      // TODO(cleanup): Should be encapsulated in writer-context.ts.\n      const resource = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n      const source = BufferUtils.toView(resource, byteOffset, byteLength);\n      this._decoder.decodeGltfBuffer(result, count, stride, source, meshoptDef.mode, meshoptDef.filter);\n      context.bufferViews[index] = result;\n    });\n  }\n  /**\n   * Mark fallback buffers and replacements.\n   *\n   * Note: Alignment with primitives is arbitrary; this just needs to happen\n   * after Buffers have been parsed.\n   * @internal\n   */\n  _prereadPrimitives(context) {\n    const jsonDoc = context.jsonDoc;\n    const viewDefs = jsonDoc.json.bufferViews || [];\n    //\n    viewDefs.forEach(viewDef => {\n      if (!viewDef.extensions || !viewDef.extensions[EXT_MESHOPT_COMPRESSION]) return;\n      const meshoptDef = viewDef.extensions[EXT_MESHOPT_COMPRESSION];\n      const buffer = context.buffers[meshoptDef.buffer];\n      const fallbackBuffer = context.buffers[viewDef.buffer];\n      const fallbackBufferDef = jsonDoc.json.buffers[viewDef.buffer];\n      if (isFallbackBuffer(fallbackBufferDef)) {\n        this._decoderFallbackBufferMap.set(fallbackBuffer, buffer);\n      }\n    });\n  }\n  /** @hidden Removes Fallback buffers, if extension is required. */\n  read(_context) {\n    if (!this.isRequired()) return this;\n    // Replace fallback buffers.\n    for (const [fallbackBuffer, buffer] of this._decoderFallbackBufferMap) {\n      for (const parent of fallbackBuffer.listParents()) {\n        if (parent instanceof Accessor) {\n          parent.swap(fallbackBuffer, buffer);\n        }\n      }\n      fallbackBuffer.dispose();\n    }\n    return this;\n  }\n  /**********************************************************************************************\n   * Encoding.\n   */\n  /** @internal Claims accessors that can be compressed and writes compressed buffer views. */\n  prewrite(context, propertyType) {\n    if (propertyType === PropertyType.ACCESSOR) {\n      this._prewriteAccessors(context);\n    } else if (propertyType === PropertyType.BUFFER) {\n      this._prewriteBuffers(context);\n    }\n    return this;\n  }\n  /** @internal Claims accessors that can be compressed. */\n  _prewriteAccessors(context) {\n    const json = context.jsonDoc.json;\n    const encoder = this._encoder;\n    const options = this._encoderOptions;\n    const graph = this.document.getGraph();\n    const fallbackBuffer = this.document.createBuffer(); // Disposed on write.\n    const fallbackBufferIndex = this.document.getRoot().listBuffers().indexOf(fallbackBuffer);\n    let nextID = 1;\n    const parentToID = new Map();\n    const getParentID = property => {\n      for (const parent of graph.listParents(property)) {\n        if (parent.propertyType === PropertyType.ROOT) continue;\n        let id = parentToID.get(property);\n        if (id === undefined) parentToID.set(property, id = nextID++);\n        return id;\n      }\n      return -1;\n    };\n    this._encoderFallbackBuffer = fallbackBuffer;\n    this._encoderBufferViews = {};\n    this._encoderBufferViewData = {};\n    this._encoderBufferViewAccessors = {};\n    for (const accessor of this.document.getRoot().listAccessors()) {\n      // See: https://github.com/donmccurdy/glTF-Transform/pull/323#issuecomment-898791251\n      // Example: https://skfb.ly/6qAD8\n      if (getTargetPath(accessor) === 'weights') continue;\n      // See: https://github.com/donmccurdy/glTF-Transform/issues/289\n      if (accessor.getSparse()) continue;\n      const usage = context.getAccessorUsage(accessor);\n      const parentID = context.accessorUsageGroupedByParent.has(usage) ? getParentID(accessor) : null;\n      const mode = getMeshoptMode(accessor, usage);\n      const filter = options.method === EncoderMethod$1.FILTER ? getMeshoptFilter(accessor, this.document) : {\n        filter: MeshoptFilter.NONE\n      };\n      const preparedAccessor = prepareAccessor(accessor, encoder, mode, filter);\n      const {\n        array,\n        byteStride\n      } = preparedAccessor;\n      const buffer = accessor.getBuffer();\n      if (!buffer) throw new Error(`${EXT_MESHOPT_COMPRESSION}: Missing buffer for accessor.`);\n      const bufferIndex = this.document.getRoot().listBuffers().indexOf(buffer);\n      // Buffer view grouping key.\n      const key = [usage, parentID, mode, filter.filter, byteStride, bufferIndex].join(':');\n      let bufferView = this._encoderBufferViews[key];\n      let bufferViewData = this._encoderBufferViewData[key];\n      let bufferViewAccessors = this._encoderBufferViewAccessors[key];\n      // Write new buffer view, if needed.\n      if (!bufferView || !bufferViewData) {\n        bufferViewAccessors = this._encoderBufferViewAccessors[key] = [];\n        bufferViewData = this._encoderBufferViewData[key] = [];\n        bufferView = this._encoderBufferViews[key] = {\n          buffer: fallbackBufferIndex,\n          target: WriterContext.USAGE_TO_TARGET[usage],\n          byteOffset: 0,\n          byteLength: 0,\n          byteStride: usage === WriterContext.BufferViewUsage.ARRAY_BUFFER ? byteStride : undefined,\n          extensions: {\n            [EXT_MESHOPT_COMPRESSION]: {\n              buffer: bufferIndex,\n              byteOffset: 0,\n              byteLength: 0,\n              mode: mode,\n              filter: filter.filter !== MeshoptFilter.NONE ? filter.filter : undefined,\n              byteStride: byteStride,\n              count: 0\n            }\n          }\n        };\n      }\n      // Write accessor.\n      const accessorDef = context.createAccessorDef(accessor);\n      accessorDef.componentType = preparedAccessor.componentType;\n      accessorDef.normalized = preparedAccessor.normalized;\n      accessorDef.byteOffset = bufferView.byteLength;\n      if (accessorDef.min && preparedAccessor.min) accessorDef.min = preparedAccessor.min;\n      if (accessorDef.max && preparedAccessor.max) accessorDef.max = preparedAccessor.max;\n      context.accessorIndexMap.set(accessor, json.accessors.length);\n      json.accessors.push(accessorDef);\n      bufferViewAccessors.push(accessorDef);\n      // Update buffer view.\n      bufferViewData.push(new Uint8Array(array.buffer, array.byteOffset, array.byteLength));\n      bufferView.byteLength += array.byteLength;\n      bufferView.extensions.EXT_meshopt_compression.count += accessor.getCount();\n    }\n  }\n  /** @internal Writes compressed buffer views. */\n  _prewriteBuffers(context) {\n    const encoder = this._encoder;\n    for (const key in this._encoderBufferViews) {\n      const bufferView = this._encoderBufferViews[key];\n      const bufferViewData = this._encoderBufferViewData[key];\n      const buffer = this.document.getRoot().listBuffers()[bufferView.extensions[EXT_MESHOPT_COMPRESSION].buffer];\n      const otherBufferViews = context.otherBufferViews.get(buffer) || [];\n      const {\n        count,\n        byteStride,\n        mode\n      } = bufferView.extensions[EXT_MESHOPT_COMPRESSION];\n      const srcArray = BufferUtils.concat(bufferViewData);\n      const dstArray = encoder.encodeGltfBuffer(srcArray, count, byteStride, mode);\n      const compressedData = BufferUtils.pad(dstArray);\n      bufferView.extensions[EXT_MESHOPT_COMPRESSION].byteLength = dstArray.byteLength;\n      bufferViewData.length = 0;\n      bufferViewData.push(compressedData);\n      otherBufferViews.push(compressedData);\n      context.otherBufferViews.set(buffer, otherBufferViews);\n    }\n  }\n  /** @hidden Puts encoded data into glTF output. */\n  write(context) {\n    let fallbackBufferByteOffset = 0;\n    // Write final encoded buffer view properties.\n    for (const key in this._encoderBufferViews) {\n      const bufferView = this._encoderBufferViews[key];\n      const bufferViewData = this._encoderBufferViewData[key][0];\n      const bufferViewIndex = context.otherBufferViewsIndexMap.get(bufferViewData);\n      const bufferViewAccessors = this._encoderBufferViewAccessors[key];\n      for (const accessorDef of bufferViewAccessors) {\n        accessorDef.bufferView = bufferViewIndex;\n      }\n      const finalBufferViewDef = context.jsonDoc.json.bufferViews[bufferViewIndex];\n      const compressedByteOffset = finalBufferViewDef.byteOffset || 0;\n      Object.assign(finalBufferViewDef, bufferView);\n      finalBufferViewDef.byteOffset = fallbackBufferByteOffset;\n      const bufferViewExtensionDef = finalBufferViewDef.extensions[EXT_MESHOPT_COMPRESSION];\n      bufferViewExtensionDef.byteOffset = compressedByteOffset;\n      fallbackBufferByteOffset += BufferUtils.padNumber(bufferView.byteLength);\n    }\n    // Write final fallback buffer.\n    const fallbackBuffer = this._encoderFallbackBuffer;\n    const fallbackBufferIndex = context.bufferIndexMap.get(fallbackBuffer);\n    const fallbackBufferDef = context.jsonDoc.json.buffers[fallbackBufferIndex];\n    fallbackBufferDef.byteLength = fallbackBufferByteOffset;\n    fallbackBufferDef.extensions = {\n      [EXT_MESHOPT_COMPRESSION]: {\n        fallback: true\n      }\n    };\n    fallbackBuffer.dispose();\n    return this;\n  }\n}\nEXTMeshoptCompression.EXTENSION_NAME = EXT_MESHOPT_COMPRESSION;\nEXTMeshoptCompression.EncoderMethod = EncoderMethod$1;\n\nclass AVIFImageUtils {\n  match(array) {\n    return array.length >= 12 && BufferUtils.decodeText(array.slice(4, 12)) === 'ftypavif';\n  }\n  /**\n   * Probes size of AVIF or HEIC image. Assumes a single static image, without\n   * orientation or other metadata that would affect dimensions.\n   */\n  getSize(array) {\n    if (!this.match(array)) return null;\n    // References:\n    // - https://stackoverflow.com/questions/66222773/how-to-get-image-dimensions-from-an-avif-file\n    // - https://github.com/nodeca/probe-image-size/blob/master/lib/parse_sync/avif.js\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    let box = unbox(view, 0);\n    if (!box) return null;\n    let offset = box.end;\n    while (box = unbox(view, offset)) {\n      if (box.type === 'meta') {\n        offset = box.start + 4; // version + flags\n      } else if (box.type === 'iprp' || box.type === 'ipco') {\n        offset = box.start;\n      } else if (box.type === 'ispe') {\n        return [view.getUint32(box.start + 4), view.getUint32(box.start + 8)];\n      } else if (box.type === 'mdat') {\n        break; // mdat should be last, unlikely to find metadata past here.\n      } else {\n        offset = box.end;\n      }\n    }\n    return null;\n  }\n  getChannels(_buffer) {\n    return 4;\n  }\n}\n/**\n * [`EXT_texture_avif`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_avif/)\n * enables AVIF images for any material texture.\n *\n * AVIF offers greatly reduced transmission size, but\n * [requires browser support](https://caniuse.com/avif). Like PNG and JPEG, an AVIF image is\n * *fully decompressed* when uploaded to the GPU, which increases upload time and GPU memory cost.\n * For seamless uploads and minimal GPU memory cost, it is necessary to use a GPU texture format\n * like Basis Universal, with the `KHR_texture_basisu` extension.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the\n * {@link Document}, and affects the entire Document by allowing use of the `image/avif` MIME type\n * and passing AVIF image data to the {@link Texture.setImage} method. Without the Extension, the\n * same MIME types and image data would yield an invalid glTF document, under the stricter core glTF\n * specification.\n *\n * Properties:\n * - N/A\n *\n * ### Example\n *\n * ```typescript\n * import { TextureAVIF } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const avifExtension = document.createExtension(TextureAVIF)\n * \t.setRequired(true);\n * document.createTexture('MyAVIFTexture')\n * \t.setMimeType('image/avif')\n * \t.setImage(fs.readFileSync('my-texture.avif'));\n * ```\n *\n * AVIF conversion is not done automatically when adding the extension as shown above — you must\n * convert the image data first, then pass the `.avif` payload to {@link Texture.setImage}.\n *\n * When the `EXT_texture_avif` extension is added to a file by glTF-Transform, the extension should\n * always be required. This tool does not support writing assets that \"fall back\" to optional PNG or\n * JPEG image data.\n */\nclass EXTTextureAVIF extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = EXT_TEXTURE_AVIF;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.TEXTURE];\n  }\n  /** @hidden */\n  static register() {\n    ImageUtils.registerFormat('image/avif', new AVIFImageUtils());\n  }\n  /** @hidden */\n  preread(context) {\n    const textureDefs = context.jsonDoc.json.textures || [];\n    textureDefs.forEach(textureDef => {\n      if (textureDef.extensions && textureDef.extensions[EXT_TEXTURE_AVIF]) {\n        textureDef.source = textureDef.extensions[EXT_TEXTURE_AVIF].source;\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listTextures().forEach(texture => {\n      if (texture.getMimeType() === 'image/avif') {\n        const imageIndex = context.imageIndexMap.get(texture);\n        const textureDefs = jsonDoc.json.textures || [];\n        textureDefs.forEach(textureDef => {\n          if (textureDef.source === imageIndex) {\n            textureDef.extensions = textureDef.extensions || {};\n            textureDef.extensions[EXT_TEXTURE_AVIF] = {\n              source: textureDef.source\n            };\n            delete textureDef.source;\n          }\n        });\n      }\n    });\n    return this;\n  }\n}\nEXTTextureAVIF.EXTENSION_NAME = EXT_TEXTURE_AVIF;\nfunction unbox(data, offset) {\n  if (data.byteLength < 4 + offset) return null;\n  // size includes first 4 bytes (length)\n  const size = data.getUint32(offset);\n  if (data.byteLength < size + offset || size < 8) return null;\n  return {\n    type: BufferUtils.decodeText(new Uint8Array(data.buffer, data.byteOffset + offset + 4, 4)),\n    start: offset + 8,\n    end: offset + size\n  };\n}\n\nclass WEBPImageUtils {\n  match(array) {\n    return array.length >= 12 && array[8] === 87 && array[9] === 69 && array[10] === 66 && array[11] === 80;\n  }\n  getSize(array) {\n    // Reference: http://tools.ietf.org/html/rfc6386\n    const RIFF = BufferUtils.decodeText(array.slice(0, 4));\n    const WEBP = BufferUtils.decodeText(array.slice(8, 12));\n    if (RIFF !== 'RIFF' || WEBP !== 'WEBP') return null;\n    const view = new DataView(array.buffer, array.byteOffset);\n    // Reference: https://wiki.tcl-lang.org/page/Reading+WEBP+image+dimensions\n    let offset = 12;\n    while (offset < view.byteLength) {\n      const chunkId = BufferUtils.decodeText(new Uint8Array([view.getUint8(offset), view.getUint8(offset + 1), view.getUint8(offset + 2), view.getUint8(offset + 3)]));\n      const chunkByteLength = view.getUint32(offset + 4, true);\n      if (chunkId === 'VP8 ') {\n        const width = view.getInt16(offset + 14, true) & 0x3fff;\n        const height = view.getInt16(offset + 16, true) & 0x3fff;\n        return [width, height];\n      } else if (chunkId === 'VP8L') {\n        const b0 = view.getUint8(offset + 9);\n        const b1 = view.getUint8(offset + 10);\n        const b2 = view.getUint8(offset + 11);\n        const b3 = view.getUint8(offset + 12);\n        const width = 1 + ((b1 & 0x3f) << 8 | b0);\n        const height = 1 + ((b3 & 0xf) << 10 | b2 << 2 | (b1 & 0xc0) >> 6);\n        return [width, height];\n      }\n      offset += 8 + chunkByteLength + chunkByteLength % 2;\n    }\n    return null;\n  }\n  getChannels(_buffer) {\n    return 4;\n  }\n}\n/**\n * [`EXT_texture_webp`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_webp/)\n * enables WebP images for any material texture.\n *\n * WebP offers greatly reduced transmission size, but\n * [requires browser support](https://caniuse.com/webp). Like PNG and JPEG, a WebP image is\n * *fully decompressed* when uploaded to the GPU, which increases upload time and GPU memory cost.\n * For seamless uploads and minimal GPU memory cost, it is necessary to use a GPU texture format\n * like Basis Universal, with the `KHR_texture_basisu` extension.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the\n * {@link Document}, and affects the entire Document by allowing use of the `image/webp` MIME type\n * and passing WebP image data to the {@link Texture.setImage} method. Without the Extension, the\n * same MIME types and image data would yield an invalid glTF document, under the stricter core glTF\n * specification.\n *\n * Properties:\n * - N/A\n *\n * ### Example\n *\n * ```typescript\n * import { EXTTextureWebP } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const webpExtension = document.createExtension(EXTTextureWebP)\n * \t.setRequired(true);\n * document.createTexture('MyWebPTexture')\n * \t.setMimeType('image/webp')\n * \t.setImage(fs.readFileSync('my-texture.webp'));\n * ```\n *\n * WebP conversion is not done automatically when adding the extension as shown above — you must\n * convert the image data first, then pass the `.webp` payload to {@link Texture.setImage}.\n *\n * When the `EXT_texture_webp` extension is added to a file by glTF-Transform, the extension should\n * always be required. This tool does not support writing assets that \"fall back\" to optional PNG or\n * JPEG image data.\n */\nclass EXTTextureWebP extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = EXT_TEXTURE_WEBP;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.TEXTURE];\n  }\n  /** @hidden */\n  static register() {\n    ImageUtils.registerFormat('image/webp', new WEBPImageUtils());\n  }\n  /** @hidden */\n  preread(context) {\n    const textureDefs = context.jsonDoc.json.textures || [];\n    textureDefs.forEach(textureDef => {\n      if (textureDef.extensions && textureDef.extensions[EXT_TEXTURE_WEBP]) {\n        textureDef.source = textureDef.extensions[EXT_TEXTURE_WEBP].source;\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listTextures().forEach(texture => {\n      if (texture.getMimeType() === 'image/webp') {\n        const imageIndex = context.imageIndexMap.get(texture);\n        const textureDefs = jsonDoc.json.textures || [];\n        textureDefs.forEach(textureDef => {\n          if (textureDef.source === imageIndex) {\n            textureDef.extensions = textureDef.extensions || {};\n            textureDef.extensions[EXT_TEXTURE_WEBP] = {\n              source: textureDef.source\n            };\n            delete textureDef.source;\n          }\n        });\n      }\n    });\n    return this;\n  }\n}\nEXTTextureWebP.EXTENSION_NAME = EXT_TEXTURE_WEBP;\n\nlet decoderModule;\n// Initialized when decoder module loads.\nlet COMPONENT_ARRAY;\nlet DATA_TYPE;\nfunction decodeGeometry(decoder, data) {\n  const buffer = new decoderModule.DecoderBuffer();\n  try {\n    buffer.Init(data, data.length);\n    const geometryType = decoder.GetEncodedGeometryType(buffer);\n    if (geometryType !== decoderModule.TRIANGULAR_MESH) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Unknown geometry type.`);\n    }\n    const dracoMesh = new decoderModule.Mesh();\n    const status = decoder.DecodeBufferToMesh(buffer, dracoMesh);\n    if (!status.ok() || dracoMesh.ptr === 0) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Decoding failure.`);\n    }\n    return dracoMesh;\n  } finally {\n    decoderModule.destroy(buffer);\n  }\n}\nfunction decodeIndex(decoder, mesh) {\n  const numFaces = mesh.num_faces();\n  const numIndices = numFaces * 3;\n  let ptr;\n  let indices;\n  if (mesh.num_points() <= 65534) {\n    const byteLength = numIndices * Uint16Array.BYTES_PER_ELEMENT;\n    ptr = decoderModule._malloc(byteLength);\n    decoder.GetTrianglesUInt16Array(mesh, byteLength, ptr);\n    indices = new Uint16Array(decoderModule.HEAPU16.buffer, ptr, numIndices).slice();\n  } else {\n    const byteLength = numIndices * Uint32Array.BYTES_PER_ELEMENT;\n    ptr = decoderModule._malloc(byteLength);\n    decoder.GetTrianglesUInt32Array(mesh, byteLength, ptr);\n    indices = new Uint32Array(decoderModule.HEAPU32.buffer, ptr, numIndices).slice();\n  }\n  decoderModule._free(ptr);\n  return indices;\n}\nfunction decodeAttribute(decoder, mesh, attribute, accessorDef) {\n  const dataType = DATA_TYPE[accessorDef.componentType];\n  const ArrayCtor = COMPONENT_ARRAY[accessorDef.componentType];\n  const numComponents = attribute.num_components();\n  const numPoints = mesh.num_points();\n  const numValues = numPoints * numComponents;\n  const byteLength = numValues * ArrayCtor.BYTES_PER_ELEMENT;\n  const ptr = decoderModule._malloc(byteLength);\n  decoder.GetAttributeDataArrayForAllPoints(mesh, attribute, dataType, byteLength, ptr);\n  const array = new ArrayCtor(decoderModule.HEAPF32.buffer, ptr, numValues).slice();\n  decoderModule._free(ptr);\n  return array;\n}\nfunction initDecoderModule(_decoderModule) {\n  decoderModule = _decoderModule;\n  COMPONENT_ARRAY = {\n    [Accessor.ComponentType.FLOAT]: Float32Array,\n    [Accessor.ComponentType.UNSIGNED_INT]: Uint32Array,\n    [Accessor.ComponentType.UNSIGNED_SHORT]: Uint16Array,\n    [Accessor.ComponentType.UNSIGNED_BYTE]: Uint8Array,\n    [Accessor.ComponentType.SHORT]: Int16Array,\n    [Accessor.ComponentType.BYTE]: Int8Array\n  };\n  DATA_TYPE = {\n    [Accessor.ComponentType.FLOAT]: decoderModule.DT_FLOAT32,\n    [Accessor.ComponentType.UNSIGNED_INT]: decoderModule.DT_UINT32,\n    [Accessor.ComponentType.UNSIGNED_SHORT]: decoderModule.DT_UINT16,\n    [Accessor.ComponentType.UNSIGNED_BYTE]: decoderModule.DT_UINT8,\n    [Accessor.ComponentType.SHORT]: decoderModule.DT_INT16,\n    [Accessor.ComponentType.BYTE]: decoderModule.DT_INT8\n  };\n}\n\nlet encoderModule;\nvar EncoderMethod;\n(function (EncoderMethod) {\n  EncoderMethod[EncoderMethod[\"EDGEBREAKER\"] = 1] = \"EDGEBREAKER\";\n  EncoderMethod[EncoderMethod[\"SEQUENTIAL\"] = 0] = \"SEQUENTIAL\";\n})(EncoderMethod || (EncoderMethod = {}));\nvar AttributeEnum;\n(function (AttributeEnum) {\n  AttributeEnum[\"POSITION\"] = \"POSITION\";\n  AttributeEnum[\"NORMAL\"] = \"NORMAL\";\n  AttributeEnum[\"COLOR\"] = \"COLOR\";\n  AttributeEnum[\"TEX_COORD\"] = \"TEX_COORD\";\n  AttributeEnum[\"GENERIC\"] = \"GENERIC\";\n})(AttributeEnum || (AttributeEnum = {}));\nconst DEFAULT_QUANTIZATION_BITS = {\n  [AttributeEnum.POSITION]: 14,\n  [AttributeEnum.NORMAL]: 10,\n  [AttributeEnum.COLOR]: 8,\n  [AttributeEnum.TEX_COORD]: 12,\n  [AttributeEnum.GENERIC]: 12\n};\nconst DEFAULT_ENCODER_OPTIONS = {\n  decodeSpeed: 5,\n  encodeSpeed: 5,\n  method: EncoderMethod.EDGEBREAKER,\n  quantizationBits: DEFAULT_QUANTIZATION_BITS,\n  quantizationVolume: 'mesh'\n};\nfunction initEncoderModule(_encoderModule) {\n  encoderModule = _encoderModule;\n}\n/**\n * References:\n * - https://github.com/mrdoob/three.js/blob/dev/examples/js/exporters/DRACOExporter.js\n * - https://github.com/CesiumGS/gltf-pipeline/blob/master/lib/compressDracoMeshes.js\n */\nfunction encodeGeometry(prim, _options = DEFAULT_ENCODER_OPTIONS) {\n  const options = _extends({}, DEFAULT_ENCODER_OPTIONS, _options);\n  options.quantizationBits = _extends({}, DEFAULT_QUANTIZATION_BITS, _options.quantizationBits);\n  const builder = new encoderModule.MeshBuilder();\n  const mesh = new encoderModule.Mesh();\n  const encoder = new encoderModule.ExpertEncoder(mesh);\n  const attributeIDs = {};\n  const dracoBuffer = new encoderModule.DracoInt8Array();\n  const hasMorphTargets = prim.listTargets().length > 0;\n  let hasSparseAttributes = false;\n  for (const semantic of prim.listSemantics()) {\n    const attribute = prim.getAttribute(semantic);\n    if (attribute.getSparse()) {\n      hasSparseAttributes = true;\n      continue;\n    }\n    const attributeEnum = getAttributeEnum(semantic);\n    const attributeID = addAttribute(builder, attribute.getComponentType(), mesh, encoderModule[attributeEnum], attribute.getCount(), attribute.getElementSize(), attribute.getArray());\n    if (attributeID === -1) throw new Error(`Error compressing \"${semantic}\" attribute.`);\n    attributeIDs[semantic] = attributeID;\n    if (options.quantizationVolume === 'mesh' || semantic !== 'POSITION') {\n      encoder.SetAttributeQuantization(attributeID, options.quantizationBits[attributeEnum]);\n    } else if (typeof options.quantizationVolume === 'object') {\n      const {\n        quantizationVolume\n      } = options;\n      const range = Math.max(quantizationVolume.max[0] - quantizationVolume.min[0], quantizationVolume.max[1] - quantizationVolume.min[1], quantizationVolume.max[2] - quantizationVolume.min[2]);\n      encoder.SetAttributeExplicitQuantization(attributeID, options.quantizationBits[attributeEnum], attribute.getElementSize(), quantizationVolume.min, range);\n    } else {\n      throw new Error('Invalid quantization volume state.');\n    }\n  }\n  const indices = prim.getIndices();\n  if (!indices) throw new EncodingError('Primitive must have indices.');\n  builder.AddFacesToMesh(mesh, indices.getCount() / 3, indices.getArray());\n  encoder.SetSpeedOptions(options.encodeSpeed, options.decodeSpeed);\n  encoder.SetTrackEncodedProperties(true);\n  // TODO(cleanup): Use edgebreaker without deduplication if possible.\n  // See https://github.com/google/draco/issues/929.\n  if (options.method === EncoderMethod.SEQUENTIAL || hasMorphTargets || hasSparseAttributes) {\n    encoder.SetEncodingMethod(encoderModule.MESH_SEQUENTIAL_ENCODING);\n  } else {\n    encoder.SetEncodingMethod(encoderModule.MESH_EDGEBREAKER_ENCODING);\n  }\n  // Encode, preserving vertex order for primitives with morph targets and sparse accessors.\n  const byteLength = encoder.EncodeToDracoBuffer(!(hasMorphTargets || hasSparseAttributes), dracoBuffer);\n  if (byteLength <= 0) throw new EncodingError('Error applying Draco compression.');\n  const data = new Uint8Array(byteLength);\n  for (let i = 0; i < byteLength; ++i) {\n    data[i] = dracoBuffer.GetValue(i);\n  }\n  const numVertices = encoder.GetNumberOfEncodedPoints();\n  const numIndices = encoder.GetNumberOfEncodedFaces() * 3;\n  encoderModule.destroy(dracoBuffer);\n  encoderModule.destroy(mesh);\n  encoderModule.destroy(builder);\n  encoderModule.destroy(encoder);\n  return {\n    numVertices,\n    numIndices,\n    data,\n    attributeIDs\n  };\n}\nfunction getAttributeEnum(semantic) {\n  if (semantic === 'POSITION') {\n    return AttributeEnum.POSITION;\n  } else if (semantic === 'NORMAL') {\n    return AttributeEnum.NORMAL;\n  } else if (semantic.startsWith('COLOR_')) {\n    return AttributeEnum.COLOR;\n  } else if (semantic.startsWith('TEXCOORD_')) {\n    return AttributeEnum.TEX_COORD;\n  }\n  return AttributeEnum.GENERIC;\n}\nfunction addAttribute(builder, componentType, mesh, attribute, count, itemSize, array) {\n  switch (componentType) {\n    case Accessor.ComponentType.UNSIGNED_BYTE:\n      return builder.AddUInt8Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.BYTE:\n      return builder.AddInt8Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.UNSIGNED_SHORT:\n      return builder.AddUInt16Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.SHORT:\n      return builder.AddInt16Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.UNSIGNED_INT:\n      return builder.AddUInt32Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.FLOAT:\n      return builder.AddFloatAttribute(mesh, attribute, count, itemSize, array);\n    default:\n      throw new Error(`Unexpected component type, \"${componentType}\".`);\n  }\n}\nclass EncodingError extends Error {}\n\n/**\n * [`KHR_draco_mesh_compression`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_draco_mesh_compression/)\n * provides advanced compression for mesh geometry.\n *\n * For models where geometry is a significant factor (>1 MB), Draco can reduce filesize by ~95%\n * in many cases. When animation or textures are large, other complementary compression methods\n * should be used as well. For geometry <1MB, the size of the WASM decoder library may outweigh\n * size savings.\n *\n * Be aware that decompression happens before uploading to the GPU — this will add some latency to\n * the parsing process, and means that compressing geometry with  Draco does _not_ affect runtime\n * performance. To improve framerate, you'll need to simplify the geometry by reducing vertex count\n * or draw calls — not just compress it. Finally, be aware that Draco compression is lossy:\n * repeatedly compressing and decompressing a model in a pipeline will lose precision, so\n * compression should generally be the last stage of an art workflow, and uncompressed original\n * files should be kept.\n *\n * A decoder or encoder from the `draco3dgltf` npm module for Node.js (or\n * [elsewhere for web](https://stackoverflow.com/a/66978236/1314762)) is required for reading and writing,\n * and must be provided by the application.\n *\n * ### Encoding options\n *\n * Two compression methods are available: 'edgebreaker' and 'sequential'. The\n * edgebreaker method will give higher compression in general, but changes the\n * order of the model's vertices. To preserve index order, use sequential\n * compression. When a mesh uses morph targets, or a high decoding speed is\n * selected, sequential compression will automatically be chosen.\n *\n * Both speed options affect the encoder's choice of algorithms. For example, a\n * requirement for fast decoding may prevent the encoder from using the best\n * compression methods even if the encoding speed is set to 0. In general, the\n * faster of the two options limits the choice of features that can be used by the\n * encoder. Setting --decodeSpeed to be faster than the --encodeSpeed may allow\n * the encoder to choose the optimal method out of the available features for the\n * given --decodeSpeed.\n *\n * ### Example — Read\n *\n * To read glTF files using Draco compression, ensure that the extension\n * and a decoder are registered. Geometry is decompressed while reading.\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { KHRDracoMeshCompression } from '@gltf-transform/extensions';\n * import draco3d from 'draco3dgltf';\n *\n * const io = new NodeIO()\n * \t.registerExtensions([KHRDracoMeshCompression])\n * \t.registerDependencies({\n * \t\t'draco3d.decoder': await draco3d.createDecoderModule()\n * \t});\n *\n * // Read and decode.\n * const document = await io.read('compressed.glb');\n * ```\n *\n * ### Example — Write\n *\n * The simplest way to apply Draco compression is with the {@link draco}\n * transform. The extension and an encoder must be registered.\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { KHRDracoMeshCompression } from '@gltf-transform/extensions';\n * import { draco } from '@gltf-transform/functions';\n * import draco3d from 'draco3dgltf';\n *\n * const io = new NodeIO()\n * \t.registerExtensions([KHRDracoMeshCompression])\n * \t.registerDependencies({\n * \t\t'draco3d.encoder': await draco3d.createEncoderModule()\n * \t});\n *\n * await document.transform(\n *   draco({method: 'edgebreaker'})\n * );\n *\n * await io.write('compressed.glb', document);\n * ```\n *\n * ### Example\n *\n * Equivalently, the KHRDracoMeshCompression extension can be added manually to a document.\n *\n * ```typescript\n * import { KHRDracoMeshCompression } from '@gltf-transform/extensions';\n *\n * document.createExtension(KHRDracoMeshCompression)\n * \t.setRequired(true)\n * \t.setEncoderOptions({\n * \t\tmethod: KHRDracoMeshCompression.EncoderMethod.EDGEBREAKER,\n * \t\tencodeSpeed: 5,\n * \t\tdecodeSpeed: 5,\n * \t});\n *\n * await io.write('compressed.glb', document);\n * ```\n *\n * In either case, Compression is deferred until generating output with an\n * I/O class.\n */\nclass KHRDracoMeshCompression extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_DRACO_MESH_COMPRESSION;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.PRIMITIVE];\n    /** @hidden */\n    this.prewriteTypes = [PropertyType.ACCESSOR];\n    /** @hidden */\n    this.readDependencies = ['draco3d.decoder'];\n    /** @hidden */\n    this.writeDependencies = ['draco3d.encoder'];\n    this._decoderModule = null;\n    this._encoderModule = null;\n    this._encoderOptions = {};\n  }\n  /** @hidden */\n  install(key, dependency) {\n    if (key === 'draco3d.decoder') {\n      this._decoderModule = dependency;\n      initDecoderModule(this._decoderModule);\n    }\n    if (key === 'draco3d.encoder') {\n      this._encoderModule = dependency;\n      initEncoderModule(this._encoderModule);\n    }\n    return this;\n  }\n  /**\n   * Sets Draco compression options. Compression does not take effect until the Document is\n   * written with an I/O class.\n   *\n   * Defaults:\n   * ```\n   * decodeSpeed?: number = 5;\n   * encodeSpeed?: number = 5;\n   * method?: EncoderMethod = EncoderMethod.EDGEBREAKER;\n   * quantizationBits?: {[ATTRIBUTE_NAME]: bits};\n   * quantizationVolume?: 'mesh' | 'scene' | bbox = 'mesh';\n   * ```\n   */\n  setEncoderOptions(options) {\n    this._encoderOptions = options;\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    if (!this._decoderModule) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Please install extension dependency, \"draco3d.decoder\".`);\n    }\n    const logger = this.document.getLogger();\n    const jsonDoc = context.jsonDoc;\n    const dracoMeshes = new Map();\n    try {\n      const meshDefs = jsonDoc.json.meshes || [];\n      for (const meshDef of meshDefs) {\n        for (const primDef of meshDef.primitives) {\n          if (!primDef.extensions || !primDef.extensions[KHR_DRACO_MESH_COMPRESSION]) continue;\n          const dracoDef = primDef.extensions[KHR_DRACO_MESH_COMPRESSION];\n          let [decoder, dracoMesh] = dracoMeshes.get(dracoDef.bufferView) || [];\n          if (!dracoMesh || !decoder) {\n            const bufferViewDef = jsonDoc.json.bufferViews[dracoDef.bufferView];\n            const bufferDef = jsonDoc.json.buffers[bufferViewDef.buffer];\n            // TODO(cleanup): Should be encapsulated in writer-context.ts.\n            const resource = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n            const byteOffset = bufferViewDef.byteOffset || 0;\n            const byteLength = bufferViewDef.byteLength;\n            const compressedData = BufferUtils.toView(resource, byteOffset, byteLength);\n            decoder = new this._decoderModule.Decoder();\n            dracoMesh = decodeGeometry(decoder, compressedData);\n            dracoMeshes.set(dracoDef.bufferView, [decoder, dracoMesh]);\n            logger.debug(`[${KHR_DRACO_MESH_COMPRESSION}] Decompressed ${compressedData.byteLength} bytes.`);\n          }\n          // Attributes.\n          for (const semantic in dracoDef.attributes) {\n            const accessorDef = context.jsonDoc.json.accessors[primDef.attributes[semantic]];\n            const dracoAttribute = decoder.GetAttributeByUniqueId(dracoMesh, dracoDef.attributes[semantic]);\n            const attributeArray = decodeAttribute(decoder, dracoMesh, dracoAttribute, accessorDef);\n            context.accessors[primDef.attributes[semantic]].setArray(attributeArray);\n          }\n          // Indices. Optional, see https://github.com/google/draco/issues/720.\n          if (primDef.indices !== undefined) {\n            context.accessors[primDef.indices].setArray(decodeIndex(decoder, dracoMesh));\n          }\n        }\n      }\n    } finally {\n      for (const [decoder, dracoMesh] of Array.from(dracoMeshes.values())) {\n        this._decoderModule.destroy(decoder);\n        this._decoderModule.destroy(dracoMesh);\n      }\n    }\n    return this;\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  prewrite(context, _propertyType) {\n    if (!this._encoderModule) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Please install extension dependency, \"draco3d.encoder\".`);\n    }\n    const logger = this.document.getLogger();\n    logger.debug(`[${KHR_DRACO_MESH_COMPRESSION}] Compression options: ${JSON.stringify(this._encoderOptions)}`);\n    const primitiveHashMap = listDracoPrimitives(this.document);\n    const primitiveEncodingMap = new Map();\n    let quantizationVolume = 'mesh';\n    if (this._encoderOptions.quantizationVolume === 'scene') {\n      if (this.document.getRoot().listScenes().length !== 1) {\n        logger.warn(`[${KHR_DRACO_MESH_COMPRESSION}]: quantizationVolume=scene requires exactly 1 scene.`);\n      } else {\n        quantizationVolume = getBounds(this.document.getRoot().listScenes().pop());\n      }\n    }\n    for (const prim of Array.from(primitiveHashMap.keys())) {\n      const primHash = primitiveHashMap.get(prim);\n      if (!primHash) throw new Error('Unexpected primitive.');\n      // Reuse an existing EncodedPrimitive, if possible.\n      if (primitiveEncodingMap.has(primHash)) {\n        primitiveEncodingMap.set(primHash, primitiveEncodingMap.get(primHash));\n        continue;\n      }\n      const indices = prim.getIndices(); // Condition for listDracoPrimitives().\n      const accessorDefs = context.jsonDoc.json.accessors;\n      // Create a new EncodedPrimitive.\n      let encodedPrim;\n      try {\n        encodedPrim = encodeGeometry(prim, _extends({}, this._encoderOptions, {\n          quantizationVolume\n        }));\n      } catch (e) {\n        if (e instanceof EncodingError) {\n          logger.warn(`[${KHR_DRACO_MESH_COMPRESSION}]: ${e.message} Skipping primitive compression.`);\n          continue;\n        }\n        throw e;\n      }\n      primitiveEncodingMap.set(primHash, encodedPrim);\n      // Create indices definition, update count.\n      const indicesDef = context.createAccessorDef(indices);\n      indicesDef.count = encodedPrim.numIndices;\n      context.accessorIndexMap.set(indices, accessorDefs.length);\n      accessorDefs.push(indicesDef);\n      // In rare cases Draco increases vertex count, requiring a larger index component type.\n      // https://github.com/donmccurdy/glTF-Transform/issues/1370\n      if (encodedPrim.numVertices > 65534 && Accessor.getComponentSize(indicesDef.componentType) <= 2) {\n        indicesDef.componentType = Accessor.ComponentType.UNSIGNED_INT;\n      } else if (encodedPrim.numVertices > 254 && Accessor.getComponentSize(indicesDef.componentType) <= 1) {\n        indicesDef.componentType = Accessor.ComponentType.UNSIGNED_SHORT;\n      }\n      // Create attribute definitions, update count.\n      for (const semantic of prim.listSemantics()) {\n        const attribute = prim.getAttribute(semantic);\n        if (encodedPrim.attributeIDs[semantic] === undefined) continue; // sparse\n        const attributeDef = context.createAccessorDef(attribute);\n        attributeDef.count = encodedPrim.numVertices;\n        context.accessorIndexMap.set(attribute, accessorDefs.length);\n        accessorDefs.push(attributeDef);\n      }\n      // Map compressed buffer view to a Buffer.\n      const buffer = prim.getAttribute('POSITION').getBuffer() || this.document.getRoot().listBuffers()[0];\n      if (!context.otherBufferViews.has(buffer)) context.otherBufferViews.set(buffer, []);\n      context.otherBufferViews.get(buffer).push(encodedPrim.data);\n    }\n    logger.debug(`[${KHR_DRACO_MESH_COMPRESSION}] Compressed ${primitiveHashMap.size} primitives.`);\n    context.extensionData[KHR_DRACO_MESH_COMPRESSION] = {\n      primitiveHashMap,\n      primitiveEncodingMap\n    };\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const dracoContext = context.extensionData[KHR_DRACO_MESH_COMPRESSION];\n    for (const mesh of this.document.getRoot().listMeshes()) {\n      const meshDef = context.jsonDoc.json.meshes[context.meshIndexMap.get(mesh)];\n      for (let i = 0; i < mesh.listPrimitives().length; i++) {\n        const prim = mesh.listPrimitives()[i];\n        const primDef = meshDef.primitives[i];\n        const primHash = dracoContext.primitiveHashMap.get(prim);\n        if (!primHash) continue;\n        const encodedPrim = dracoContext.primitiveEncodingMap.get(primHash);\n        if (!encodedPrim) continue;\n        primDef.extensions = primDef.extensions || {};\n        primDef.extensions[KHR_DRACO_MESH_COMPRESSION] = {\n          bufferView: context.otherBufferViewsIndexMap.get(encodedPrim.data),\n          attributes: encodedPrim.attributeIDs\n        };\n      }\n    }\n    // Omit the extension if nothing was compressed.\n    if (!dracoContext.primitiveHashMap.size) {\n      const json = context.jsonDoc.json;\n      json.extensionsUsed = (json.extensionsUsed || []).filter(name => name !== KHR_DRACO_MESH_COMPRESSION);\n      json.extensionsRequired = (json.extensionsRequired || []).filter(name => name !== KHR_DRACO_MESH_COMPRESSION);\n    }\n    return this;\n  }\n}\n/**\n * Returns a list of Primitives compatible with Draco compression. If any required preconditions\n * fail, and would break assumptions required for compression, this function will throw an error.\n */\nKHRDracoMeshCompression.EXTENSION_NAME = KHR_DRACO_MESH_COMPRESSION;\n/**\n * Compression method. `EncoderMethod.EDGEBREAKER` usually provides a higher compression ratio,\n * while `EncoderMethod.SEQUENTIAL` better preserves original vertex order.\n */\nKHRDracoMeshCompression.EncoderMethod = EncoderMethod;\nfunction listDracoPrimitives(doc) {\n  const logger = doc.getLogger();\n  const included = new Set();\n  const excluded = new Set();\n  let nonIndexed = 0;\n  let nonTriangles = 0;\n  // Support compressing only indexed, mode=TRIANGLES primitives.\n  for (const mesh of doc.getRoot().listMeshes()) {\n    for (const prim of mesh.listPrimitives()) {\n      if (!prim.getIndices()) {\n        excluded.add(prim);\n        nonIndexed++;\n      } else if (prim.getMode() !== Primitive.Mode.TRIANGLES) {\n        excluded.add(prim);\n        nonTriangles++;\n      } else {\n        included.add(prim);\n      }\n    }\n  }\n  if (nonIndexed > 0) {\n    logger.warn(`[${KHR_DRACO_MESH_COMPRESSION}] Skipping Draco compression of ${nonIndexed} non-indexed primitives.`);\n  }\n  if (nonTriangles > 0) {\n    logger.warn(`[${KHR_DRACO_MESH_COMPRESSION}] Skipping Draco compression of ${nonTriangles} non-TRIANGLES primitives.`);\n  }\n  // Create an Accessor->index mapping.\n  const accessors = doc.getRoot().listAccessors();\n  const accessorIndices = new Map();\n  for (let i = 0; i < accessors.length; i++) accessorIndices.set(accessors[i], i);\n  // For each compressed Primitive, create a hash key identifying its accessors. Map each\n  // compressed Primitive and Accessor to this hash key.\n  const includedAccessors = new Map();\n  const includedHashKeys = new Set();\n  const primToHashKey = new Map();\n  for (const prim of Array.from(included)) {\n    let hashKey = createHashKey(prim, accessorIndices);\n    // If accessors of an identical primitive have already been checked, we're done.\n    if (includedHashKeys.has(hashKey)) {\n      primToHashKey.set(prim, hashKey);\n      continue;\n    }\n    // If any accessors are already in use, but the same hashKey hasn't been written, then we\n    // need to create copies of these accessors for the current encoded primitive. We can't\n    // reuse the same compressed accessor for two encoded primitives, because Draco might\n    // change the vertex count, change the vertex order, or cause other conflicts.\n    if (includedAccessors.has(prim.getIndices())) {\n      const indices = prim.getIndices(); // Condition for 'included' list.\n      const dstIndices = indices.clone();\n      accessorIndices.set(dstIndices, doc.getRoot().listAccessors().length - 1);\n      prim.swap(indices, dstIndices); // TODO(cleanup): I/O should not modify Document.\n    }\n    for (const attribute of prim.listAttributes()) {\n      if (includedAccessors.has(attribute)) {\n        const dstAttribute = attribute.clone();\n        accessorIndices.set(dstAttribute, doc.getRoot().listAccessors().length - 1);\n        prim.swap(attribute, dstAttribute); // TODO(cleanup): I/O should not modify Document.\n      }\n    }\n    // With conflicts resolved, compute the hash key again.\n    hashKey = createHashKey(prim, accessorIndices);\n    // Commit the primitive and its accessors to the hash key.\n    includedHashKeys.add(hashKey);\n    primToHashKey.set(prim, hashKey);\n    includedAccessors.set(prim.getIndices(), hashKey);\n    for (const attribute of prim.listAttributes()) {\n      includedAccessors.set(attribute, hashKey);\n    }\n  }\n  // For each compressed Accessor, ensure that it isn't used except by a Primitive.\n  for (const accessor of Array.from(includedAccessors.keys())) {\n    const parentTypes = new Set(accessor.listParents().map(prop => prop.propertyType));\n    if (parentTypes.size !== 2 || !parentTypes.has(PropertyType.PRIMITIVE) || !parentTypes.has(PropertyType.ROOT)) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Compressed accessors must only be used as indices or vertex attributes.`);\n    }\n  }\n  // For each compressed Primitive, ensure that Accessors are mapped only to the same hash key.\n  for (const prim of Array.from(included)) {\n    const hashKey = primToHashKey.get(prim);\n    const indices = prim.getIndices(); // Condition for 'included' list.\n    if (includedAccessors.get(indices) !== hashKey || prim.listAttributes().some(attr => includedAccessors.get(attr) !== hashKey)) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Draco primitives must share all, or no, accessors.`);\n    }\n  }\n  // For each excluded Primitive, ensure that no Accessors are compressed.\n  for (const prim of Array.from(excluded)) {\n    const indices = prim.getIndices(); // Condition for 'included' list.\n    if (includedAccessors.has(indices) || prim.listAttributes().some(attr => includedAccessors.has(attr))) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Accessor cannot be shared by compressed and uncompressed primitives.`);\n    }\n  }\n  return primToHashKey;\n}\nfunction createHashKey(prim, indexMap) {\n  const hashElements = [];\n  const indices = prim.getIndices(); // Condition for 'included' list.\n  hashElements.push(indexMap.get(indices));\n  for (const attribute of prim.listAttributes()) {\n    hashElements.push(indexMap.get(attribute));\n  }\n  return hashElements.sort().join('|');\n}\n\n/**\n * Defines a light attached to a {@link Node}. See {@link KHRLightsPunctual}.\n */\nclass Light extends ExtensionProperty {\n  /**********************************************************************************************\n   * INSTANCE.\n   */\n  init() {\n    this.extensionName = KHR_LIGHTS_PUNCTUAL;\n    this.propertyType = 'Light';\n    this.parentTypes = [PropertyType.NODE];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      color: [1, 1, 1],\n      intensity: 1,\n      type: Light.Type.POINT,\n      range: null,\n      innerConeAngle: 0,\n      outerConeAngle: Math.PI / 4\n    });\n  }\n  /**********************************************************************************************\n   * COLOR.\n   */\n  /** Light color; Linear-sRGB components. */\n  getColor() {\n    return this.get('color');\n  }\n  /** Light color; Linear-sRGB components. */\n  setColor(color) {\n    return this.set('color', color);\n  }\n  /**********************************************************************************************\n   * INTENSITY.\n   */\n  /**\n   * Brightness of light. Units depend on the type of light: point and spot lights use luminous\n   * intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n   */\n  getIntensity() {\n    return this.get('intensity');\n  }\n  /**\n   * Brightness of light. Units depend on the type of light: point and spot lights use luminous\n   * intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n   */\n  setIntensity(intensity) {\n    return this.set('intensity', intensity);\n  }\n  /**********************************************************************************************\n   * TYPE.\n   */\n  /** Type. */\n  getType() {\n    return this.get('type');\n  }\n  /** Type. */\n  setType(type) {\n    return this.set('type', type);\n  }\n  /**********************************************************************************************\n   * RANGE.\n   */\n  /**\n   * Hint defining a distance cutoff at which the light's intensity may be considered to have\n   * reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range\n   * is assumed to be infinite.\n   */\n  getRange() {\n    return this.get('range');\n  }\n  /**\n   * Hint defining a distance cutoff at which the light's intensity may be considered to have\n   * reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range\n   * is assumed to be infinite.\n   */\n  setRange(range) {\n    return this.set('range', range);\n  }\n  /**********************************************************************************************\n   * SPOT LIGHT PROPERTIES\n   */\n  /**\n   * Angle, in radians, from centre of spotlight where falloff begins. Must be >= 0 and\n   * < outerConeAngle.\n   */\n  getInnerConeAngle() {\n    return this.get('innerConeAngle');\n  }\n  /**\n   * Angle, in radians, from centre of spotlight where falloff begins. Must be >= 0 and\n   * < outerConeAngle.\n   */\n  setInnerConeAngle(angle) {\n    return this.set('innerConeAngle', angle);\n  }\n  /**\n   * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and\n   * <= PI / 2.0.\n   */\n  getOuterConeAngle() {\n    return this.get('outerConeAngle');\n  }\n  /**\n   * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and\n   * <= PI / 2.0.\n   */\n  setOuterConeAngle(angle) {\n    return this.set('outerConeAngle', angle);\n  }\n}\nLight.EXTENSION_NAME = KHR_LIGHTS_PUNCTUAL;\n/**********************************************************************************************\n * CONSTANTS.\n */\nLight.Type = {\n  POINT: 'point',\n  SPOT: 'spot',\n  DIRECTIONAL: 'directional'\n};\n\n/**\n * [`KHR_lights_punctual`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_lights_punctual/) defines three \"punctual\" light types: directional, point and\n * spot.\n *\n * Punctual lights are parameterized, infinitely small points that emit light in\n * well-defined directions and intensities. Lights are referenced by nodes and inherit the transform\n * of that node.\n *\n * Properties:\n * - {@link Light}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRLightsPunctual, Light, LightType } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const lightsExtension = document.createExtension(KHRLightsPunctual);\n *\n * // Create a Light property.\n * const light = lightsExtension.createLight()\n *\t.setType(LightType.POINT)\n *\t.setIntensity(2.0)\n *\t.setColor([1.0, 0.0, 0.0]);\n *\n * // Attach the property to a Material.\n * node.setExtension('KHR_lights_punctual', light);\n * ```\n */\nclass KHRLightsPunctual extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_LIGHTS_PUNCTUAL;\n  }\n  /** Creates a new punctual Light property for use on a {@link Node}. */\n  createLight(name = '') {\n    return new Light(this.document.getGraph(), name);\n  }\n  /** @hidden */\n  read(context) {\n    const jsonDoc = context.jsonDoc;\n    if (!jsonDoc.json.extensions || !jsonDoc.json.extensions[KHR_LIGHTS_PUNCTUAL]) return this;\n    const rootDef = jsonDoc.json.extensions[KHR_LIGHTS_PUNCTUAL];\n    const lightDefs = rootDef.lights || [];\n    const lights = lightDefs.map(lightDef => {\n      var _lightDef$spot, _lightDef$spot2;\n      const light = this.createLight().setName(lightDef.name || '').setType(lightDef.type);\n      if (lightDef.color !== undefined) light.setColor(lightDef.color);\n      if (lightDef.intensity !== undefined) light.setIntensity(lightDef.intensity);\n      if (lightDef.range !== undefined) light.setRange(lightDef.range);\n      if (((_lightDef$spot = lightDef.spot) == null ? void 0 : _lightDef$spot.innerConeAngle) !== undefined) {\n        light.setInnerConeAngle(lightDef.spot.innerConeAngle);\n      }\n      if (((_lightDef$spot2 = lightDef.spot) == null ? void 0 : _lightDef$spot2.outerConeAngle) !== undefined) {\n        light.setOuterConeAngle(lightDef.spot.outerConeAngle);\n      }\n      return light;\n    });\n    jsonDoc.json.nodes.forEach((nodeDef, nodeIndex) => {\n      if (!nodeDef.extensions || !nodeDef.extensions[KHR_LIGHTS_PUNCTUAL]) return;\n      const lightNodeDef = nodeDef.extensions[KHR_LIGHTS_PUNCTUAL];\n      context.nodes[nodeIndex].setExtension(KHR_LIGHTS_PUNCTUAL, lights[lightNodeDef.light]);\n    });\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    if (this.properties.size === 0) return this;\n    const lightDefs = [];\n    const lightIndexMap = new Map();\n    for (const property of this.properties) {\n      const light = property;\n      const lightDef = {\n        type: light.getType()\n      };\n      if (!MathUtils.eq(light.getColor(), [1, 1, 1])) lightDef.color = light.getColor();\n      if (light.getIntensity() !== 1) lightDef.intensity = light.getIntensity();\n      if (light.getRange() != null) lightDef.range = light.getRange();\n      if (light.getName()) lightDef.name = light.getName();\n      if (light.getType() === Light.Type.SPOT) {\n        lightDef.spot = {\n          innerConeAngle: light.getInnerConeAngle(),\n          outerConeAngle: light.getOuterConeAngle()\n        };\n      }\n      lightDefs.push(lightDef);\n      lightIndexMap.set(light, lightDefs.length - 1);\n    }\n    this.document.getRoot().listNodes().forEach(node => {\n      const light = node.getExtension(KHR_LIGHTS_PUNCTUAL);\n      if (light) {\n        const nodeIndex = context.nodeIndexMap.get(node);\n        const nodeDef = jsonDoc.json.nodes[nodeIndex];\n        nodeDef.extensions = nodeDef.extensions || {};\n        nodeDef.extensions[KHR_LIGHTS_PUNCTUAL] = {\n          light: lightIndexMap.get(light)\n        };\n      }\n    });\n    jsonDoc.json.extensions = jsonDoc.json.extensions || {};\n    jsonDoc.json.extensions[KHR_LIGHTS_PUNCTUAL] = {\n      lights: lightDefs\n    };\n    return this;\n  }\n}\nKHRLightsPunctual.EXTENSION_NAME = KHR_LIGHTS_PUNCTUAL;\n\nconst {\n  R: R$7,\n  G: G$7,\n  B: B$5\n} = TextureChannel;\n/**\n * Defines anisotropy (directionally-dependent reflections) on a PBR {@link Material}. See\n * {@link KHRMaterialsAnisotropy}.\n */\nclass Anisotropy extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_ANISOTROPY;\n    this.propertyType = 'Anisotropy';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      anisotropyStrength: 0.0,\n      anisotropyRotation: 0.0,\n      anisotropyTexture: null,\n      anisotropyTextureInfo: new TextureInfo(this.graph, 'anisotropyTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Anisotropy strength.\n   */\n  /** Anisotropy strength. */\n  getAnisotropyStrength() {\n    return this.get('anisotropyStrength');\n  }\n  /** Anisotropy strength. */\n  setAnisotropyStrength(strength) {\n    return this.set('anisotropyStrength', strength);\n  }\n  /**********************************************************************************************\n   * Anisotropy rotation.\n   */\n  /** Anisotropy rotation; linear multiplier. */\n  getAnisotropyRotation() {\n    return this.get('anisotropyRotation');\n  }\n  /** Anisotropy rotation; linear multiplier. */\n  setAnisotropyRotation(rotation) {\n    return this.set('anisotropyRotation', rotation);\n  }\n  /**********************************************************************************************\n   * Anisotropy texture.\n   */\n  /**\n   * Anisotropy texture. Red and green channels represent the anisotropy\n   * direction in [-1, 1] tangent, bitangent space, to be rotated by\n   * anisotropyRotation. The blue channel contains strength as [0, 1] to be\n   * multiplied by anisotropyStrength.\n   */\n  getAnisotropyTexture() {\n    return this.getRef('anisotropyTexture');\n  }\n  /**\n   * Settings affecting the material's use of its anisotropy texture. If no\n   * texture is attached, {@link TextureInfo} is `null`.\n   */\n  getAnisotropyTextureInfo() {\n    return this.getRef('anisotropyTexture') ? this.getRef('anisotropyTextureInfo') : null;\n  }\n  /** Anisotropy texture. See {@link Anisotropy.getAnisotropyTexture getAnisotropyTexture}. */\n  setAnisotropyTexture(texture) {\n    return this.setRef('anisotropyTexture', texture, {\n      channels: R$7 | G$7 | B$5\n    });\n  }\n}\nAnisotropy.EXTENSION_NAME = KHR_MATERIALS_ANISOTROPY;\n\n/**\n * [`KHR_materials_anisotropy`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_anisotropy/)\n * defines anisotropy (directionally-dependent reflections) on a PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-anisotropy.jpg)\n *\n * > _**Figure:** Effect of each color channel in the anisotropyTexture. Left\n * > to right: the full anisotropy texture, filling the red channel with black,\n * > filling the green channel with black, filling the blue channel with black.\n * > Source: [Khronos Group & Wayfair](https://github.com/KhronosGroup/glTF-Sample-Assets/tree/main/Models/AnisotropyBarnLamp)._\n *\n * This extension defines the anisotropic property of a material as observable with brushed metals\n * for instance. An asymmetric specular lobe model is introduced to allow for such phenomena. The\n * visually distinct feature of that lobe is the elongated appearance of the specular reflection.\n * For a single punctual light source, the specular reflection will eventually degenerate into a\n * zero width line in the limit, that is where the material is fully anisotropic, as opposed to be\n * fully isotropic in which case the specular reflection is radially symmetric.\n *\n * Properties:\n * - {@link Anisotropy}\n *\n * ### Example\n *\n * The `KHRMaterialsAnisotropy` class provides a single {@link ExtensionProperty} type, `Anisotropy`,\n * which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsAnisotropy, Anisotropy } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const anisotropyExtension = document.createExtension(KHRMaterialsAnisotropy);\n *\n * // Create an Anisotropy property.\n * const anisotropy = anisotropyExtension.createAnisotropy()\n * \t.setAnisotropyStrength(1.0)\n * \t.setAnisotropyRotation(Math.PI / 4);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_anisotropy', anisotropy);\n * ```\n */\nclass KHRMaterialsAnisotropy extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_ANISOTROPY;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Anisotropy property for use on a {@link Material}. */\n  createAnisotropy() {\n    return new Anisotropy(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_ANISOTROPY]) {\n        const anisotropy = this.createAnisotropy();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_ANISOTROPY, anisotropy);\n        const anisotropyDef = materialDef.extensions[KHR_MATERIALS_ANISOTROPY];\n        // Factors.\n        if (anisotropyDef.anisotropyStrength !== undefined) {\n          anisotropy.setAnisotropyStrength(anisotropyDef.anisotropyStrength);\n        }\n        if (anisotropyDef.anisotropyRotation !== undefined) {\n          anisotropy.setAnisotropyRotation(anisotropyDef.anisotropyRotation);\n        }\n        // Textures.\n        if (anisotropyDef.anisotropyTexture !== undefined) {\n          const textureInfoDef = anisotropyDef.anisotropyTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          anisotropy.setAnisotropyTexture(texture);\n          context.setTextureInfo(anisotropy.getAnisotropyTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const anisotropy = material.getExtension(KHR_MATERIALS_ANISOTROPY);\n      if (anisotropy) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const anisotropyDef = materialDef.extensions[KHR_MATERIALS_ANISOTROPY] = {};\n        if (anisotropy.getAnisotropyStrength() > 0) {\n          anisotropyDef.anisotropyStrength = anisotropy.getAnisotropyStrength();\n        }\n        if (anisotropy.getAnisotropyRotation() !== 0) {\n          anisotropyDef.anisotropyRotation = anisotropy.getAnisotropyRotation();\n        }\n        // Textures.\n        if (anisotropy.getAnisotropyTexture()) {\n          const texture = anisotropy.getAnisotropyTexture();\n          const textureInfo = anisotropy.getAnisotropyTextureInfo();\n          anisotropyDef.anisotropyTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsAnisotropy.EXTENSION_NAME = KHR_MATERIALS_ANISOTROPY;\n\nconst {\n  R: R$6,\n  G: G$6,\n  B: B$4\n} = TextureChannel;\n/**\n * Defines clear coat for a PBR material. See {@link KHRMaterialsClearcoat}.\n */\nclass Clearcoat extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_CLEARCOAT;\n    this.propertyType = 'Clearcoat';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      clearcoatFactor: 0,\n      clearcoatTexture: null,\n      clearcoatTextureInfo: new TextureInfo(this.graph, 'clearcoatTextureInfo'),\n      clearcoatRoughnessFactor: 0,\n      clearcoatRoughnessTexture: null,\n      clearcoatRoughnessTextureInfo: new TextureInfo(this.graph, 'clearcoatRoughnessTextureInfo'),\n      clearcoatNormalScale: 1,\n      clearcoatNormalTexture: null,\n      clearcoatNormalTextureInfo: new TextureInfo(this.graph, 'clearcoatNormalTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Clearcoat.\n   */\n  /** Clearcoat; linear multiplier. See {@link Clearcoat.getClearcoatTexture getClearcoatTexture}. */\n  getClearcoatFactor() {\n    return this.get('clearcoatFactor');\n  }\n  /** Clearcoat; linear multiplier. See {@link Clearcoat.getClearcoatTexture getClearcoatTexture}. */\n  setClearcoatFactor(factor) {\n    return this.set('clearcoatFactor', factor);\n  }\n  /**\n   * Clearcoat texture; linear multiplier. The `r` channel of this texture specifies an amount\n   * [0-1] of coating over the surface of the material, which may have its own roughness and\n   * normal map properties.\n   */\n  getClearcoatTexture() {\n    return this.getRef('clearcoatTexture');\n  }\n  /**\n   * Settings affecting the material's use of its clearcoat texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getClearcoatTextureInfo() {\n    return this.getRef('clearcoatTexture') ? this.getRef('clearcoatTextureInfo') : null;\n  }\n  /** Sets clearcoat texture. See {@link Clearcoat.getClearcoatTexture getClearcoatTexture}. */\n  setClearcoatTexture(texture) {\n    return this.setRef('clearcoatTexture', texture, {\n      channels: R$6\n    });\n  }\n  /**********************************************************************************************\n   * Clearcoat roughness.\n   */\n  /**\n   * Clearcoat roughness; linear multiplier.\n   * See {@link Clearcoat.getClearcoatRoughnessTexture getClearcoatRoughnessTexture}.\n   */\n  getClearcoatRoughnessFactor() {\n    return this.get('clearcoatRoughnessFactor');\n  }\n  /**\n   * Clearcoat roughness; linear multiplier.\n   * See {@link Clearcoat.getClearcoatRoughnessTexture getClearcoatRoughnessTexture}.\n   */\n  setClearcoatRoughnessFactor(factor) {\n    return this.set('clearcoatRoughnessFactor', factor);\n  }\n  /**\n   * Clearcoat roughness texture; linear multiplier. The `g` channel of this texture specifies\n   * roughness, independent of the base layer's roughness.\n   */\n  getClearcoatRoughnessTexture() {\n    return this.getRef('clearcoatRoughnessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its clearcoat roughness texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getClearcoatRoughnessTextureInfo() {\n    return this.getRef('clearcoatRoughnessTexture') ? this.getRef('clearcoatRoughnessTextureInfo') : null;\n  }\n  /**\n   * Sets clearcoat roughness texture.\n   * See {@link Clearcoat.getClearcoatRoughnessTexture getClearcoatRoughnessTexture}.\n   */\n  setClearcoatRoughnessTexture(texture) {\n    return this.setRef('clearcoatRoughnessTexture', texture, {\n      channels: G$6\n    });\n  }\n  /**********************************************************************************************\n   * Clearcoat normals.\n   */\n  /** Clearcoat normal scale. See {@link Clearcoat.getClearcoatNormalTexture getClearcoatNormalTexture}. */\n  getClearcoatNormalScale() {\n    return this.get('clearcoatNormalScale');\n  }\n  /** Clearcoat normal scale. See {@link Clearcoat.getClearcoatNormalTexture getClearcoatNormalTexture}. */\n  setClearcoatNormalScale(scale) {\n    return this.set('clearcoatNormalScale', scale);\n  }\n  /**\n   * Clearcoat normal map. Independent of the material base layer normal map.\n   */\n  getClearcoatNormalTexture() {\n    return this.getRef('clearcoatNormalTexture');\n  }\n  /**\n   * Settings affecting the material's use of its clearcoat normal texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getClearcoatNormalTextureInfo() {\n    return this.getRef('clearcoatNormalTexture') ? this.getRef('clearcoatNormalTextureInfo') : null;\n  }\n  /** Sets clearcoat normal texture. See {@link Clearcoat.getClearcoatNormalTexture getClearcoatNormalTexture}. */\n  setClearcoatNormalTexture(texture) {\n    return this.setRef('clearcoatNormalTexture', texture, {\n      channels: R$6 | G$6 | B$4\n    });\n  }\n}\nClearcoat.EXTENSION_NAME = KHR_MATERIALS_CLEARCOAT;\n\n/**\n * [KHR_materials_clearcoat](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_clearcoat/)\n * defines a clear coating on a glTF PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-clearcoat.png)\n *\n * > _**Figure:** Comparison of a carbon-fiber material without clearcoat (left) and with clearcoat\n * > (right). Source: [Filament](https://google.github.io/filament/Materials.html)._\n *\n * A clear coat is a common technique used in Physically-Based\n * Rendering for a protective layer applied to a base material.\n * Commonly used to represent car paint, carbon fiber, or thin lacquers.\n *\n * Properties:\n * - {@link Clearcoat}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsClearcoat, Clearcoat } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const clearcoatExtension = document.createExtension(KHRMaterialsClearcoat);\n *\n * // Create Clearcoat property.\n * const clearcoat = clearcoatExtension.createClearcoat()\n *\t.setClearcoatFactor(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_clearcoat', clearcoat);\n * ```\n */\nclass KHRMaterialsClearcoat extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_CLEARCOAT;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Clearcoat property for use on a {@link Material}. */\n  createClearcoat() {\n    return new Clearcoat(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_CLEARCOAT]) {\n        const clearcoat = this.createClearcoat();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_CLEARCOAT, clearcoat);\n        const clearcoatDef = materialDef.extensions[KHR_MATERIALS_CLEARCOAT];\n        // Factors.\n        if (clearcoatDef.clearcoatFactor !== undefined) {\n          clearcoat.setClearcoatFactor(clearcoatDef.clearcoatFactor);\n        }\n        if (clearcoatDef.clearcoatRoughnessFactor !== undefined) {\n          clearcoat.setClearcoatRoughnessFactor(clearcoatDef.clearcoatRoughnessFactor);\n        }\n        // Textures.\n        if (clearcoatDef.clearcoatTexture !== undefined) {\n          const textureInfoDef = clearcoatDef.clearcoatTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          clearcoat.setClearcoatTexture(texture);\n          context.setTextureInfo(clearcoat.getClearcoatTextureInfo(), textureInfoDef);\n        }\n        if (clearcoatDef.clearcoatRoughnessTexture !== undefined) {\n          const textureInfoDef = clearcoatDef.clearcoatRoughnessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          clearcoat.setClearcoatRoughnessTexture(texture);\n          context.setTextureInfo(clearcoat.getClearcoatRoughnessTextureInfo(), textureInfoDef);\n        }\n        if (clearcoatDef.clearcoatNormalTexture !== undefined) {\n          const textureInfoDef = clearcoatDef.clearcoatNormalTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          clearcoat.setClearcoatNormalTexture(texture);\n          context.setTextureInfo(clearcoat.getClearcoatNormalTextureInfo(), textureInfoDef);\n          if (textureInfoDef.scale !== undefined) {\n            clearcoat.setClearcoatNormalScale(textureInfoDef.scale);\n          }\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const clearcoat = material.getExtension(KHR_MATERIALS_CLEARCOAT);\n      if (clearcoat) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const clearcoatDef = materialDef.extensions[KHR_MATERIALS_CLEARCOAT] = {\n          clearcoatFactor: clearcoat.getClearcoatFactor(),\n          clearcoatRoughnessFactor: clearcoat.getClearcoatRoughnessFactor()\n        };\n        // Textures.\n        if (clearcoat.getClearcoatTexture()) {\n          const texture = clearcoat.getClearcoatTexture();\n          const textureInfo = clearcoat.getClearcoatTextureInfo();\n          clearcoatDef.clearcoatTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (clearcoat.getClearcoatRoughnessTexture()) {\n          const texture = clearcoat.getClearcoatRoughnessTexture();\n          const textureInfo = clearcoat.getClearcoatRoughnessTextureInfo();\n          clearcoatDef.clearcoatRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (clearcoat.getClearcoatNormalTexture()) {\n          const texture = clearcoat.getClearcoatNormalTexture();\n          const textureInfo = clearcoat.getClearcoatNormalTextureInfo();\n          clearcoatDef.clearcoatNormalTexture = context.createTextureInfoDef(texture, textureInfo);\n          if (clearcoat.getClearcoatNormalScale() !== 1) {\n            clearcoatDef.clearcoatNormalTexture.scale = clearcoat.getClearcoatNormalScale();\n          }\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsClearcoat.EXTENSION_NAME = KHR_MATERIALS_CLEARCOAT;\n\nconst {\n  R: R$5,\n  G: G$5,\n  B: B$3,\n  A: A$3\n} = TextureChannel;\n/**\n * Defines diffuse transmission on a PBR {@link Material}. See {@link KHRMaterialsDiffuseTransmission}.\n *\n * @experimental KHR_materials_diffuse_transmission is not yet ratified by the Khronos Group.\n */\nclass DiffuseTransmission extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_DIFFUSE_TRANSMISSION;\n    this.propertyType = 'DiffuseTransmission';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      diffuseTransmissionFactor: 0.0,\n      diffuseTransmissionTexture: null,\n      diffuseTransmissionTextureInfo: new TextureInfo(this.graph, 'diffuseTransmissionTextureInfo'),\n      diffuseTransmissionColorFactor: [1.0, 1.0, 1.0],\n      diffuseTransmissionColorTexture: null,\n      diffuseTransmissionColorTextureInfo: new TextureInfo(this.graph, 'diffuseTransmissionColorTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Diffuse transmission.\n   */\n  /**\n   * Percentage of reflected, non-specularly reflected light that is transmitted through the\n   * surface via the Lambertian diffuse transmission, i.e., the strength of the diffuse\n   * transmission effect.\n   */\n  getDiffuseTransmissionFactor() {\n    return this.get('diffuseTransmissionFactor');\n  }\n  /**\n   * Percentage of reflected, non-specularly reflected light that is transmitted through the\n   * surface via the Lambertian diffuse transmission, i.e., the strength of the diffuse\n   * transmission effect.\n   */\n  setDiffuseTransmissionFactor(factor) {\n    return this.set('diffuseTransmissionFactor', factor);\n  }\n  /**\n   * Texture that defines the strength of the diffuse transmission effect, stored in the alpha (A)\n   * channel. Will be multiplied by the diffuseTransmissionFactor.\n   */\n  getDiffuseTransmissionTexture() {\n    return this.getRef('diffuseTransmissionTexture');\n  }\n  /**\n   * Settings affecting the material's use of its diffuse transmission texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getDiffuseTransmissionTextureInfo() {\n    return this.getRef('diffuseTransmissionTexture') ? this.getRef('diffuseTransmissionTextureInfo') : null;\n  }\n  /**\n   * Texture that defines the strength of the diffuse transmission effect, stored in the alpha (A)\n   * channel. Will be multiplied by the diffuseTransmissionFactor.\n   */\n  setDiffuseTransmissionTexture(texture) {\n    return this.setRef('diffuseTransmissionTexture', texture, {\n      channels: A$3\n    });\n  }\n  /**********************************************************************************************\n   * Diffuse transmission color.\n   */\n  /** Color of the transmitted light; Linear-sRGB components. */\n  getDiffuseTransmissionColorFactor() {\n    return this.get('diffuseTransmissionColorFactor');\n  }\n  /** Color of the transmitted light; Linear-sRGB components. */\n  setDiffuseTransmissionColorFactor(factor) {\n    return this.set('diffuseTransmissionColorFactor', factor);\n  }\n  /**\n   * Texture that defines the color of the transmitted light, stored in the RGB channels and\n   * encoded in sRGB. This texture will be multiplied by diffuseTransmissionColorFactor.\n   */\n  getDiffuseTransmissionColorTexture() {\n    return this.getRef('diffuseTransmissionColorTexture');\n  }\n  /**\n   * Settings affecting the material's use of its diffuse transmission color texture. If no\n   * texture is attached, {@link TextureInfo} is `null`.\n   */\n  getDiffuseTransmissionColorTextureInfo() {\n    return this.getRef('diffuseTransmissionColorTexture') ? this.getRef('diffuseTransmissionColorTextureInfo') : null;\n  }\n  /**\n   * Texture that defines the color of the transmitted light, stored in the RGB channels and\n   * encoded in sRGB. This texture will be multiplied by diffuseTransmissionColorFactor.\n   */\n  setDiffuseTransmissionColorTexture(texture) {\n    return this.setRef('diffuseTransmissionColorTexture', texture, {\n      channels: R$5 | G$5 | B$3\n    });\n  }\n}\nDiffuseTransmission.EXTENSION_NAME = KHR_MATERIALS_DIFFUSE_TRANSMISSION;\n\n/**\n * [KHR_materials_diffuse_transmission](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_diffuse_transmission/)\n * defines diffuse transmission on a glTF PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-diffuse-transmission.png)\n *\n * > _**Figure:** Sphere using `KHR_materials_diffuse_transmission` with varying roughness (0.0, 0.2, 0.4).\n * > Source: Khronos Group._\n *\n * Adds a Lambertian diffuse transmission BSDF to the metallic-roughness\n * material. Thin, dielectric objects like leaves or paper diffusely transmit\n * incoming light to the opposite side of the surface. For optically thick\n * media (volumes) with short scattering distances and therefore dense\n * scattering behavior, a diffuse transmission lobe is a phenomenological\n * plausible and cheap approximation.\n *\n * Properties:\n * - {@link DiffuseTransmission}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsDiffuseTransmission, DiffuseTransmission } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const diffuseTransmissionExtension = document.createExtension(KHRMaterialsDiffuseTransmission);\n *\n * // Create DiffuseTransmission property.\n * const diffuseTransmission = diffuseTransmission.createDiffuseTransmission()\n *\t.setDiffuseTransmissionFactor(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_diffuse_transmission', diffuseTransmission);\n * ```\n *\n * @experimental KHR_materials_diffuse_transmission is not yet ratified by the Khronos Group.\n */\nclass KHRMaterialsDiffuseTransmission extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_DIFFUSE_TRANSMISSION;\n  }\n  /** Creates a new DiffuseTransmission property for use on a {@link Material}. */\n  createDiffuseTransmission() {\n    return new DiffuseTransmission(this.document.getGraph());\n  }\n  /** @hidden */\n  read(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_DIFFUSE_TRANSMISSION]) {\n        const transmission = this.createDiffuseTransmission();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_DIFFUSE_TRANSMISSION, transmission);\n        const transmissionDef = materialDef.extensions[KHR_MATERIALS_DIFFUSE_TRANSMISSION];\n        // Factors.\n        if (transmissionDef.diffuseTransmissionFactor !== undefined) {\n          transmission.setDiffuseTransmissionFactor(transmissionDef.diffuseTransmissionFactor);\n        }\n        if (transmissionDef.diffuseTransmissionColorFactor !== undefined) {\n          transmission.setDiffuseTransmissionColorFactor(transmissionDef.diffuseTransmissionColorFactor);\n        }\n        // Textures.\n        if (transmissionDef.diffuseTransmissionTexture !== undefined) {\n          const textureInfoDef = transmissionDef.diffuseTransmissionTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          transmission.setDiffuseTransmissionTexture(texture);\n          context.setTextureInfo(transmission.getDiffuseTransmissionTextureInfo(), textureInfoDef);\n        }\n        if (transmissionDef.diffuseTransmissionColorTexture !== undefined) {\n          const textureInfoDef = transmissionDef.diffuseTransmissionColorTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          transmission.setDiffuseTransmissionColorTexture(texture);\n          context.setTextureInfo(transmission.getDiffuseTransmissionColorTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    for (const material of this.document.getRoot().listMaterials()) {\n      const transmission = material.getExtension(KHR_MATERIALS_DIFFUSE_TRANSMISSION);\n      if (!transmission) continue;\n      const materialIndex = context.materialIndexMap.get(material);\n      const materialDef = jsonDoc.json.materials[materialIndex];\n      materialDef.extensions = materialDef.extensions || {};\n      // Factors.\n      const transmissionDef = materialDef.extensions[KHR_MATERIALS_DIFFUSE_TRANSMISSION] = {\n        diffuseTransmissionFactor: transmission.getDiffuseTransmissionFactor(),\n        diffuseTransmissionColorFactor: transmission.getDiffuseTransmissionColorFactor()\n      };\n      // Textures.\n      if (transmission.getDiffuseTransmissionTexture()) {\n        const texture = transmission.getDiffuseTransmissionTexture();\n        const textureInfo = transmission.getDiffuseTransmissionTextureInfo();\n        transmissionDef.diffuseTransmissionTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n      if (transmission.getDiffuseTransmissionColorTexture()) {\n        const texture = transmission.getDiffuseTransmissionColorTexture();\n        const textureInfo = transmission.getDiffuseTransmissionColorTextureInfo();\n        transmissionDef.diffuseTransmissionColorTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n    }\n    return this;\n  }\n}\nKHRMaterialsDiffuseTransmission.EXTENSION_NAME = KHR_MATERIALS_DIFFUSE_TRANSMISSION;\n\n/**\n * Defines dispersion for a PBR {@link Material}. See {@link KHRMaterialsDispersion}.\n */\nclass Dispersion extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_DISPERSION;\n    this.propertyType = 'Dispersion';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      dispersion: 0\n    });\n  }\n  /**********************************************************************************************\n   * Dispersion.\n   */\n  /** Dispersion. */\n  getDispersion() {\n    return this.get('dispersion');\n  }\n  /** Dispersion. */\n  setDispersion(dispersion) {\n    return this.set('dispersion', dispersion);\n  }\n}\nDispersion.EXTENSION_NAME = KHR_MATERIALS_DISPERSION;\n\n/**\n * [KHR_materials_dispersion](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_dispersion/)\n * defines dispersion on a glTF PBR material.\n *\n * ![illustration](/media/extensions/khr-materials-dispersion.jpg)\n *\n * > _**Figure:** Prisms demonstrating volumetric refraction and dispersion, for varying\n * > values of dispersion and IOR. Source: Khronos Group, rendered in Adobe Stager._\n *\n * Dispersion enables configuring the strength of the angular separation of colors (chromatic\n * aberration) transmitting through a relatively clear volume.  It is an enhancement to the\n * default `KHR_materials_volume` transmission model which assumes no dispersion.\n *\n * Properties:\n * - {@link Dispersion}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsDispersion, Dispersion } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const dispersionExtension = document.createExtension(KHRMaterialsDispersion);\n *\n * // Create Dispersion property.\n * const dispersion = dispersionExtension.createDispersion().setDispersion(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_dispersion', dispersion);\n * ```\n */\nclass KHRMaterialsDispersion extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_DISPERSION;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Dispersion property for use on a {@link Material}. */\n  createDispersion() {\n    return new Dispersion(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_DISPERSION]) {\n        const dispersion = this.createDispersion();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_DISPERSION, dispersion);\n        const dispersionDef = materialDef.extensions[KHR_MATERIALS_DISPERSION];\n        // Factors.\n        if (dispersionDef.dispersion !== undefined) {\n          dispersion.setDispersion(dispersionDef.dispersion);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const dispersion = material.getExtension(KHR_MATERIALS_DISPERSION);\n      if (dispersion) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        materialDef.extensions[KHR_MATERIALS_DISPERSION] = {\n          dispersion: dispersion.getDispersion()\n        };\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsDispersion.EXTENSION_NAME = KHR_MATERIALS_DISPERSION;\n\n/**\n * Defines emissive strength for a PBR {@link Material}, allowing high-dynamic-range\n * (HDR) emissive materials. See {@link KHRMaterialsEmissiveStrength}.\n */\nclass EmissiveStrength extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_EMISSIVE_STRENGTH;\n    this.propertyType = 'EmissiveStrength';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      emissiveStrength: 1.0\n    });\n  }\n  /**********************************************************************************************\n   * EmissiveStrength.\n   */\n  /** EmissiveStrength. */\n  getEmissiveStrength() {\n    return this.get('emissiveStrength');\n  }\n  /** EmissiveStrength. */\n  setEmissiveStrength(strength) {\n    return this.set('emissiveStrength', strength);\n  }\n}\nEmissiveStrength.EXTENSION_NAME = KHR_MATERIALS_EMISSIVE_STRENGTH;\n\n/**\n * [KHR_materials_emissive_strength](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_emissive_strength/)\n * defines emissive strength and enables high-dynamic-range (HDR) emissive materials.\n *\n * ![Illustration](/media/extensions/khr-materials-emissive-strength.jpg)\n *\n * > _**Figure:** Cubes with emissive color #59BCF3 and emissive strength\n * > increasing from 1 to 256 nits, left to right. Rendered in [three.js](https://threejs.org/),\n * > with independent point lighting and a bloom effect.\n * > Source: [Don McCurdy](https://www.donmccurdy.com/2024/04/27/emission-and-bloom/)._\n *\n * The core glTF 2.0 material model includes {@link Material.setEmissiveFactor `emissiveFactor`}\n * and {@link Material.setEmissiveTexture `emissiveTexture`} to control the color and intensity\n * of the light being emitted by the material, clamped to the range [0.0, 1.0]. However, in\n * PBR environments with HDR reflections and lighting, stronger emission effects may be desirable.\n *\n * In this extension, a new {@link EmissiveStrength.setEmissiveStrength `emissiveStrength`} scalar\n * factor is supplied, which governs the upper limit of emissive strength per material and may be\n * given arbitrarily high values.\n *\n * For implementations where a physical light unit is needed, the units for the multiplicative\n * product of the emissive texture and factor are candela per square meter (cd / m2), sometimes\n * called _nits_. Many realtime rendering engines simplify this calculation by assuming that an\n * emissive factor of 1.0 results in a fully exposed pixel.\n *\n * Properties:\n * - {@link EmissiveStrength}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsEmissiveStrength, EmissiveStrength } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const emissiveStrengthExtension = document.createExtension(KHRMaterialsEmissiveStrength);\n *\n * // Create EmissiveStrength property.\n * const emissiveStrength = emissiveStrengthExtension\n * \t.createEmissiveStrength().setEmissiveStrength(5.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_emissive_strength', emissiveStrength);\n * ```\n */\nclass KHRMaterialsEmissiveStrength extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_EMISSIVE_STRENGTH;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new EmissiveStrength property for use on a {@link Material}. */\n  createEmissiveStrength() {\n    return new EmissiveStrength(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_EMISSIVE_STRENGTH]) {\n        const emissiveStrength = this.createEmissiveStrength();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_EMISSIVE_STRENGTH, emissiveStrength);\n        const emissiveStrengthDef = materialDef.extensions[KHR_MATERIALS_EMISSIVE_STRENGTH];\n        // Factors.\n        if (emissiveStrengthDef.emissiveStrength !== undefined) {\n          emissiveStrength.setEmissiveStrength(emissiveStrengthDef.emissiveStrength);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const emissiveStrength = material.getExtension(KHR_MATERIALS_EMISSIVE_STRENGTH);\n      if (emissiveStrength) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        materialDef.extensions[KHR_MATERIALS_EMISSIVE_STRENGTH] = {\n          emissiveStrength: emissiveStrength.getEmissiveStrength()\n        };\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsEmissiveStrength.EXTENSION_NAME = KHR_MATERIALS_EMISSIVE_STRENGTH;\n\n/**\n * Defines index of refraction for a PBR {@link Material}. See {@link KHRMaterialsIOR}.\n */\nclass IOR extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_IOR;\n    this.propertyType = 'IOR';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      ior: 1.5\n    });\n  }\n  /**********************************************************************************************\n   * IOR.\n   */\n  /** IOR. */\n  getIOR() {\n    return this.get('ior');\n  }\n  /** IOR. */\n  setIOR(ior) {\n    return this.set('ior', ior);\n  }\n}\nIOR.EXTENSION_NAME = KHR_MATERIALS_IOR;\n\n/**\n * [KHR_materials_ior](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_ior/)\n * defines index of refraction on a glTF PBR material.\n *\n * The dielectric BRDF of the metallic-roughness material in glTF uses a fixed value of 1.5 for the\n * index of refraction. This is a good fit for many plastics and glass, but not for other materials\n * like water or asphalt, sapphire or diamond. `KHR_materials_ior` allows users to set the index of\n * refraction to a certain value.\n *\n * Properties:\n * - {@link IOR}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsIOR, IOR } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const iorExtension = document.createExtension(KHRMaterialsIOR);\n *\n * // Create IOR property.\n * const ior = iorExtension.createIOR().setIOR(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_ior', ior);\n * ```\n */\nclass KHRMaterialsIOR extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_IOR;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new IOR property for use on a {@link Material}. */\n  createIOR() {\n    return new IOR(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_IOR]) {\n        const ior = this.createIOR();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_IOR, ior);\n        const iorDef = materialDef.extensions[KHR_MATERIALS_IOR];\n        // Factors.\n        if (iorDef.ior !== undefined) {\n          ior.setIOR(iorDef.ior);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const ior = material.getExtension(KHR_MATERIALS_IOR);\n      if (ior) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        materialDef.extensions[KHR_MATERIALS_IOR] = {\n          ior: ior.getIOR()\n        };\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsIOR.EXTENSION_NAME = KHR_MATERIALS_IOR;\n\nconst {\n  R: R$4,\n  G: G$4\n} = TextureChannel;\n/**\n * Defines iridescence (thin film interference) on a PBR {@link Material}. See {@link KHRMaterialsIridescence}.\n */\nclass Iridescence extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_IRIDESCENCE;\n    this.propertyType = 'Iridescence';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      iridescenceFactor: 0.0,\n      iridescenceTexture: null,\n      iridescenceTextureInfo: new TextureInfo(this.graph, 'iridescenceTextureInfo'),\n      iridescenceIOR: 1.3,\n      iridescenceThicknessMinimum: 100,\n      iridescenceThicknessMaximum: 400,\n      iridescenceThicknessTexture: null,\n      iridescenceThicknessTextureInfo: new TextureInfo(this.graph, 'iridescenceThicknessTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Iridescence.\n   */\n  /** Iridescence; linear multiplier. See {@link Iridescence.getIridescenceTexture getIridescenceTexture}. */\n  getIridescenceFactor() {\n    return this.get('iridescenceFactor');\n  }\n  /** Iridescence; linear multiplier. See {@link Iridescence.getIridescenceTexture getIridescenceTexture}. */\n  setIridescenceFactor(factor) {\n    return this.set('iridescenceFactor', factor);\n  }\n  /**\n   * Iridescence intensity.\n   *\n   * Only the red (R) channel is used for iridescence intensity, but this texture may optionally\n   * be packed with additional data in the other channels.\n   */\n  getIridescenceTexture() {\n    return this.getRef('iridescenceTexture');\n  }\n  /**\n   * Settings affecting the material's use of its iridescence texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getIridescenceTextureInfo() {\n    return this.getRef('iridescenceTexture') ? this.getRef('iridescenceTextureInfo') : null;\n  }\n  /** Iridescence intensity. See {@link Iridescence.getIridescenceTexture getIridescenceTexture}. */\n  setIridescenceTexture(texture) {\n    return this.setRef('iridescenceTexture', texture, {\n      channels: R$4\n    });\n  }\n  /**********************************************************************************************\n   * Iridescence IOR.\n   */\n  /** Index of refraction of the dielectric thin-film layer. */\n  getIridescenceIOR() {\n    return this.get('iridescenceIOR');\n  }\n  /** Index of refraction of the dielectric thin-film layer. */\n  setIridescenceIOR(ior) {\n    return this.set('iridescenceIOR', ior);\n  }\n  /**********************************************************************************************\n   * Iridescence thickness.\n   */\n  /** Minimum thickness of the thin-film layer, in nanometers (nm). */\n  getIridescenceThicknessMinimum() {\n    return this.get('iridescenceThicknessMinimum');\n  }\n  /** Minimum thickness of the thin-film layer, in nanometers (nm). */\n  setIridescenceThicknessMinimum(thickness) {\n    return this.set('iridescenceThicknessMinimum', thickness);\n  }\n  /** Maximum thickness of the thin-film layer, in nanometers (nm). */\n  getIridescenceThicknessMaximum() {\n    return this.get('iridescenceThicknessMaximum');\n  }\n  /** Maximum thickness of the thin-film layer, in nanometers (nm). */\n  setIridescenceThicknessMaximum(thickness) {\n    return this.set('iridescenceThicknessMaximum', thickness);\n  }\n  /**\n   * The green channel of this texture defines the thickness of the\n   * thin-film layer by blending between the minimum and maximum thickness.\n   */\n  getIridescenceThicknessTexture() {\n    return this.getRef('iridescenceThicknessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its iridescence thickness texture.\n   * If no texture is attached, {@link TextureInfo} is `null`.\n   */\n  getIridescenceThicknessTextureInfo() {\n    return this.getRef('iridescenceThicknessTexture') ? this.getRef('iridescenceThicknessTextureInfo') : null;\n  }\n  /**\n   * Sets iridescence thickness texture.\n   * See {@link Iridescence.getIridescenceThicknessTexture getIridescenceThicknessTexture}.\n   */\n  setIridescenceThicknessTexture(texture) {\n    return this.setRef('iridescenceThicknessTexture', texture, {\n      channels: G$4\n    });\n  }\n}\nIridescence.EXTENSION_NAME = KHR_MATERIALS_IRIDESCENCE;\n\n/**\n * [`KHR_materials_iridescence`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_iridescence/)\n * defines iridescence (thin film interference) on a PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-iridescence.png)\n *\n * > _**Figure:** Varying levels of iridescence IOR values.\n * > Source: [Khronos Group](https://github.com/KhronosGroup/gltf/tree/main/extensions/2.0/Khronos/KHR_materials_iridescence)._\n *\n * Iridescence describes an effect where hue varies depending on the viewing\n * angle and illumination angle: A thin-film of a semi-transparent layer\n * results in inter-reflections and due to thin-film interference, certain\n * wavelengths get absorbed or amplified. Iridescence can be seen on soap\n * bubbles, oil films, or on the wings of many insects. With this extension,\n * thickness and index of refraction (IOR) of the thin-film can be specified,\n * enabling iridescent materials.\n *\n * Properties:\n * - {@link Iridescence}\n *\n * ### Example\n *\n * The `KHRMaterialsIridescence` class provides a single {@link ExtensionProperty} type, `Iridescence`,\n * which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsIridescence, Iridescence } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const iridescenceExtension = document.createExtension(KHRMaterialsIridescence);\n *\n * // Create an Iridescence property.\n * const iridescence = iridescenceExtension.createIridescence()\n * \t.setIridescenceFactor(1.0)\n * \t.setIridescenceIOR(1.8);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_iridescence', iridescence);\n * ```\n */\nclass KHRMaterialsIridescence extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_IRIDESCENCE;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Iridescence property for use on a {@link Material}. */\n  createIridescence() {\n    return new Iridescence(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_IRIDESCENCE]) {\n        const iridescence = this.createIridescence();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_IRIDESCENCE, iridescence);\n        const iridescenceDef = materialDef.extensions[KHR_MATERIALS_IRIDESCENCE];\n        // Factors.\n        if (iridescenceDef.iridescenceFactor !== undefined) {\n          iridescence.setIridescenceFactor(iridescenceDef.iridescenceFactor);\n        }\n        if (iridescenceDef.iridescenceIor !== undefined) {\n          iridescence.setIridescenceIOR(iridescenceDef.iridescenceIor);\n        }\n        if (iridescenceDef.iridescenceThicknessMinimum !== undefined) {\n          iridescence.setIridescenceThicknessMinimum(iridescenceDef.iridescenceThicknessMinimum);\n        }\n        if (iridescenceDef.iridescenceThicknessMaximum !== undefined) {\n          iridescence.setIridescenceThicknessMaximum(iridescenceDef.iridescenceThicknessMaximum);\n        }\n        // Textures.\n        if (iridescenceDef.iridescenceTexture !== undefined) {\n          const textureInfoDef = iridescenceDef.iridescenceTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          iridescence.setIridescenceTexture(texture);\n          context.setTextureInfo(iridescence.getIridescenceTextureInfo(), textureInfoDef);\n        }\n        if (iridescenceDef.iridescenceThicknessTexture !== undefined) {\n          const textureInfoDef = iridescenceDef.iridescenceThicknessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          iridescence.setIridescenceThicknessTexture(texture);\n          context.setTextureInfo(iridescence.getIridescenceThicknessTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const iridescence = material.getExtension(KHR_MATERIALS_IRIDESCENCE);\n      if (iridescence) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const iridescenceDef = materialDef.extensions[KHR_MATERIALS_IRIDESCENCE] = {};\n        if (iridescence.getIridescenceFactor() > 0) {\n          iridescenceDef.iridescenceFactor = iridescence.getIridescenceFactor();\n        }\n        if (iridescence.getIridescenceIOR() !== 1.3) {\n          iridescenceDef.iridescenceIor = iridescence.getIridescenceIOR();\n        }\n        if (iridescence.getIridescenceThicknessMinimum() !== 100) {\n          iridescenceDef.iridescenceThicknessMinimum = iridescence.getIridescenceThicknessMinimum();\n        }\n        if (iridescence.getIridescenceThicknessMaximum() !== 400) {\n          iridescenceDef.iridescenceThicknessMaximum = iridescence.getIridescenceThicknessMaximum();\n        }\n        // Textures.\n        if (iridescence.getIridescenceTexture()) {\n          const texture = iridescence.getIridescenceTexture();\n          const textureInfo = iridescence.getIridescenceTextureInfo();\n          iridescenceDef.iridescenceTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (iridescence.getIridescenceThicknessTexture()) {\n          const texture = iridescence.getIridescenceThicknessTexture();\n          const textureInfo = iridescence.getIridescenceThicknessTextureInfo();\n          iridescenceDef.iridescenceThicknessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsIridescence.EXTENSION_NAME = KHR_MATERIALS_IRIDESCENCE;\n\nconst {\n  R: R$3,\n  G: G$3,\n  B: B$2,\n  A: A$2\n} = TextureChannel;\n/**\n * Converts a {@link Material} to a spec/gloss workflow. See {@link KHRMaterialsPBRSpecularGlossiness}.\n */\nclass PBRSpecularGlossiness extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n    this.propertyType = 'PBRSpecularGlossiness';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      diffuseFactor: [1.0, 1.0, 1.0, 1.0],\n      diffuseTexture: null,\n      diffuseTextureInfo: new TextureInfo(this.graph, 'diffuseTextureInfo'),\n      specularFactor: [1.0, 1.0, 1.0],\n      glossinessFactor: 1.0,\n      specularGlossinessTexture: null,\n      specularGlossinessTextureInfo: new TextureInfo(this.graph, 'specularGlossinessTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Diffuse.\n   */\n  /** Diffuse; Linear-sRGB components. See {@link PBRSpecularGlossiness.getDiffuseTexture getDiffuseTexture}. */\n  getDiffuseFactor() {\n    return this.get('diffuseFactor');\n  }\n  /** Diffuse; Linear-sRGB components. See {@link PBRSpecularGlossiness.getDiffuseTexture getDiffuseTexture}. */\n  setDiffuseFactor(factor) {\n    return this.set('diffuseFactor', factor);\n  }\n  /**\n   * Diffuse texture; sRGB. Alternative to baseColorTexture, used within the\n   * spec/gloss PBR workflow.\n   */\n  getDiffuseTexture() {\n    return this.getRef('diffuseTexture');\n  }\n  /**\n   * Settings affecting the material's use of its diffuse texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getDiffuseTextureInfo() {\n    return this.getRef('diffuseTexture') ? this.getRef('diffuseTextureInfo') : null;\n  }\n  /** Sets diffuse texture. See {@link PBRSpecularGlossiness.getDiffuseTexture getDiffuseTexture}. */\n  setDiffuseTexture(texture) {\n    return this.setRef('diffuseTexture', texture, {\n      channels: R$3 | G$3 | B$2 | A$2,\n      isColor: true\n    });\n  }\n  /**********************************************************************************************\n   * Specular.\n   */\n  /** Specular; linear multiplier. */\n  getSpecularFactor() {\n    return this.get('specularFactor');\n  }\n  /** Specular; linear multiplier. */\n  setSpecularFactor(factor) {\n    return this.set('specularFactor', factor);\n  }\n  /**********************************************************************************************\n   * Glossiness.\n   */\n  /** Glossiness; linear multiplier. */\n  getGlossinessFactor() {\n    return this.get('glossinessFactor');\n  }\n  /** Glossiness; linear multiplier. */\n  setGlossinessFactor(factor) {\n    return this.set('glossinessFactor', factor);\n  }\n  /**********************************************************************************************\n   * Specular/Glossiness.\n   */\n  /** Spec/gloss texture; linear multiplier. */\n  getSpecularGlossinessTexture() {\n    return this.getRef('specularGlossinessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its spec/gloss texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getSpecularGlossinessTextureInfo() {\n    return this.getRef('specularGlossinessTexture') ? this.getRef('specularGlossinessTextureInfo') : null;\n  }\n  /** Spec/gloss texture; linear multiplier. */\n  setSpecularGlossinessTexture(texture) {\n    return this.setRef('specularGlossinessTexture', texture, {\n      channels: R$3 | G$3 | B$2 | A$2\n    });\n  }\n}\nPBRSpecularGlossiness.EXTENSION_NAME = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\n/**\n * [`KHR_materials_pbrSpecularGlossiness`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness/)\n * converts a PBR material from the default metal/rough workflow to a spec/gloss workflow.\n *\n * > _**NOTICE:** The spec/gloss workflow does _not_ support other PBR extensions such as clearcoat,\n * > transmission, IOR, etc. For the complete PBR feature set and specular data, use the\n * > {@link KHRMaterialsSpecular} extension instead, which provides specular data within a metal/rough\n * > workflow._\n *\n * ![Illustration](/media/extensions/khr-material-pbr-specular-glossiness.png)\n *\n * > _**Figure:** Components of a PBR spec/gloss material. Source: Khronos Group._\n *\n * Properties:\n * - {@link PBRSpecularGlossiness}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsPBRSpecularGlossiness } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const specGlossExtension = document.createExtension(KHRMaterialsPBRSpecularGlossiness);\n *\n * // Create a PBRSpecularGlossiness property.\n * const specGloss = specGlossExtension.createPBRSpecularGlossiness()\n * \t.setSpecularFactor(1.0);\n *\n * // // Assign to a Material.\n * material.setExtension('KHR_materials_pbrSpecularGlossiness', specGloss);\n * ```\n */\nclass KHRMaterialsPBRSpecularGlossiness extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new PBRSpecularGlossiness property for use on a {@link Material}. */\n  createPBRSpecularGlossiness() {\n    return new PBRSpecularGlossiness(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n        const specGloss = this.createPBRSpecularGlossiness();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS, specGloss);\n        const specGlossDef = materialDef.extensions[KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n        // Factors.\n        if (specGlossDef.diffuseFactor !== undefined) {\n          specGloss.setDiffuseFactor(specGlossDef.diffuseFactor);\n        }\n        if (specGlossDef.specularFactor !== undefined) {\n          specGloss.setSpecularFactor(specGlossDef.specularFactor);\n        }\n        if (specGlossDef.glossinessFactor !== undefined) {\n          specGloss.setGlossinessFactor(specGlossDef.glossinessFactor);\n        }\n        // Textures.\n        if (specGlossDef.diffuseTexture !== undefined) {\n          const textureInfoDef = specGlossDef.diffuseTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          specGloss.setDiffuseTexture(texture);\n          context.setTextureInfo(specGloss.getDiffuseTextureInfo(), textureInfoDef);\n        }\n        if (specGlossDef.specularGlossinessTexture !== undefined) {\n          const textureInfoDef = specGlossDef.specularGlossinessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          specGloss.setSpecularGlossinessTexture(texture);\n          context.setTextureInfo(specGloss.getSpecularGlossinessTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const specGloss = material.getExtension(KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS);\n      if (specGloss) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const specGlossDef = materialDef.extensions[KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS] = {\n          diffuseFactor: specGloss.getDiffuseFactor(),\n          specularFactor: specGloss.getSpecularFactor(),\n          glossinessFactor: specGloss.getGlossinessFactor()\n        };\n        // Textures.\n        if (specGloss.getDiffuseTexture()) {\n          const texture = specGloss.getDiffuseTexture();\n          const textureInfo = specGloss.getDiffuseTextureInfo();\n          specGlossDef.diffuseTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (specGloss.getSpecularGlossinessTexture()) {\n          const texture = specGloss.getSpecularGlossinessTexture();\n          const textureInfo = specGloss.getSpecularGlossinessTextureInfo();\n          specGlossDef.specularGlossinessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsPBRSpecularGlossiness.EXTENSION_NAME = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\nconst {\n  R: R$2,\n  G: G$2,\n  B: B$1,\n  A: A$1\n} = TextureChannel;\n/**\n * Defines sheen on a PBR {@link Material}. See {@link KHRMaterialsSheen}.\n */\nclass Sheen extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_SHEEN;\n    this.propertyType = 'Sheen';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      sheenColorFactor: [0.0, 0.0, 0.0],\n      sheenColorTexture: null,\n      sheenColorTextureInfo: new TextureInfo(this.graph, 'sheenColorTextureInfo'),\n      sheenRoughnessFactor: 0.0,\n      sheenRoughnessTexture: null,\n      sheenRoughnessTextureInfo: new TextureInfo(this.graph, 'sheenRoughnessTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Sheen color.\n   */\n  /** Sheen; linear multiplier. */\n  getSheenColorFactor() {\n    return this.get('sheenColorFactor');\n  }\n  /** Sheen; linear multiplier. */\n  setSheenColorFactor(factor) {\n    return this.set('sheenColorFactor', factor);\n  }\n  /**\n   * Sheen color texture, in sRGB colorspace.\n   */\n  getSheenColorTexture() {\n    return this.getRef('sheenColorTexture');\n  }\n  /**\n   * Settings affecting the material's use of its sheen color texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getSheenColorTextureInfo() {\n    return this.getRef('sheenColorTexture') ? this.getRef('sheenColorTextureInfo') : null;\n  }\n  /** Sets sheen color texture. See {@link Sheen.getSheenColorTexture getSheenColorTexture}. */\n  setSheenColorTexture(texture) {\n    return this.setRef('sheenColorTexture', texture, {\n      channels: R$2 | G$2 | B$1,\n      isColor: true\n    });\n  }\n  /**********************************************************************************************\n   * Sheen roughness.\n   */\n  /** Sheen roughness; linear multiplier. See {@link Sheen.getSheenRoughnessTexture getSheenRoughnessTexture}. */\n  getSheenRoughnessFactor() {\n    return this.get('sheenRoughnessFactor');\n  }\n  /** Sheen roughness; linear multiplier. See {@link Sheen.getSheenRoughnessTexture getSheenRoughnessTexture}. */\n  setSheenRoughnessFactor(factor) {\n    return this.set('sheenRoughnessFactor', factor);\n  }\n  /**\n   * Sheen roughness texture; linear multiplier. The `a` channel of this texture specifies\n   * roughness, independent of the base layer's roughness.\n   */\n  getSheenRoughnessTexture() {\n    return this.getRef('sheenRoughnessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its sheen roughness texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getSheenRoughnessTextureInfo() {\n    return this.getRef('sheenRoughnessTexture') ? this.getRef('sheenRoughnessTextureInfo') : null;\n  }\n  /**\n   * Sets sheen roughness texture.  The `a` channel of this texture specifies\n   * roughness, independent of the base layer's roughness.\n   */\n  setSheenRoughnessTexture(texture) {\n    return this.setRef('sheenRoughnessTexture', texture, {\n      channels: A$1\n    });\n  }\n}\nSheen.EXTENSION_NAME = KHR_MATERIALS_SHEEN;\n\n/**\n * [`KHR_materials_sheen`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_sheen/)\n * defines a velvet-like sheen layered on a glTF PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-sheen.png)\n *\n * > _**Figure:** A cushion, showing high material roughness and low sheen roughness. Soft\n * > highlights at edges of the material show backscattering from microfibers. Source: Khronos\n * > Group._\n *\n * A sheen layer is a common technique used in Physically-Based Rendering to represent\n * cloth and fabric materials.\n *\n * Properties:\n * - {@link Sheen}\n *\n * ### Example\n *\n * The `KHRMaterialsSheen` class provides a single {@link ExtensionProperty} type, `Sheen`,\n * which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsSheen, Sheen } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const sheenExtension = document.createExtension(KHRMaterialsSheen);\n *\n * // Create a Sheen property.\n * const sheen = sheenExtension.createSheen()\n * \t.setSheenColorFactor([1.0, 1.0, 1.0]);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_sheen', sheen);\n * ```\n */\nclass KHRMaterialsSheen extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_SHEEN;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Sheen property for use on a {@link Material}. */\n  createSheen() {\n    return new Sheen(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_SHEEN]) {\n        const sheen = this.createSheen();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_SHEEN, sheen);\n        const sheenDef = materialDef.extensions[KHR_MATERIALS_SHEEN];\n        // Factors.\n        if (sheenDef.sheenColorFactor !== undefined) {\n          sheen.setSheenColorFactor(sheenDef.sheenColorFactor);\n        }\n        if (sheenDef.sheenRoughnessFactor !== undefined) {\n          sheen.setSheenRoughnessFactor(sheenDef.sheenRoughnessFactor);\n        }\n        // Textures.\n        if (sheenDef.sheenColorTexture !== undefined) {\n          const textureInfoDef = sheenDef.sheenColorTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          sheen.setSheenColorTexture(texture);\n          context.setTextureInfo(sheen.getSheenColorTextureInfo(), textureInfoDef);\n        }\n        if (sheenDef.sheenRoughnessTexture !== undefined) {\n          const textureInfoDef = sheenDef.sheenRoughnessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          sheen.setSheenRoughnessTexture(texture);\n          context.setTextureInfo(sheen.getSheenRoughnessTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const sheen = material.getExtension(KHR_MATERIALS_SHEEN);\n      if (sheen) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const sheenDef = materialDef.extensions[KHR_MATERIALS_SHEEN] = {\n          sheenColorFactor: sheen.getSheenColorFactor(),\n          sheenRoughnessFactor: sheen.getSheenRoughnessFactor()\n        };\n        // Textures.\n        if (sheen.getSheenColorTexture()) {\n          const texture = sheen.getSheenColorTexture();\n          const textureInfo = sheen.getSheenColorTextureInfo();\n          sheenDef.sheenColorTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (sheen.getSheenRoughnessTexture()) {\n          const texture = sheen.getSheenRoughnessTexture();\n          const textureInfo = sheen.getSheenRoughnessTextureInfo();\n          sheenDef.sheenRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsSheen.EXTENSION_NAME = KHR_MATERIALS_SHEEN;\n\nconst {\n  R: R$1,\n  G: G$1,\n  B,\n  A\n} = TextureChannel;\n/**\n * Defines specular reflectivity on a PBR {@link Material}. See {@link KHRMaterialsSpecular}.\n */\nclass Specular extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_SPECULAR;\n    this.propertyType = 'Specular';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      specularFactor: 1.0,\n      specularTexture: null,\n      specularTextureInfo: new TextureInfo(this.graph, 'specularTextureInfo'),\n      specularColorFactor: [1.0, 1.0, 1.0],\n      specularColorTexture: null,\n      specularColorTextureInfo: new TextureInfo(this.graph, 'specularColorTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Specular.\n   */\n  /** Specular; linear multiplier. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  getSpecularFactor() {\n    return this.get('specularFactor');\n  }\n  /** Specular; linear multiplier. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  setSpecularFactor(factor) {\n    return this.set('specularFactor', factor);\n  }\n  /** Specular color; Linear-sRGB components. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  getSpecularColorFactor() {\n    return this.get('specularColorFactor');\n  }\n  /** Specular color; Linear-sRGB components. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  setSpecularColorFactor(factor) {\n    return this.set('specularColorFactor', factor);\n  }\n  /**\n   * Specular texture; linear multiplier. Configures the strength of the specular reflection in\n   * the dielectric BRDF. A value of zero disables the specular reflection, resulting in a pure\n   * diffuse material.\n   *\n   * Only the alpha (A) channel is used for specular strength, but this texture may optionally\n   * be packed with specular color (RGB) into a single texture.\n   */\n  getSpecularTexture() {\n    return this.getRef('specularTexture');\n  }\n  /**\n   * Settings affecting the material's use of its specular texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getSpecularTextureInfo() {\n    return this.getRef('specularTexture') ? this.getRef('specularTextureInfo') : null;\n  }\n  /** Sets specular texture. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  setSpecularTexture(texture) {\n    return this.setRef('specularTexture', texture, {\n      channels: A\n    });\n  }\n  /**\n   * Specular color texture; linear multiplier. Defines the F0 color of the specular reflection\n   * (RGB channels, encoded in sRGB) in the the dielectric BRDF.\n   *\n   * Only RGB channels are used here, but this texture may optionally be packed with a specular\n   * factor (A) into a single texture.\n   */\n  getSpecularColorTexture() {\n    return this.getRef('specularColorTexture');\n  }\n  /**\n   * Settings affecting the material's use of its specular color texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getSpecularColorTextureInfo() {\n    return this.getRef('specularColorTexture') ? this.getRef('specularColorTextureInfo') : null;\n  }\n  /** Sets specular color texture. See {@link Specular.getSpecularColorTexture getSpecularColorTexture}. */\n  setSpecularColorTexture(texture) {\n    return this.setRef('specularColorTexture', texture, {\n      channels: R$1 | G$1 | B,\n      isColor: true\n    });\n  }\n}\nSpecular.EXTENSION_NAME = KHR_MATERIALS_SPECULAR;\n\n/**\n * [`KHR_materials_specular`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_specular/)\n * adjusts the strength of the specular reflection in the dielectric BRDF.\n *\n * KHRMaterialsSpecular is a better alternative to the older\n * {@link KHRMaterialsPBRSpecularGlossiness KHR_materials_pbrSpecularGlossiness} extension, and\n * provides specular information while remaining within a metal/rough PBR workflow. A\n * value of zero disables the specular reflection, resulting in a pure diffuse material.\n *\n * Properties:\n * - {@link Specular}\n *\n * ### Example\n *\n * The `KHRMaterialsSpecular` class provides a single {@link ExtensionProperty} type, `Specular`,\n * which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsSpecular, Specular } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const specularExtension = document.createExtension(KHRMaterialsSpecular);\n *\n * // Create a Specular property.\n * const specular = specularExtension.createSpecular()\n * \t.setSpecularFactor(1.0);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_specular', specular);\n * ```\n */\nclass KHRMaterialsSpecular extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_SPECULAR;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Specular property for use on a {@link Material}. */\n  createSpecular() {\n    return new Specular(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_SPECULAR]) {\n        const specular = this.createSpecular();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_SPECULAR, specular);\n        const specularDef = materialDef.extensions[KHR_MATERIALS_SPECULAR];\n        // Factors.\n        if (specularDef.specularFactor !== undefined) {\n          specular.setSpecularFactor(specularDef.specularFactor);\n        }\n        if (specularDef.specularColorFactor !== undefined) {\n          specular.setSpecularColorFactor(specularDef.specularColorFactor);\n        }\n        // Textures.\n        if (specularDef.specularTexture !== undefined) {\n          const textureInfoDef = specularDef.specularTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          specular.setSpecularTexture(texture);\n          context.setTextureInfo(specular.getSpecularTextureInfo(), textureInfoDef);\n        }\n        if (specularDef.specularColorTexture !== undefined) {\n          const textureInfoDef = specularDef.specularColorTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          specular.setSpecularColorTexture(texture);\n          context.setTextureInfo(specular.getSpecularColorTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const specular = material.getExtension(KHR_MATERIALS_SPECULAR);\n      if (specular) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const specularDef = materialDef.extensions[KHR_MATERIALS_SPECULAR] = {};\n        if (specular.getSpecularFactor() !== 1) {\n          specularDef.specularFactor = specular.getSpecularFactor();\n        }\n        if (!MathUtils.eq(specular.getSpecularColorFactor(), [1, 1, 1])) {\n          specularDef.specularColorFactor = specular.getSpecularColorFactor();\n        }\n        // Textures.\n        if (specular.getSpecularTexture()) {\n          const texture = specular.getSpecularTexture();\n          const textureInfo = specular.getSpecularTextureInfo();\n          specularDef.specularTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (specular.getSpecularColorTexture()) {\n          const texture = specular.getSpecularColorTexture();\n          const textureInfo = specular.getSpecularColorTextureInfo();\n          specularDef.specularColorTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsSpecular.EXTENSION_NAME = KHR_MATERIALS_SPECULAR;\n\nconst {\n  R\n} = TextureChannel;\n/**\n * Defines optical transmission on a PBR {@link Material}. See {@link KHRMaterialsTransmission}.\n */\nclass Transmission extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_TRANSMISSION;\n    this.propertyType = 'Transmission';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      transmissionFactor: 0.0,\n      transmissionTexture: null,\n      transmissionTextureInfo: new TextureInfo(this.graph, 'transmissionTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Transmission.\n   */\n  /** Transmission; linear multiplier. See {@link Transmission.getTransmissionTexture getTransmissionTexture}. */\n  getTransmissionFactor() {\n    return this.get('transmissionFactor');\n  }\n  /** Transmission; linear multiplier. See {@link Transmission.getTransmissionTexture getTransmissionTexture}. */\n  setTransmissionFactor(factor) {\n    return this.set('transmissionFactor', factor);\n  }\n  /**\n   * Transmission texture; linear multiplier. The `r` channel of this texture specifies\n   * transmission [0-1] of the material's surface. By default this is a thin transparency\n   * effect, but volume effects (refraction, subsurface scattering) may be introduced with the\n   * addition of the `KHR_materials_volume` extension.\n   */\n  getTransmissionTexture() {\n    return this.getRef('transmissionTexture');\n  }\n  /**\n   * Settings affecting the material's use of its transmission texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getTransmissionTextureInfo() {\n    return this.getRef('transmissionTexture') ? this.getRef('transmissionTextureInfo') : null;\n  }\n  /** Sets transmission texture. See {@link Transmission.getTransmissionTexture getTransmissionTexture}. */\n  setTransmissionTexture(texture) {\n    return this.setRef('transmissionTexture', texture, {\n      channels: R\n    });\n  }\n}\nTransmission.EXTENSION_NAME = KHR_MATERIALS_TRANSMISSION;\n\n/**\n * [`KHR_materials_transmission`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_transmission/)\n * provides a common type of optical transparency: infinitely-thin materials with no refraction,\n * scattering, or dispersion.\n *\n * ![Illustration](/media/extensions/khr-materials-transmission.png)\n *\n * > _**Figure:** Sphere using `KHR_materials_transmission` with varying roughness (0.0, 0.2, 0.4).\n * > Source: Khronos Group._\n *\n * While default PBR materials using alpha blending become invisible as their opacity approaches\n * zero, a transmissive material continues to reflect light in a glass-like manner, even at low\n * transmission values. When combined with {@link KHRMaterialsVolume}, transmission may be used for\n * thicker materials and refractive effects.\n *\n * Properties:\n * - {@link Transmission}\n *\n * ### Example\n *\n * The `KHRMaterialsTransmission` class provides a single {@link ExtensionProperty} type,\n * `Transmission`, which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsTransmission, Transmission } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const transmissionExtension = document.createExtension(KHRMaterialsTransmission);\n *\n * // Create a Transmission property.\n * const transmission = transmissionExtension.createTransmission()\n * \t.setTransmissionFactor(1.0);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_transmission', transmission);\n * ```\n */\nclass KHRMaterialsTransmission extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_TRANSMISSION;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Transmission property for use on a {@link Material}. */\n  createTransmission() {\n    return new Transmission(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_TRANSMISSION]) {\n        const transmission = this.createTransmission();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_TRANSMISSION, transmission);\n        const transmissionDef = materialDef.extensions[KHR_MATERIALS_TRANSMISSION];\n        // Factors.\n        if (transmissionDef.transmissionFactor !== undefined) {\n          transmission.setTransmissionFactor(transmissionDef.transmissionFactor);\n        }\n        // Textures.\n        if (transmissionDef.transmissionTexture !== undefined) {\n          const textureInfoDef = transmissionDef.transmissionTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          transmission.setTransmissionTexture(texture);\n          context.setTextureInfo(transmission.getTransmissionTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const transmission = material.getExtension(KHR_MATERIALS_TRANSMISSION);\n      if (transmission) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const transmissionDef = materialDef.extensions[KHR_MATERIALS_TRANSMISSION] = {\n          transmissionFactor: transmission.getTransmissionFactor()\n        };\n        // Textures.\n        if (transmission.getTransmissionTexture()) {\n          const texture = transmission.getTransmissionTexture();\n          const textureInfo = transmission.getTransmissionTextureInfo();\n          transmissionDef.transmissionTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsTransmission.EXTENSION_NAME = KHR_MATERIALS_TRANSMISSION;\n\n/**\n * Converts a PBR {@link Material} to an unlit shading model. See {@link KHRMaterialsUnlit}.\n */\nclass Unlit extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_UNLIT;\n    this.propertyType = 'Unlit';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n}\nUnlit.EXTENSION_NAME = KHR_MATERIALS_UNLIT;\n\n/**\n * [`KHR_materials_unlit`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_unlit/)\n * defines an unlit shading model for use in glTF 2.0 materials.\n *\n * ![Illustration](/media/extensions/khr-materials-unlit.png)\n *\n * > _**Figure:** Unlit materials are useful for flat shading, stylized effects, and for improving\n * > performance on mobile devices. Source: [Model by Hayden VanEarden](https://sketchfab.com/3d-models/summertime-kirby-c5711316103a4d67a62c34cfe8710938)._\n *\n * Unlit (also \"Shadeless\" or \"Constant\") materials provide a simple alternative to the Physically\n * Based Rendering (PBR) shading models provided by the core specification. Unlit materials are\n * often useful for cheaper rendering on performance-contrained devices, e.g. mobile phones.\n * Additionally, unlit materials can be very useful in achieving stylized, non-photo-realistic\n * effects like hand painted illustrative styles or baked toon shaders.\n *\n * Properties:\n * - {@link Unlit}\n *\n * ### Example\n *\n * The `KHRMaterialsUnlit` class provides a single {@link ExtensionProperty} type, `Unlit`, which may\n * be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsUnlit, Unlit } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const unlitExtension = document.createExtension(KHRMaterialsUnlit);\n *\n * // Create an Unlit property.\n * const unlit = unlitExtension.createUnlit();\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_unlit', unlit);\n * ```\n */\nclass KHRMaterialsUnlit extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_UNLIT;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Unlit property for use on a {@link Material}. */\n  createUnlit() {\n    return new Unlit(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const materialDefs = context.jsonDoc.json.materials || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_UNLIT]) {\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_UNLIT, this.createUnlit());\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      if (material.getExtension(KHR_MATERIALS_UNLIT)) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        materialDef.extensions[KHR_MATERIALS_UNLIT] = {};\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsUnlit.EXTENSION_NAME = KHR_MATERIALS_UNLIT;\n\n/**\n * Maps {@link Variant}s to {@link Material}s. See {@link KHRMaterialsVariants}.\n */\nclass Mapping extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_VARIANTS;\n    this.propertyType = 'Mapping';\n    this.parentTypes = ['MappingList'];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      material: null,\n      variants: new RefSet()\n    });\n  }\n  /** The {@link Material} designated for this {@link Primitive}, under the given variants. */\n  getMaterial() {\n    return this.getRef('material');\n  }\n  /** The {@link Material} designated for this {@link Primitive}, under the given variants. */\n  setMaterial(material) {\n    return this.setRef('material', material);\n  }\n  /** Adds a {@link Variant} to this mapping. */\n  addVariant(variant) {\n    return this.addRef('variants', variant);\n  }\n  /** Removes a {@link Variant} from this mapping. */\n  removeVariant(variant) {\n    return this.removeRef('variants', variant);\n  }\n  /** Lists {@link Variant}s in this mapping. */\n  listVariants() {\n    return this.listRefs('variants');\n  }\n}\nMapping.EXTENSION_NAME = KHR_MATERIALS_VARIANTS;\n\n/**\n * List of material variant {@link Mapping}s. See {@link KHRMaterialsVariants}.\n */\nclass MappingList extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_VARIANTS;\n    this.propertyType = 'MappingList';\n    this.parentTypes = [PropertyType.PRIMITIVE];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      mappings: new RefSet()\n    });\n  }\n  /** Adds a {@link Mapping} to this mapping. */\n  addMapping(mapping) {\n    return this.addRef('mappings', mapping);\n  }\n  /** Removes a {@link Mapping} from the list for this {@link Primitive}. */\n  removeMapping(mapping) {\n    return this.removeRef('mappings', mapping);\n  }\n  /** Lists {@link Mapping}s in this {@link Primitive}. */\n  listMappings() {\n    return this.listRefs('mappings');\n  }\n}\nMappingList.EXTENSION_NAME = KHR_MATERIALS_VARIANTS;\n\n/**\n * Defines a variant of a {@link Material}. See {@link KHRMaterialsVariants}.\n */\nclass Variant extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_VARIANTS;\n    this.propertyType = 'Variant';\n    this.parentTypes = ['MappingList'];\n  }\n}\nVariant.EXTENSION_NAME = KHR_MATERIALS_VARIANTS;\n\n/**\n * [`KHR_materials_variants`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_variants/)\n * defines alternate {@link Material} states for any {@link Primitive} in the scene.\n *\n * ![Illustration](/media/extensions/khr-materials-variants.jpg)\n *\n * > _**Figure:** A sneaker, in three material variants. Source: Khronos Group._\n *\n * Uses include product configurators, night/day states, healthy/damaged states, etc. The\n * `KHRMaterialsVariants` class provides three {@link ExtensionProperty} types: `Variant`, `Mapping`,\n * and `MappingList`. When attached to {@link Primitive} properties, these offer flexible ways of\n * defining the variants available to an application. Triggering a variant is out of scope of this\n * extension, but could be handled in the application with a UI dropdown, particular game states,\n * and so on.\n *\n * Mesh geometry cannot be changed by this extension, although another extension\n * (tentative: `KHR_mesh_variants`) is under consideration by the Khronos Group, for that purpose.\n *\n * Properties:\n * - {@link Variant}\n * - {@link Mapping}\n * - {@link MappingList}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsVariants } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const variantExtension = document.createExtension(KHRMaterialsVariants);\n *\n * // Create some Variant states.\n * const healthyVariant = variantExtension.createVariant('Healthy');\n * const damagedVariant = variantExtension.createVariant('Damaged');\n *\n * // Create mappings from a Variant state to a Material.\n * const healthyMapping = variantExtension.createMapping()\n * \t.addVariant(healthyVariant)\n * \t.setMaterial(healthyMat);\n * const damagedMapping = variantExtension.createMapping()\n * \t.addVariant(damagedVariant)\n * \t.setMaterial(damagedMat);\n *\n * // Attach the mappings to a Primitive.\n * primitive.setExtension(\n * \t'KHR_materials_variants',\n * \tvariantExtension.createMappingList()\n * \t\t.addMapping(healthyMapping)\n * \t\t.addMapping(damagedMapping)\n * );\n * ```\n *\n * A few notes about this extension:\n *\n * 1. Viewers that don't recognized this extension will show the default material for each primitive\n * \t instead, so assign that material accordingly. This material can be — but doesn't have to be —\n * \t associated with one of the available variants.\n * 2. Mappings can list multiple Variants. In that case, the first Mapping containing an active\n * \t Variant will be chosen by the viewer.\n * 3. Variant names are how these states are identified, so choose informative names.\n * 4. When writing the file to an unpacked `.gltf`, instead of an embedded `.glb`, viewers will have\n * \t the option of downloading only textures associated with the default state, and lazy-loading\n * \t any textures for inactive Variants only when they are needed.\n */\nclass KHRMaterialsVariants extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_VARIANTS;\n  }\n  /** Creates a new MappingList property. */\n  createMappingList() {\n    return new MappingList(this.document.getGraph());\n  }\n  /** Creates a new Variant property. */\n  createVariant(name = '') {\n    return new Variant(this.document.getGraph(), name);\n  }\n  /** Creates a new Mapping property. */\n  createMapping() {\n    return new Mapping(this.document.getGraph());\n  }\n  /** Lists all Variants on the current Document. */\n  listVariants() {\n    return Array.from(this.properties).filter(prop => prop instanceof Variant);\n  }\n  /** @hidden */\n  read(context) {\n    const jsonDoc = context.jsonDoc;\n    if (!jsonDoc.json.extensions || !jsonDoc.json.extensions[KHR_MATERIALS_VARIANTS]) return this;\n    // Read all top-level variant names.\n    const variantsRootDef = jsonDoc.json.extensions[KHR_MATERIALS_VARIANTS];\n    const variantDefs = variantsRootDef.variants || [];\n    const variants = variantDefs.map(variantDef => this.createVariant().setName(variantDef.name || ''));\n    // For each mesh primitive, read its material/variant mappings.\n    const meshDefs = jsonDoc.json.meshes || [];\n    meshDefs.forEach((meshDef, meshIndex) => {\n      const mesh = context.meshes[meshIndex];\n      const primDefs = meshDef.primitives || [];\n      primDefs.forEach((primDef, primIndex) => {\n        if (!primDef.extensions || !primDef.extensions[KHR_MATERIALS_VARIANTS]) {\n          return;\n        }\n        const mappingList = this.createMappingList();\n        const variantPrimDef = primDef.extensions[KHR_MATERIALS_VARIANTS];\n        for (const mappingDef of variantPrimDef.mappings) {\n          const mapping = this.createMapping();\n          if (mappingDef.material !== undefined) {\n            mapping.setMaterial(context.materials[mappingDef.material]);\n          }\n          for (const variantIndex of mappingDef.variants || []) {\n            mapping.addVariant(variants[variantIndex]);\n          }\n          mappingList.addMapping(mapping);\n        }\n        mesh.listPrimitives()[primIndex].setExtension(KHR_MATERIALS_VARIANTS, mappingList);\n      });\n    });\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    const variants = this.listVariants();\n    if (!variants.length) return this;\n    // Write all top-level variant names.\n    const variantDefs = [];\n    const variantIndexMap = new Map();\n    for (const variant of variants) {\n      variantIndexMap.set(variant, variantDefs.length);\n      variantDefs.push(context.createPropertyDef(variant));\n    }\n    // For each mesh primitive, write its material/variant mappings.\n    for (const mesh of this.document.getRoot().listMeshes()) {\n      const meshIndex = context.meshIndexMap.get(mesh);\n      mesh.listPrimitives().forEach((prim, primIndex) => {\n        const mappingList = prim.getExtension(KHR_MATERIALS_VARIANTS);\n        if (!mappingList) return;\n        const primDef = context.jsonDoc.json.meshes[meshIndex].primitives[primIndex];\n        const mappingDefs = mappingList.listMappings().map(mapping => {\n          const mappingDef = context.createPropertyDef(mapping);\n          const material = mapping.getMaterial();\n          if (material) {\n            mappingDef.material = context.materialIndexMap.get(material);\n          }\n          mappingDef.variants = mapping.listVariants().map(variant => variantIndexMap.get(variant));\n          return mappingDef;\n        });\n        primDef.extensions = primDef.extensions || {};\n        primDef.extensions[KHR_MATERIALS_VARIANTS] = {\n          mappings: mappingDefs\n        };\n      });\n    }\n    jsonDoc.json.extensions = jsonDoc.json.extensions || {};\n    jsonDoc.json.extensions[KHR_MATERIALS_VARIANTS] = {\n      variants: variantDefs\n    };\n    return this;\n  }\n}\nKHRMaterialsVariants.EXTENSION_NAME = KHR_MATERIALS_VARIANTS;\n\nconst {\n  G\n} = TextureChannel;\n/**\n * Defines volume on a PBR {@link Material}. See {@link KHRMaterialsVolume}.\n */\nclass Volume extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_VOLUME;\n    this.propertyType = 'Volume';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      thicknessFactor: 0.0,\n      thicknessTexture: null,\n      thicknessTextureInfo: new TextureInfo(this.graph, 'thicknessTexture'),\n      attenuationDistance: Infinity,\n      attenuationColor: [1.0, 1.0, 1.0]\n    });\n  }\n  /**********************************************************************************************\n   * Thickness.\n   */\n  /**\n   * Thickness of the volume beneath the surface in meters in the local coordinate system of the\n   * node. If the value is 0 the material is thin-walled. Otherwise the material is a volume\n   * boundary. The doubleSided property has no effect on volume boundaries.\n   */\n  getThicknessFactor() {\n    return this.get('thicknessFactor');\n  }\n  /**\n   * Thickness of the volume beneath the surface in meters in the local coordinate system of the\n   * node. If the value is 0 the material is thin-walled. Otherwise the material is a volume\n   * boundary. The doubleSided property has no effect on volume boundaries.\n   */\n  setThicknessFactor(factor) {\n    return this.set('thicknessFactor', factor);\n  }\n  /**\n   * Texture that defines the thickness, stored in the G channel. This will be multiplied by\n   * thicknessFactor.\n   */\n  getThicknessTexture() {\n    return this.getRef('thicknessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its thickness texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getThicknessTextureInfo() {\n    return this.getRef('thicknessTexture') ? this.getRef('thicknessTextureInfo') : null;\n  }\n  /**\n   * Texture that defines the thickness, stored in the G channel. This will be multiplied by\n   * thicknessFactor.\n   */\n  setThicknessTexture(texture) {\n    return this.setRef('thicknessTexture', texture, {\n      channels: G\n    });\n  }\n  /**********************************************************************************************\n   * Attenuation.\n   */\n  /**\n   * Density of the medium given as the average distance in meters that light travels in the\n   * medium before interacting with a particle.\n   */\n  getAttenuationDistance() {\n    return this.get('attenuationDistance');\n  }\n  /**\n   * Density of the medium given as the average distance in meters that light travels in the\n   * medium before interacting with a particle.\n   */\n  setAttenuationDistance(distance) {\n    return this.set('attenuationDistance', distance);\n  }\n  /**\n   * Color (linear) that white light turns into due to absorption when reaching the attenuation\n   * distance.\n   */\n  getAttenuationColor() {\n    return this.get('attenuationColor');\n  }\n  /**\n   * Color (linear) that white light turns into due to absorption when reaching the attenuation\n   * distance.\n   */\n  setAttenuationColor(color) {\n    return this.set('attenuationColor', color);\n  }\n}\nVolume.EXTENSION_NAME = KHR_MATERIALS_VOLUME;\n\n/**\n * [KHR_materials_volume](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_volume/)\n * adds refraction, absorption, or scattering to a glTF PBR material already using transmission or\n * translucency.\n *\n * ![Illustration](/media/extensions/khr-materials-volume.png)\n *\n * > _**Figure:** Base color changes the amount of light passing through the volume boundary\n * > (left). The overall color of the object is the same everywhere, as if the object is covered\n * > with a colored, transparent foil. Absorption changes the amount of light traveling through the\n * > volume (right). The overall color depends on the distance the light traveled through it; at\n * > small distances (tail of the dragon) less light is absorbed and the color is brighter than at\n * > large distances. Source: Khronos Group._\n *\n * By default, a glTF 2.0 material describes the scattering properties of a surface enclosing an\n * infinitely thin volume. The surface defined by the mesh represents a thin wall. The volume\n * extension makes it possible to turn the surface into an interface between volumes. The mesh to\n * which the material is attached defines the boundaries of an homogeneous medium and therefore must\n * be manifold. Volumes provide effects like refraction, absorption and scattering. Scattering\n * effects will require future (TBD) extensions.\n *\n * The volume extension must be combined with {@link KHRMaterialsTransmission} or\n * `KHR_materials_translucency` in order to define entry of light into the volume.\n *\n * Properties:\n * - {@link Volume}\n *\n * ### Example\n *\n * The `KHRMaterialsVolume` class provides a single {@link ExtensionProperty} type, `Volume`, which\n * may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsVolume, Volume } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const volumeExtension = document.createExtension(KHRMaterialsVolume);\n *\n * // Create a Volume property.\n * const volume = volumeExtension.createVolume()\n * \t.setThicknessFactor(1.0)\n * \t.setThicknessTexture(texture)\n * \t.setAttenuationDistance(1.0)\n * \t.setAttenuationColorFactor([1, 0.5, 0.5]);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_volume', volume);\n * ```\n *\n * A thickness texture is required in most realtime renderers, and can be baked in software such as\n * Blender or Substance Painter. When `thicknessFactor = 0`, all volumetric effects are disabled.\n */\nclass KHRMaterialsVolume extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_VOLUME;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Volume property for use on a {@link Material}. */\n  createVolume() {\n    return new Volume(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_VOLUME]) {\n        const volume = this.createVolume();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_VOLUME, volume);\n        const volumeDef = materialDef.extensions[KHR_MATERIALS_VOLUME];\n        // Factors.\n        if (volumeDef.thicknessFactor !== undefined) {\n          volume.setThicknessFactor(volumeDef.thicknessFactor);\n        }\n        if (volumeDef.attenuationDistance !== undefined) {\n          volume.setAttenuationDistance(volumeDef.attenuationDistance);\n        }\n        if (volumeDef.attenuationColor !== undefined) {\n          volume.setAttenuationColor(volumeDef.attenuationColor);\n        }\n        // Textures.\n        if (volumeDef.thicknessTexture !== undefined) {\n          const textureInfoDef = volumeDef.thicknessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          volume.setThicknessTexture(texture);\n          context.setTextureInfo(volume.getThicknessTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const volume = material.getExtension(KHR_MATERIALS_VOLUME);\n      if (volume) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const volumeDef = materialDef.extensions[KHR_MATERIALS_VOLUME] = {};\n        if (volume.getThicknessFactor() > 0) {\n          volumeDef.thicknessFactor = volume.getThicknessFactor();\n        }\n        if (Number.isFinite(volume.getAttenuationDistance())) {\n          volumeDef.attenuationDistance = volume.getAttenuationDistance();\n        }\n        if (!MathUtils.eq(volume.getAttenuationColor(), [1, 1, 1])) {\n          volumeDef.attenuationColor = volume.getAttenuationColor();\n        }\n        // Textures.\n        if (volume.getThicknessTexture()) {\n          const texture = volume.getThicknessTexture();\n          const textureInfo = volume.getThicknessTextureInfo();\n          volumeDef.thicknessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsVolume.EXTENSION_NAME = KHR_MATERIALS_VOLUME;\n\n/**\n * [`KHR_mesh_quantization`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/)\n * expands allowed component types for vertex attributes to include 16- and 8-bit storage.\n *\n * Quantization provides a memory/precision tradeoff — depending on the application needs, 16-bit or\n * 8-bit storage can be sufficient for mesh geometry, at 1/2 or 1/4 the size. For example, a 10x10\n * mesh might be written to a uint16 {@link Accessor}, with values `0–65536`, normalized to be\n * interpreted as `0–1`. With an additional 10x scale on any node {@link Node} instantiating the\n * quantized {@link Mesh}, the model retains its original scale with a minimal quality loss and\n * up to 50% file size reduction.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the\n * {@link Document}, and affects the entire Document by allowing more flexible use of\n * {@link Accessor} types for vertex attributes. Without the Extension, the same use of these data\n * types would yield an invalid glTF document, under the stricter core glTF specification.\n *\n * Properties:\n * - N/A\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMeshQuantization } from '@gltf-transform/extensions';\n * import { quantize } from '@gltf-transform/functions';\n *\n * // Create an Extension attached to the Document.\n * const quantizationExtension = document.createExtension(KHRMeshQuantization).setRequired(true);\n *\n * // Use Uint16Array, Uint8Array, Int16Array, and Int8Array in vertex accessors manually,\n * // or apply the provided quantize() function to compute quantized accessors automatically:\n * await document.transform(quantize({\n * \tquantizePosition: 16,\n * \tquantizeNormal: 12,\n * \tquantizeTexcoord: 14\n * }));\n * ```\n *\n * For more documentation about automatic quantization, see the {@link quantize} function.\n */\nclass KHRMeshQuantization extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MESH_QUANTIZATION;\n  }\n  /** @hidden */\n  read(_) {\n    return this;\n  }\n  /** @hidden */\n  write(_) {\n    return this;\n  }\n}\nKHRMeshQuantization.EXTENSION_NAME = KHR_MESH_QUANTIZATION;\n\nclass KTX2ImageUtils {\n  match(array) {\n    return array[0] === 0xab && array[1] === 0x4b && array[2] === 0x54 && array[3] === 0x58 && array[4] === 0x20 && array[5] === 0x32 && array[6] === 0x30 && array[7] === 0xbb && array[8] === 0x0d && array[9] === 0x0a && array[10] === 0x1a && array[11] === 0x0a;\n  }\n  getSize(array) {\n    const container = read(array);\n    return [container.pixelWidth, container.pixelHeight];\n  }\n  getChannels(array) {\n    const container = read(array);\n    const dfd = container.dataFormatDescriptor[0];\n    if (dfd.colorModel === KHR_DF_MODEL_ETC1S) {\n      return dfd.samples.length === 2 && (dfd.samples[1].channelType & 0xf) === 15 ? 4 : 3;\n    } else if (dfd.colorModel === KHR_DF_MODEL_UASTC) {\n      return (dfd.samples[0].channelType & 0xf) === 3 ? 4 : 3;\n    }\n    throw new Error(`Unexpected KTX2 colorModel, \"${dfd.colorModel}\".`);\n  }\n  getVRAMByteLength(array) {\n    const container = read(array);\n    const hasAlpha = this.getChannels(array) > 3;\n    let uncompressedBytes = 0;\n    for (let i = 0; i < container.levels.length; i++) {\n      const level = container.levels[i];\n      // Use level.uncompressedByteLength for UASTC; for ETC1S it's 0.\n      if (level.uncompressedByteLength) {\n        uncompressedBytes += level.uncompressedByteLength;\n      } else {\n        const levelWidth = Math.max(1, Math.floor(container.pixelWidth / Math.pow(2, i)));\n        const levelHeight = Math.max(1, Math.floor(container.pixelHeight / Math.pow(2, i)));\n        const blockSize = hasAlpha ? 16 : 8;\n        uncompressedBytes += levelWidth / 4 * (levelHeight / 4) * blockSize;\n      }\n    }\n    return uncompressedBytes;\n  }\n}\n/**\n * [`KHR_texture_basisu`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu)\n * enables KTX2 GPU textures with Basis Universal supercompression for any material texture.\n *\n * GPU texture formats, unlike traditional image formats, remain compressed in GPU memory. As a\n * result, they (1) upload to the GPU much more quickly, and (2) require much less GPU memory. In\n * certain cases they may also have smaller filesizes than PNG or JPEG textures, but this is not\n * guaranteed. GPU textures often require more careful tuning during compression to maintain image\n * quality, but this extra effort is worthwhile for applications that need to maintain a smooth\n * framerate while uploading images, or where GPU memory is limited.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the\n * {@link Document}, and affects the entire Document by allowing use of the `image/ktx2` MIME type\n * and passing KTX2 image data to the {@link Texture.setImage} method. Without the Extension, the\n * same MIME types and image data would yield an invalid glTF document, under the stricter core glTF\n * specification.\n *\n * Properties:\n * - N/A\n *\n * ### Example\n *\n * ```typescript\n * import { KHRTextureBasisu } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const basisuExtension = document.createExtension(KHRTextureBasisu)\n * \t.setRequired(true);\n * document.createTexture('MyCompressedTexture')\n * \t.setMimeType('image/ktx2')\n * \t.setImage(fs.readFileSync('my-texture.ktx2'));\n * ```\n *\n * Compression is not done automatically when adding the extension as shown above — you must\n * compress the image data first, then pass the `.ktx2` payload to {@link Texture.setImage}. The\n * glTF Transform CLI has functions to help with this, or any similar KTX2-capable\n * utility will work.\n *\n * When the `KHR_texture_basisu` extension is added to a file by glTF Transform, the extension\n * should always be required. This tool does not support writing assets that \"fall back\" to optional\n * PNG or JPEG image data.\n *\n * > _**NOTICE:** Compressing some textures — particularly 3-component (RGB) normal maps, and\n * > occlusion/roughness/metalness maps, may give poor results with the ETC1S compression option.\n * > These issues can often be avoided with the larger UASTC compression option, or by upscaling the\n * > texture before compressing it.\n * >\n * > For best results when authoring new textures, use\n * > [texture dilation](https://docs.substance3d.com/spdoc/padding-134643719.html) and minimize\n * > prominent UV seams._\n */\nclass KHRTextureBasisu extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_TEXTURE_BASISU;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.TEXTURE];\n  }\n  /** @hidden */\n  static register() {\n    ImageUtils.registerFormat('image/ktx2', new KTX2ImageUtils());\n  }\n  /** @hidden */\n  preread(context) {\n    context.jsonDoc.json.textures.forEach(textureDef => {\n      if (textureDef.extensions && textureDef.extensions[KHR_TEXTURE_BASISU]) {\n        const basisuDef = textureDef.extensions[KHR_TEXTURE_BASISU];\n        textureDef.source = basisuDef.source;\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listTextures().forEach(texture => {\n      if (texture.getMimeType() === 'image/ktx2') {\n        const imageIndex = context.imageIndexMap.get(texture);\n        jsonDoc.json.textures.forEach(textureDef => {\n          if (textureDef.source === imageIndex) {\n            textureDef.extensions = textureDef.extensions || {};\n            textureDef.extensions[KHR_TEXTURE_BASISU] = {\n              source: textureDef.source\n            };\n            delete textureDef.source;\n          }\n        });\n      }\n    });\n    return this;\n  }\n}\nKHRTextureBasisu.EXTENSION_NAME = KHR_TEXTURE_BASISU;\n\n/**\n * Defines UV transform for a {@link TextureInfo}. See {@link KHRTextureTransform}.\n */\nclass Transform extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_TEXTURE_TRANSFORM;\n    this.propertyType = 'Transform';\n    this.parentTypes = [PropertyType.TEXTURE_INFO];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      offset: [0.0, 0.0],\n      rotation: 0,\n      scale: [1.0, 1.0],\n      texCoord: null\n    });\n  }\n  getOffset() {\n    return this.get('offset');\n  }\n  setOffset(offset) {\n    return this.set('offset', offset);\n  }\n  getRotation() {\n    return this.get('rotation');\n  }\n  setRotation(rotation) {\n    return this.set('rotation', rotation);\n  }\n  getScale() {\n    return this.get('scale');\n  }\n  setScale(scale) {\n    return this.set('scale', scale);\n  }\n  getTexCoord() {\n    return this.get('texCoord');\n  }\n  setTexCoord(texCoord) {\n    return this.set('texCoord', texCoord);\n  }\n}\nTransform.EXTENSION_NAME = KHR_TEXTURE_TRANSFORM;\n\n/**\n * [`KHR_texture_transform`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_texture_transform/)\n * adds offset, rotation, and scale to {@link TextureInfo} properties.\n *\n * Affine UV transforms are useful for reducing the number of textures the GPU must load, improving\n * performance when used in techniques like texture atlases. UV transforms cannot be animated at\n * this time.\n *\n * Properties:\n * - {@link Transform}\n *\n * ### Example\n *\n * The `KHRTextureTransform` class provides a single {@link ExtensionProperty} type, `Transform`, which\n * may be attached to any {@link TextureInfo} instance. For example:\n *\n * ```typescript\n * import { KHRTextureTransform } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const transformExtension = document.createExtension(KHRTextureTransform)\n * \t.setRequired(true);\n *\n * // Create a reusable Transform.\n * const transform = transformExtension.createTransform()\n * \t.setScale([100, 100]);\n *\n * // Apply the Transform to a Material's baseColorTexture.\n * document.createMaterial()\n * \t.setBaseColorTexture(myTexture)\n * \t.getBaseColorTextureInfo()\n * \t.setExtension('KHR_texture_transform', transform);\n * ```\n */\nclass KHRTextureTransform extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_TEXTURE_TRANSFORM;\n  }\n  /** Creates a new Transform property for use on a {@link TextureInfo}. */\n  createTransform() {\n    return new Transform(this.document.getGraph());\n  }\n  /** @hidden */\n  read(context) {\n    for (const [textureInfo, textureInfoDef] of Array.from(context.textureInfos.entries())) {\n      if (!textureInfoDef.extensions || !textureInfoDef.extensions[KHR_TEXTURE_TRANSFORM]) continue;\n      const transform = this.createTransform();\n      const transformDef = textureInfoDef.extensions[KHR_TEXTURE_TRANSFORM];\n      if (transformDef.offset !== undefined) transform.setOffset(transformDef.offset);\n      if (transformDef.rotation !== undefined) transform.setRotation(transformDef.rotation);\n      if (transformDef.scale !== undefined) transform.setScale(transformDef.scale);\n      if (transformDef.texCoord !== undefined) transform.setTexCoord(transformDef.texCoord);\n      textureInfo.setExtension(KHR_TEXTURE_TRANSFORM, transform);\n    }\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const textureInfoEntries = Array.from(context.textureInfoDefMap.entries());\n    for (const [textureInfo, textureInfoDef] of textureInfoEntries) {\n      const transform = textureInfo.getExtension(KHR_TEXTURE_TRANSFORM);\n      if (!transform) continue;\n      textureInfoDef.extensions = textureInfoDef.extensions || {};\n      const transformDef = {};\n      const eq = MathUtils.eq;\n      if (!eq(transform.getOffset(), [0, 0])) transformDef.offset = transform.getOffset();\n      if (transform.getRotation() !== 0) transformDef.rotation = transform.getRotation();\n      if (!eq(transform.getScale(), [1, 1])) transformDef.scale = transform.getScale();\n      if (transform.getTexCoord() != null) transformDef.texCoord = transform.getTexCoord();\n      textureInfoDef.extensions[KHR_TEXTURE_TRANSFORM] = transformDef;\n    }\n    return this;\n  }\n}\nKHRTextureTransform.EXTENSION_NAME = KHR_TEXTURE_TRANSFORM;\n\nconst PARENT_TYPES = [PropertyType.ROOT, PropertyType.SCENE, PropertyType.NODE, PropertyType.MESH, PropertyType.MATERIAL, PropertyType.TEXTURE, PropertyType.ANIMATION];\n/**\n * Defines an XMP packet associated with a Document or Property. See {@link KHRXMP}.\n */\nclass Packet extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_XMP_JSON_LD;\n    this.propertyType = 'Packet';\n    this.parentTypes = PARENT_TYPES;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      context: {},\n      properties: {}\n    });\n  }\n  /**********************************************************************************************\n   * Context.\n   */\n  /**\n   * Returns the XMP context definition URL for the given term.\n   * See: https://json-ld.org/spec/latest/json-ld/#the-context\n   * @param term Case-sensitive term. Usually a concise, lowercase, alphanumeric identifier.\n   */\n  getContext() {\n    return this.get('context');\n  }\n  /**\n   * Sets the XMP context definition URL for the given term.\n   * See: https://json-ld.org/spec/latest/json-ld/#the-context\n   *\n   * Example:\n   *\n   * ```typescript\n   * packet.setContext({\n   *   dc: 'http://purl.org/dc/elements/1.1/',\n   *   model3d: 'https://schema.khronos.org/model3d/xsd/1.0/',\n   * });\n   * ```\n   *\n   * @param term Case-sensitive term. Usually a concise, lowercase, alphanumeric identifier.\n   * @param definition URI for XMP namespace.\n   */\n  setContext(context) {\n    return this.set('context', _extends({}, context));\n  }\n  /**********************************************************************************************\n   * Properties.\n   */\n  /**\n   * Lists properties defined in this packet.\n   *\n   * Example:\n   *\n   * ```typescript\n   * packet.listProperties(); // → ['dc:Language', 'dc:Creator', 'xmp:CreateDate']\n   * ```\n   */\n  listProperties() {\n    return Object.keys(this.get('properties'));\n  }\n  /**\n   * Returns the value of a property, as a literal or JSONLD object.\n   *\n   * Example:\n   *\n   * ```typescript\n   * packet.getProperty('dc:Creator'); // → {\"@list\": [\"Acme, Inc.\"]}\n   * packet.getProperty('dc:Title'); // → {\"@type\": \"rdf:Alt\", \"rdf:_1\": {\"@language\": \"en-US\", \"@value\": \"Lamp\"}}\n   * packet.getProperty('xmp:CreateDate'); // → \"2022-01-01\"\n   * ```\n   */\n  getProperty(name) {\n    const properties = this.get('properties');\n    return name in properties ? properties[name] : null;\n  }\n  /**\n   * Sets the value of a property, as a literal or JSONLD object.\n   *\n   * Example:\n   *\n   * ```typescript\n   * packet.setProperty('dc:Creator', {'@list': ['Acme, Inc.']});\n   * packet.setProperty('dc:Title', {\n   * \t'@type': 'rdf:Alt',\n   * \t'rdf:_1': {'@language': 'en-US', '@value': 'Lamp'}\n   * });\n   * packet.setProperty('model3d:preferredSurfaces', {'@list': ['vertical']});\n   * ```\n   */\n  setProperty(name, value) {\n    this._assertContext(name);\n    const properties = _extends({}, this.get('properties'));\n    if (value) {\n      properties[name] = value;\n    } else {\n      delete properties[name];\n    }\n    return this.set('properties', properties);\n  }\n  /**********************************************************************************************\n   * Serialize / Deserialize.\n   */\n  /**\n   * Serializes the packet context and properties to a JSONLD object.\n   */\n  toJSONLD() {\n    const context = copyJSON(this.get('context'));\n    const properties = copyJSON(this.get('properties'));\n    return _extends({\n      '@context': context\n    }, properties);\n  }\n  /**\n   * Deserializes a JSONLD packet, then overwrites existing context and properties with\n   * the new values.\n   */\n  fromJSONLD(jsonld) {\n    jsonld = copyJSON(jsonld);\n    // Context.\n    const context = jsonld['@context'];\n    if (context) this.set('context', context);\n    delete jsonld['@context'];\n    // Properties.\n    return this.set('properties', jsonld);\n  }\n  /**********************************************************************************************\n   * Validation.\n   */\n  /** @hidden */\n  _assertContext(name) {\n    const prefix = name.split(':')[0];\n    if (!(prefix in this.get('context'))) {\n      throw new Error(`${KHR_XMP_JSON_LD}: Missing context for term, \"${name}\".`);\n    }\n  }\n}\nPacket.EXTENSION_NAME = KHR_XMP_JSON_LD;\nfunction copyJSON(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\n/**\n * [KHR_xmp_json_ld](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_xmp_json_ld/)\n * defines XMP metadata associated with a glTF asset.\n *\n * XMP metadata provides standardized fields describing the content, provenance, usage\n * restrictions, or other attributes of a 3D model. XMP metadata does not generally affect the\n * parsing or runtime behavior of the content — for that, use custom extensions, custom vertex\n * attributes, or extras. Similarly, storage mechanisms other than XMP should be preferred\n * for binary content like mesh data, animations, or textures.\n *\n * Generally XMP metadata is associated with the entire glTF asset by attaching an XMP {@link Packet}\n * to the document {@link Root}. In less common cases where metadata must be associated with\n * specific subsets of a document, XMP Packets may be attached to {@link Scene}, {@link Node},\n * {@link Mesh}, {@link Material}, {@link Texture}, or {@link Animation} properties.\n *\n * Within each packet, XMP properties become available when an\n * [XMP namespace](https://www.adobe.io/xmp/docs/XMPNamespaces/) is registered\n * with {@link Packet.setContext}. Packets cannot use properties whose namespaces are not\n * registered as context. While not all XMP namespaces are relevant to 3D assets, some common\n * namespaces provide useful metadata about authorship and provenance. Additionally, the `model3d`\n * namespace provides certain properties specific to 3D content, such as Augmented Reality (AR)\n * orientation data.\n *\n * Common XMP contexts for 3D models include:\n *\n * | Prefix      | URI                                         | Name                           |\n * |:------------|:--------------------------------------------|:-------------------------------|\n * | `dc`        | http://purl.org/dc/elements/1.1/            | Dublin Core                    |\n * | `model3d`   | https://schema.khronos.org/model3d/xsd/1.0/ | Model 3D                       |\n * | `rdf`       | http://www.w3.org/1999/02/22-rdf-syntax-ns# | Resource Description Framework |\n * | `xmp`       | http://ns.adobe.com/xap/1.0/                | XMP                            |\n * | `xmpRights` | http://ns.adobe.com/xap/1.0/rights/         | XMP Rights Management          |\n *\n * Only the XMP contexts required for a packet should be assigned, and different packets\n * in the same asset may use different contexts. For greater detail on available XMP\n * contexts and how to use them in glTF assets, see the\n * [3DC Metadata Recommendations](https://github.com/KhronosGroup/3DC-Metadata-Recommendations/blob/main/model3d.md).\n *\n * Properties:\n * - {@link Packet}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRXMP, Packet } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const xmpExtension = document.createExtension(KHRXMP);\n *\n * // Create Packet property.\n * const packet = xmpExtension.createPacket()\n * \t.setContext({\n * \t\tdc: 'http://purl.org/dc/elements/1.1/',\n * \t})\n *\t.setProperty('dc:Creator', {\"@list\": [\"Acme, Inc.\"]});\n *\n * // Option 1: Assign to Document Root.\n * document.getRoot().setExtension('KHR_xmp_json_ld', packet);\n *\n * // Option 2: Assign to a specific Property.\n * texture.setExtension('KHR_xmp_json_ld', packet);\n * ```\n */\nclass KHRXMP extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_XMP_JSON_LD;\n  }\n  /** Creates a new XMP packet, to be linked with a {@link Document} or {@link Property Properties}. */\n  createPacket() {\n    return new Packet(this.document.getGraph());\n  }\n  /** Lists XMP packets currently defined in a {@link Document}. */\n  listPackets() {\n    return Array.from(this.properties);\n  }\n  /** @hidden */\n  read(context) {\n    var _context$jsonDoc$json;\n    const extensionDef = (_context$jsonDoc$json = context.jsonDoc.json.extensions) == null ? void 0 : _context$jsonDoc$json[KHR_XMP_JSON_LD];\n    if (!extensionDef || !extensionDef.packets) return this;\n    // Deserialize packets.\n    const json = context.jsonDoc.json;\n    const root = this.document.getRoot();\n    const packets = extensionDef.packets.map(packetDef => this.createPacket().fromJSONLD(packetDef));\n    const defLists = [[json.asset], json.scenes, json.nodes, json.meshes, json.materials, json.images, json.animations];\n    const propertyLists = [[root], root.listScenes(), root.listNodes(), root.listMeshes(), root.listMaterials(), root.listTextures(), root.listAnimations()];\n    // Assign packets.\n    for (let i = 0; i < defLists.length; i++) {\n      const defs = defLists[i] || [];\n      for (let j = 0; j < defs.length; j++) {\n        const def = defs[j];\n        if (def.extensions && def.extensions[KHR_XMP_JSON_LD]) {\n          const xmpDef = def.extensions[KHR_XMP_JSON_LD];\n          propertyLists[i][j].setExtension(KHR_XMP_JSON_LD, packets[xmpDef.packet]);\n        }\n      }\n    }\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const {\n      json\n    } = context.jsonDoc;\n    const packetDefs = [];\n    for (const packet of this.properties) {\n      // Serialize packets.\n      packetDefs.push(packet.toJSONLD());\n      // Assign packets.\n      for (const parent of packet.listParents()) {\n        let parentDef;\n        switch (parent.propertyType) {\n          case PropertyType.ROOT:\n            parentDef = json.asset;\n            break;\n          case PropertyType.SCENE:\n            parentDef = json.scenes[context.sceneIndexMap.get(parent)];\n            break;\n          case PropertyType.NODE:\n            parentDef = json.nodes[context.nodeIndexMap.get(parent)];\n            break;\n          case PropertyType.MESH:\n            parentDef = json.meshes[context.meshIndexMap.get(parent)];\n            break;\n          case PropertyType.MATERIAL:\n            parentDef = json.materials[context.materialIndexMap.get(parent)];\n            break;\n          case PropertyType.TEXTURE:\n            parentDef = json.images[context.imageIndexMap.get(parent)];\n            break;\n          case PropertyType.ANIMATION:\n            parentDef = json.animations[context.animationIndexMap.get(parent)];\n            break;\n          default:\n            parentDef = null;\n            this.document.getLogger().warn(`[${KHR_XMP_JSON_LD}]: Unsupported parent property, \"${parent.propertyType}\"`);\n            break;\n        }\n        if (!parentDef) continue;\n        parentDef.extensions = parentDef.extensions || {};\n        parentDef.extensions[KHR_XMP_JSON_LD] = {\n          packet: packetDefs.length - 1\n        };\n      }\n    }\n    if (packetDefs.length > 0) {\n      json.extensions = json.extensions || {};\n      json.extensions[KHR_XMP_JSON_LD] = {\n        packets: packetDefs\n      };\n    }\n    return this;\n  }\n}\nKHRXMP.EXTENSION_NAME = KHR_XMP_JSON_LD;\n\nconst KHRONOS_EXTENSIONS = [KHRDracoMeshCompression, KHRLightsPunctual, KHRMaterialsAnisotropy, KHRMaterialsClearcoat, KHRMaterialsDiffuseTransmission, KHRMaterialsDispersion, KHRMaterialsEmissiveStrength, KHRMaterialsIOR, KHRMaterialsIridescence, KHRMaterialsPBRSpecularGlossiness, KHRMaterialsSpecular, KHRMaterialsSheen, KHRMaterialsTransmission, KHRMaterialsUnlit, KHRMaterialsVariants, KHRMaterialsVolume, KHRMeshQuantization, KHRTextureBasisu, KHRTextureTransform, KHRXMP];\nconst ALL_EXTENSIONS = [EXTMeshGPUInstancing, EXTMeshoptCompression, EXTTextureAVIF, EXTTextureWebP, ...KHRONOS_EXTENSIONS];\n\nexport { ALL_EXTENSIONS, Anisotropy, Clearcoat, DiffuseTransmission, Dispersion, EXTMeshGPUInstancing, EXTMeshoptCompression, EXTTextureAVIF, EXTTextureWebP, EmissiveStrength, INSTANCE_ATTRIBUTE, IOR, InstancedMesh, Iridescence, KHRDracoMeshCompression, KHRLightsPunctual, KHRMaterialsAnisotropy, KHRMaterialsClearcoat, KHRMaterialsDiffuseTransmission, KHRMaterialsDispersion, KHRMaterialsEmissiveStrength, KHRMaterialsIOR, KHRMaterialsIridescence, KHRMaterialsPBRSpecularGlossiness, KHRMaterialsSheen, KHRMaterialsSpecular, KHRMaterialsTransmission, KHRMaterialsUnlit, KHRMaterialsVariants, KHRMaterialsVolume, KHRMeshQuantization, KHRONOS_EXTENSIONS, KHRTextureBasisu, KHRTextureTransform, KHRXMP, Light, Mapping, MappingList, PBRSpecularGlossiness, Packet, Sheen, Specular, Transform, Transmission, Unlit, Variant, Volume };\n//# sourceMappingURL=index.modern.js.map\n","/* prettier-ignore */\r\nexport const defMatrix = [\r\n    1, 0, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1\r\n  ]\r\n","\r\n/** transform for attribute as specifiend in 3mf format\r\n * \r\n * When objects need to be transformed for rotation, scaling, or translation purposes, \r\n * row-major affine 3D matrices (4x4) are used. The matrix SHOULD NOT be singular or nearly singular.\r\n * Transforms are of the form, where only the first 3 column values are specified. \r\n * The last column is never provided, and has the fixed values 0.0, 0.0, 0.0, 1.0. \r\n * When specified as an attribute value, \r\n * matrices have the form \"m00 m01 m02 m10 m11 m12 m20 m21 m22 m30 m31 m32\" \r\n * where each value is a decimal number of arbitrary precision.\r\n * \r\n * @param {mat4} matrix\r\n * @return string tarnsform attribute value\r\n*/\r\nexport const matrix2str = m=>{\r\n    let str = ''\r\n    for(let i=0; i<16; i++){\r\n        if(i % 4 == 3) continue\r\n        if(i>0) str += ' '\r\n        str += m[i] || 0\r\n    }\r\n    return str\r\n}","import { defMatrix } from './defMatrix.js'\r\nimport { matrix2str } from './matrix2str.js'\r\n/**\r\n * \r\n * @param {string} id - must start with 1, can not be zero by spec\r\n * @param {mat4} matrix \r\n * @returns \r\n */\r\nexport const makeItem = (id = 1, matrix = defMatrix) =>\r\n  `    <item objectid=\"${id}\" transform=\"${matrix2str(matrix)}\" />\\n`\r\n","export const toDate3mf = d => (d ? d.toISOString().substring(0, 10) : '')\r\n","import { toDate3mf } from './toDate3mf.js'\r\n\r\n/**\r\n * @typedef Header\r\n * @prop {'micron'|'millimeter'|'centimeter'|'inch'|'foot'|'meter'} unit\r\n * @prop {string} [title]\r\n * @prop {string} [author]\r\n * @prop {string} [description]\r\n * @prop {string} [application]\r\n * @prop {string} [creationDate]\r\n * @prop {string} [license]\r\n * @prop {string} [modificationDate] \r\n * \r\n * \r\n * @param {Array<string>} out \r\n * @param {Header} param1 \r\n */\r\nexport function pushHeader(out,{\r\n  unit = 'millimeter',\r\n  title = 'jscad model',\r\n  author = '',\r\n  description = '',\r\n  application = 'jscad',\r\n  creationDate = new Date(),\r\n  license = '',\r\n  modificationDate,\r\n}={}) {\r\n  out.push(\r\n    `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<model unit=\"${unit}\" xml:lang=\"en-US\" xmlns=\"http://schemas.microsoft.com/3dmanufacturing/core/2015/02\" xmlns:slic3rpe=\"http://schemas.slic3r.org/3mf/2017/06\">\r\n  <metadata name=\"slic3rpe:Version3mf\">1</metadata>\r\n  <metadata name=\"Title\">${title}</metadata>\r\n  <metadata name=\"Designer\">${author}</metadata>\r\n  <metadata name=\"Description\">${description || title}</metadata>\r\n  <metadata name=\"Copyright\"></metadata>\r\n  <metadata name=\"LicenseTerms\">${license}</metadata>\r\n  <metadata name=\"Rating\"></metadata>\r\n  <metadata name=\"CreationDate\">${toDate3mf(creationDate)}</metadata>\r\n  <metadata name=\"ModificationDate\">${toDate3mf(modificationDate || creationDate)}</metadata>\r\n  <metadata name=\"Application\">${application}</metadata>\r\n   `,\r\n  )\r\n}\r\n","import {defMatrix} from './defMatrix.js'\r\nimport {matrix2str} from './matrix2str.js'\r\n\r\n/**\r\n * \r\n * @param {Array<String>} out \r\n * @param {string} id \r\n * @param {Array<import('../index.js').Component3MF>} children \r\n * @param {string} name \r\n */\r\nexport function pushObjectWithComponents(out, id, children, name) {\r\n  out.push(`<object id=\"${id}\" type=\"model\"${\r\n      name == null ? '' : ' name=\"' + name + '\"'}>\\n`)\r\n  out.push(` <components>\\n`)\r\n  children.forEach(\r\n      ({objectID, transform}) => {addComp(out, objectID, transform)})\r\n  out.push(` </components>\\n`)\r\n  out.push(`</object>\\n`)\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} out \r\n * @param {*} id - must start with 1, can not be zero by spec \r\n * @param {*} matrix \r\n */\r\nconst addComp = (out, id = 1, matrix = defMatrix) => {\r\n  out.push(\r\n      `    <component objectid=\"${id}\" transform=\"${matrix2str(matrix)}\" />\\n`)\r\n}\r\n","/**\r\n *\r\n * @param {Arrray<string>} out\r\n * @param {string} id\r\n * @param {Float32Array} vertices\r\n * @param {Uint32Array} indices\r\n * @param {number} precision\r\n * @param {string} [name]\r\n * @returns\r\n */\r\nexport function pushObjectWithMesh(\r\n    out, id, vertices, indices, precision, name) {\r\n  out.push(`  <object id=\"${id}\" type=\"model\"${\r\n      !name ? '' : ' name=\"' + name + '\"'}>\r\n   <mesh>\r\n    <vertices>\r\n`)\r\n\r\n  for (let i = 0; i < vertices.length; i += 3) {\r\n    out.push(`     <vertex x=\"${vertices[i].toPrecision(precision)}\" y=\"${\r\n        vertices[i + 1].toPrecision(\r\n            precision)}\" z=\"${vertices[i + 2].toPrecision(precision)}\" />\\n`)\r\n  }\r\n\r\n  out.push(`    </vertices>\r\n    <triangles>\r\n`)\r\n\r\n  for (let i = 0; i < indices.length; i += 3) {\r\n    out.push(`     <triangle v1=\"${indices[i]}\" v2=\"${indices[i + 1]}\" v3=\"${\r\n        indices[i + 2]}\" />\\n`)\r\n  }\r\n\r\n\r\n  out.push(`    </triangles>\r\n   </mesh>\r\n  </object>\r\n`)\r\n\r\n  return out\r\n}","\r\n/** File that describes content types inside a 3mf  */\r\nexport const fileForContentTypes = {\r\n  name:'[Content_Types].xml',\r\n  content: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\">\r\n<Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" />\r\n<Default Extension=\"model\" ContentType=\"application/vnd.ms-package.3dmanufacturing-3dmodel+xml\" />\r\n<Default Extension=\"png\" ContentType=\"image/png\" />\r\n</Types>`\r\n}\r\n\r\n","// this implementation exports to 3mf by filling array of strings and doing join\r\n// at the encoding tests for large files have shown significant speedup related\r\n// to using string concatenation\r\nimport { makeItem } from './src/makeItem.js'\r\nimport { pushHeader } from './src/pushHeader.js'\r\nimport { pushObjectWithComponents } from './src/pushObjectComponent.js'\r\nimport { pushObjectWithMesh } from './src/pushObjectMesh.js'\r\n\r\nexport * from './src/staticFiles.js'\r\n\r\n/**\r\n * @typedef Mesh3MF\r\n * @prop {string} id\r\n * @prop {Float32Array} vertices\r\n * @prop {Uint32Array} indices\r\n * @prop {string} [name]\r\n *\r\n * @typedef Mesh3MFSimpleExt\r\n * @prop {mat4} transform\r\n *\r\n * @typedef {Mesh3MF & Mesh3MFSimpleExt} Mesh3MFSimple\r\n *\r\n * @typedef Component3MF\r\n * @prop {string} id\r\n * @prop {string} name\r\n * @prop {Array<Child3MF>} children\r\n *\r\n * @typedef Child3MF\r\n * @prop {string} objectID\r\n * @prop {mat4} transform\r\n *\r\n * @typedef To3MF\r\n * @prop {Array<Mesh3MF>} meshes - manually declare meshes\r\n * @prop {Array<Component3MF>} [components] - components can combine items\r\n * @prop {Array<Child3MF>} items - output items, each pointing to component or mesh with objectID\r\n * @prop {number} precision\r\n * @prop {import('./src/pushHeader.js').Header} header\r\n */\r\n\r\n/**\r\n * @param {To3MF} options\r\n * @returns string\r\n */\r\nexport function to3dmodel({ meshes = [], components = [], items = [], precision = 17, header }) {\r\n  // items to be placed on the scene (build section of 3mf)\r\n  const out = []\r\n\r\n  // <model> tag is opened here\r\n  pushHeader(out, header)\r\n\r\n  // #region resources\r\n  out.push('  <resources>\\n')\r\n\r\n  if (items.length == 0) {\r\n    console.error('3MF empty build! Include items or simple.')\r\n  }\r\n\r\n  meshes.forEach(({ id, vertices, indices, name }) => pushObjectWithMesh(out, id, vertices, indices, precision, name))\r\n\r\n  components.forEach(({ id, children, name }) => {\r\n    pushObjectWithComponents(out, id, children, name)\r\n  })\r\n\r\n  out.push('  </resources>\\n')\r\n  // #endregion\r\n\r\n  out.push(`<build>\\n`)\r\n  items.forEach(({ objectID, transform }) => {\r\n    out.push(makeItem(objectID, transform))\r\n  })\r\n  out.push('</build>\\n')\r\n\r\n  out.push('</model>\\n') // model tag was opened in the pushHeader()\r\n\r\n  return out.join('')\r\n}\r\n\r\n/** Simple export provided meshes that have transform attached to them and autocreate items and pass to to3dmodel.\r\n *\r\n * @param {Array<Mesh3MFSimple>} meshes\r\n * @param {import('./src/pushHeader.js').Header} header\r\n * @param {number} precision\r\n * @returns string\r\n */\r\nexport function to3dmodelSimple(meshes, header, precision) {\r\n  const items = []\r\n  meshes.forEach(({ id, transform }) => {\r\n    items.push({ objectID: id, transform })\r\n  })\r\n  return to3dmodel({ meshes, items, header, precision })\r\n}\r\n\r\n/** File that describes file relationships inside a 3mf  */\r\nexport class FileForRelThumbnail {\r\n  constructor() {\r\n    this.idSeq = 0\r\n    this.lines = [\r\n      `<?xml version=\"1.0\" encoding=\"UTF-8\"?>`,\r\n      `<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">`,\r\n    ]\r\n  }\r\n  get name() {\r\n    return '_rels/.rels'\r\n  }\r\n    /**\r\n   *\r\n   * @param {*} target file path\r\n   * @param {*} xmlType xml schema url\r\n   */\r\n  addRel(target, xmlType) {\r\n    this.lines.push(`  <Relationship Target=\"${target}\" Id=\"rel-${++this.idSeq}\" Type=\"${xmlType}\" />`)\r\n  }\r\n  add3dModel(path) {\r\n    this.addRel(path, 'http://schemas.microsoft.com/3dmanufacturing/2013/01/3dmodel')\r\n  }\r\n  addThumbnail(path) {\r\n    this.addRel(path, 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/thumbnail')\r\n  }\r\n\r\n  get content() {\r\n    return this.lines.join('\\n') + `\\n</Relationships>`\r\n  }\r\n}\r\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== \"undefined\" ? Float32Array : Array;\nexport var RANDOM = Math.random;\nexport var ANGLE_ORDER = \"zyx\";\n\n/**\n * Symmetric round\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\n *\n * @param {Number} a value to round\n */\nexport function round(a) {\n  if (a >= 0) return Math.round(a);\n  return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\n}\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\nvar radian = 180 / Math.PI;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Convert Radian To Degree\n *\n * @param {Number} a Angle in Radians\n */\nexport function toDegree(a) {\n  return a * radian;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a          The first number to test.\n * @param {Number} b          The second number to test.\n * @param {Number} tolerance  Absolute or relative tolerance (default glMatrix.EPSILON)\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  var tolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return Math.abs(a - b) <= tolerance * Math.max(1, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n      a02 = a[2],\n      a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3 | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b00 = b[0],\n    b01 = b[1],\n    b02 = b[2];\n  var b10 = b[3],\n    b11 = b[4],\n    b12 = b[5];\n  var b20 = b[6],\n    b21 = b[7],\n    b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    x = v[0],\n    y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  var x = v[0],\n    y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8]);\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7],\n    a8 = a[8];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function slerp(out, a, b, t) {\n  var angle = Math.acos(Math.min(Math.max(dot(a, b), -1), 1));\n  var sinTotal = Math.sin(angle);\n  var ratioA = Math.sin((1 - t) * angle) / sinTotal;\n  var ratioB = Math.sin(t * angle) / sinTotal;\n  out[0] = ratioA * a[0] + ratioB * b[0];\n  out[1] = ratioA * a[1] + ratioB * b[1];\n  out[2] = ratioA * a[2] + ratioB * b[2];\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    bx = b[0],\n    by = b[1],\n    bz = b[2],\n    mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz)),\n    cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 3;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  out[3] = glMatrix.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} out the receiving vector\n * @param {ReadonlyVec4} u the first vector\n * @param {ReadonlyVec4} v the second vector\n * @param {ReadonlyVec4} w the third vector\n * @returns {vec4} result\n */\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n    B = v[0] * w[2] - v[2] * w[0],\n    C = v[0] * w[3] - v[3] * w[0],\n    D = v[1] * w[2] - v[2] * w[1],\n    E = v[1] * w[3] - v[3] * w[1],\n    F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  var rand;\n  rand = glMatrix.RANDOM();\n  v1 = rand * 2 - 1;\n  v2 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s1 = v1 * v1 + v2 * v2;\n  rand = glMatrix.RANDOM();\n  v3 = rand * 2 - 1;\n  v4 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s2 = v3 * v3 + v4 * v4;\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 4;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n\n/**\n * Quaternion in the format XYZW\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2],\n    bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var by = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bz = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function exp(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function ln(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2],\n    bw = b[3];\n  var omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n  // calculate coefficients\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x Angle to rotate around X axis in degrees.\n * @param {Number} y Angle to rotate around Y axis in degrees.\n * @param {Number} z Angle to rotate around Z axis in degrees.\n * @param {'xyz'|'xzy'|'yxz'|'yzx'|'zxy'|'zyx'} order Intrinsic order for conversion, default is zyx.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n  var order = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : glMatrix.ANGLE_ORDER;\n  var halfToRad = Math.PI / 360;\n  x *= halfToRad;\n  z *= halfToRad;\n  y *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  switch (order) {\n    case \"xyz\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"xzy\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    case \"yxz\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    case \"yzx\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"zxy\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"zyx\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    default:\n      throw new Error('Unknown angle order ' + order);\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a quaternion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport var clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport var fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport var copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport var set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport var add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport var scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport var dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport var lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport var length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport var squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport var normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport var exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions point approximately to the same direction.\n *\n * Both quaternions are assumed to be unit length.\n *\n * @param {ReadonlyQuat} a The first unit quaternion.\n * @param {ReadonlyQuat} b The second unit quaternion.\n * @returns {Boolean} True if the quaternions are equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(vec4.dot(a, b)) >= 1 - glMatrix.EPSILON;\n}\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","// Copyright 2023-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Extension, ExtensionProperty, PropertyType, WriterContext } from '@gltf-transform/core';\nconst NAME = 'EXT_mesh_manifold';\nconst MERGE = 'MERGE';\nexport class ManifoldPrimitive extends ExtensionProperty {\n    static EXTENSION_NAME = NAME;\n    init() {\n        ManifoldPrimitive.EXTENSION_NAME = NAME;\n        this.propertyType = 'ManifoldPrimitive';\n        this.parentTypes = [PropertyType.MESH];\n    }\n    getDefaults() {\n        return Object.assign(super.getDefaults(), { manifoldPrimitive: null, mergeIndices: null, mergeValues: null });\n    }\n    getMergeIndices() {\n        return this.getRef('mergeIndices');\n    }\n    getMergeValues() {\n        return this.getRef('mergeValues');\n    }\n    setMerge(indicesAccessor, valuesAccessor) {\n        if (indicesAccessor.getCount() !== valuesAccessor.getCount())\n            throw new Error('merge vectors must be the same length.');\n        this.setRef('mergeIndices', indicesAccessor);\n        return this.setRef('mergeValues', valuesAccessor);\n    }\n    getRunIndex() {\n        return this.get('runIndex');\n    }\n    setRunIndex(runIndex) {\n        return this.set('runIndex', runIndex);\n    }\n    setIndices(indices) {\n        return this.setRef('indices', indices);\n    }\n    getIndices() {\n        return this.getRef('indices');\n    }\n}\nexport class EXTManifold extends Extension {\n    extensionName = NAME;\n    prewriteTypes = [PropertyType.ACCESSOR];\n    static EXTENSION_NAME = NAME;\n    createManifoldPrimitive() {\n        return new ManifoldPrimitive(this.document.getGraph());\n    }\n    read(context) {\n        const { json } = context.jsonDoc;\n        const meshDefs = json.meshes || [];\n        meshDefs.forEach((meshDef, meshIndex) => {\n            if (!meshDef.extensions || !meshDef.extensions[NAME])\n                return;\n            const mesh = context.meshes[meshIndex];\n            const manifoldPrimitive = this.createManifoldPrimitive();\n            mesh.setExtension(NAME, manifoldPrimitive);\n            const manifoldDef = meshDef.extensions[NAME];\n            if (manifoldDef.manifoldPrimitive) {\n                let count = 0;\n                const runIndex = Array();\n                runIndex.push(count);\n                for (const primitive of mesh.listPrimitives()) {\n                    const indices = primitive.getIndices();\n                    if (!indices) {\n                        console.log('Skipping non-indexed primitive ', primitive.getName());\n                        continue;\n                    }\n                    count += indices.getCount();\n                    runIndex.push(count);\n                }\n                manifoldPrimitive.setRunIndex(runIndex);\n                manifoldPrimitive.setIndices(context.accessors[manifoldDef.manifoldPrimitive.indices]);\n            }\n            if (manifoldDef.mergeIndices != null && manifoldDef.mergeValues != null) {\n                manifoldPrimitive.setMerge(context.accessors[manifoldDef.mergeIndices], context.accessors[manifoldDef.mergeValues]);\n            }\n        });\n        return this;\n    }\n    prewrite(context) {\n        this.document.getRoot().listMeshes().forEach((mesh) => {\n            const manifoldPrimitive = mesh.getExtension(NAME);\n            if (!manifoldPrimitive)\n                return;\n            const indices = manifoldPrimitive.getIndices();\n            context.addAccessorToUsageGroup(indices, WriterContext.BufferViewUsage.ELEMENT_ARRAY_BUFFER);\n            const mergeFrom = manifoldPrimitive.getMergeIndices();\n            const mergeTo = manifoldPrimitive.getMergeValues();\n            if (!mergeFrom || !mergeTo)\n                return;\n            context.addAccessorToUsageGroup(mergeFrom, MERGE);\n            context.addAccessorToUsageGroup(mergeTo, MERGE);\n        });\n        return this;\n    }\n    write(context) {\n        const { json } = context.jsonDoc;\n        this.document.getRoot().listMeshes().forEach((mesh) => {\n            const manifoldPrimitive = mesh.getExtension(NAME);\n            if (!manifoldPrimitive)\n                return;\n            const meshIndex = context.meshIndexMap.get(mesh);\n            const meshDef = json.meshes[meshIndex];\n            const runIndex = manifoldPrimitive.getRunIndex();\n            const numPrimitive = runIndex.length - 1;\n            if (numPrimitive !== meshDef.primitives.length) {\n                throw new Error('The number of primitives must be exactly one less than the length of runIndex.');\n            }\n            const mergeIndicesIndex = context.accessorIndexMap.get(manifoldPrimitive.getMergeIndices());\n            const mergeValuesIndex = context.accessorIndexMap.get(manifoldPrimitive.getMergeValues());\n            const mergeIndices = json.accessors[mergeIndicesIndex];\n            const mergeValues = json.accessors[mergeValuesIndex];\n            const existingPrimitive = meshDef.primitives[0];\n            const primitive = {\n                indices: context.accessorIndexMap.get(manifoldPrimitive.getIndices()),\n                mode: existingPrimitive.mode,\n                attributes: { 'POSITION': existingPrimitive.attributes['POSITION'] }\n            };\n            const indices = json.accessors[primitive.indices];\n            if (!indices) {\n                return;\n            }\n            if (mergeIndices && mergeValues) {\n                indices.sparse = {\n                    count: mergeIndices.count,\n                    indices: {\n                        bufferView: mergeIndices.bufferView,\n                        byteOffset: mergeIndices.byteOffset,\n                        componentType: mergeIndices.componentType\n                    },\n                    values: {\n                        bufferView: mergeValues.bufferView,\n                        byteOffset: mergeValues.byteOffset,\n                    }\n                };\n            }\n            for (let i = 0; i < numPrimitive; ++i) {\n                const accessor = json.accessors[meshDef.primitives[i].indices];\n                accessor.bufferView = indices.bufferView;\n                accessor.byteOffset = indices.byteOffset + 4 * runIndex[i];\n                accessor.count = runIndex[i + 1] - runIndex[i];\n            }\n            meshDef.extensions = meshDef.extensions || {};\n            meshDef.extensions[NAME] = {\n                manifoldPrimitive: primitive,\n                mergeIndices: mergeIndicesIndex,\n                mergeValues: mergeValuesIndex\n            };\n            // Test the manifold primitive by replacing the material primitives\n            // meshDef.primitives = [primitive];\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=manifold-gltf.js.map","// Copyright 2023-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Accessor } from '@gltf-transform/core';\nimport { EXTManifold } from \"./manifold-gltf.js\";\nexport const attributeDefs = {\n    'POSITION': { type: Accessor.Type.VEC3, components: 3 },\n    'NORMAL': { type: Accessor.Type.VEC3, components: 3 },\n    'TANGENT': { type: Accessor.Type.VEC4, components: 4 },\n    'TEXCOORD_0': { type: Accessor.Type.VEC2, components: 2 },\n    'TEXCOORD_1': { type: Accessor.Type.VEC2, components: 2 },\n    'COLOR_0': { type: Accessor.Type.VEC3, components: 3 },\n    'JOINTS_0': { type: Accessor.Type.VEC4, components: 4 },\n    'WEIGHTS_0': { type: Accessor.Type.VEC4, components: 4 },\n    'SKIP_1': { type: null, components: 1 },\n    'SKIP_2': { type: null, components: 2 },\n    'SKIP_3': { type: null, components: 3 },\n    'SKIP_4': { type: null, components: 4 },\n};\n/**\n * Call this first to register the manifold extension so that readMesh and\n * writeMesh will work.\n */\nexport function setupIO(io) {\n    return io.registerExtensions([EXTManifold]);\n}\n/**\n * Read an input mesh into Manifold-compatible data structures, whether it\n * contains the EXT_mesh_manifold extension or not.\n *\n * @param mesh The Mesh to read.\n * @param attributes An array of attributes representing the order of desired\n *     properties returned in the vertProperties array of the output mesh. If\n *     omitted, this will be populated with the union of all attributes defined\n *     in the primitives of the input mesh. If present, the first entry must be\n *     'POSITION', and any attributes in the primitives that are not included in\n *     this list will be ignored, while those in the list but not defined in a\n *     primitive will be populated with zeros.\n * @returns The returned mesh is suitable for initializing a Manifold or Mesh of\n *     the Manifold library if desired. See Manifold documentation if you prefer\n *     to use these GL arrays in a different library. The runProperties array\n *     gives the Material and attributes list associated with each triangle run,\n *     which in turn corresponds to a primitive of the input mesh. These\n *     attributes are the intersection of the attributes present on the\n *     primitive and those requested in the attributes input.\n */\nexport function readMesh(mesh, attributes = []) {\n    const primitives = mesh.listPrimitives();\n    if (primitives.length === 0) {\n        return null;\n    }\n    if (attributes.length === 0) {\n        const attributeSet = new Set();\n        for (const primitive of primitives) {\n            const semantics = primitive.listSemantics();\n            for (const semantic of semantics) {\n                attributeSet.add(semantic);\n            }\n        }\n        let semantic;\n        for (semantic in attributeDefs) {\n            if (attributeSet.has(semantic)) {\n                attributes.push(semantic);\n                attributeSet.delete(semantic);\n            }\n        }\n        for (const semantic of attributeSet.keys()) {\n            attributes.push(semantic);\n        }\n    }\n    if (attributes.length < 1 || attributes[0] !== 'POSITION')\n        throw new Error('First attribute must be \"POSITION\".');\n    let numProp = 0;\n    const attributeOffsets = attributes.map((numProp = 0, def => {\n        const last = numProp;\n        numProp += attributeDefs[def].components;\n        return last;\n    }));\n    const manifoldPrimitive = mesh.getExtension('EXT_mesh_manifold');\n    let vertPropArray = Array();\n    let triVertArray = Array();\n    const runIndexArray = [0];\n    const mergeFromVertArray = Array();\n    const mergeToVertArray = Array();\n    const runProperties = Array();\n    if (manifoldPrimitive != null) {\n        const numVert = primitives[0].getAttribute('POSITION').getCount();\n        const foundAttribute = attributes.map((a) => attributeDefs[a].type == null);\n        vertPropArray = new Array(numProp * numVert);\n        for (const primitive of primitives) {\n            const indices = primitive.getIndices();\n            if (!indices) {\n                console.log('Skipping non-indexed primitive ', primitive.getName());\n                continue;\n            }\n            const attributesIn = primitive.listSemantics();\n            attributes.forEach((attributeOut, idx) => {\n                if (foundAttribute[idx]) {\n                    return;\n                }\n                for (const attributeIn of attributesIn) {\n                    if (attributeIn === attributeOut) {\n                        foundAttribute[idx] = true;\n                        const accessor = primitive.getAttribute(attributeIn);\n                        writeProperties(vertPropArray, accessor, numProp, attributeOffsets[idx]);\n                    }\n                }\n            });\n            triVertArray = [...triVertArray, ...indices.getArray()];\n            runIndexArray.push(triVertArray.length);\n            runProperties.push({\n                material: primitive.getMaterial(),\n                attributes: attributesIn.filter(b => attributes.some(a => a == b))\n            });\n        }\n        const mergeTriVert = manifoldPrimitive.getMergeIndices()?.getArray() ?? [];\n        const mergeTo = manifoldPrimitive.getMergeValues()?.getArray() ?? [];\n        const vert2merge = new Map();\n        for (const [i, idx] of mergeTriVert.entries()) {\n            vert2merge.set(triVertArray[idx], mergeTo[i]);\n        }\n        for (const [from, to] of vert2merge.entries()) {\n            mergeFromVertArray.push(from);\n            mergeToVertArray.push(to);\n        }\n    }\n    else {\n        for (const primitive of primitives) {\n            const indices = primitive.getIndices();\n            if (!indices) {\n                console.log('Skipping non-indexed primitive ', primitive.getName());\n                continue;\n            }\n            const numVert = vertPropArray.length / numProp;\n            vertPropArray =\n                [...vertPropArray, ...readPrimitive(primitive, numProp, attributes)];\n            triVertArray =\n                [...triVertArray, ...indices.getArray().map((i) => i + numVert)];\n            runIndexArray.push(triVertArray.length);\n            const attributesIn = primitive.listSemantics();\n            runProperties.push({\n                material: primitive.getMaterial(),\n                attributes: attributesIn.filter(b => attributes.some(a => a == b))\n            });\n        }\n    }\n    const vertProperties = new Float32Array(vertPropArray);\n    const triVerts = new Uint32Array(triVertArray);\n    const runIndex = new Uint32Array(runIndexArray);\n    const mergeFromVert = new Uint32Array(mergeFromVertArray);\n    const mergeToVert = new Uint32Array(mergeToVertArray);\n    const meshOut = { numProp, triVerts, vertProperties, runIndex, mergeFromVert, mergeToVert };\n    return { mesh: meshOut, runProperties };\n}\n/**\n * Write a Manifold Mesh into a glTF Mesh object, using the EXT_mesh_manifold\n * extension to allow for lossless roundtrip of the manifold mesh through the\n * glTF file.\n *\n * @param doc The glTF Document to which this Mesh will be added.\n * @param manifoldMesh The Manifold Mesh to convert to glTF.\n * @param id2properties A map from originalID to Properties that include the\n *     glTF Material and the set of attributes to output. All triangle runs with\n *     the same originalID will be combined into a single output primitive. Any\n *     originalIDs not found in the map will have the glTF default material and\n *     no attributes beyond 'POSITION'. Each attributes array must correspond to\n *     the manifoldMesh vertProperties, thus the first attribute must always be\n *     'POSITION'. Any properties that should not be output for a given\n *     primitive must use the 'SKIP_*' attributes.\n * @returns The glTF Mesh to add to the Document.\n */\nexport function writeMesh(doc, manifoldMesh, id2properties) {\n    if (doc.getRoot().listBuffers().length === 0) {\n        doc.createBuffer();\n    }\n    const buffer = doc.getRoot().listBuffers()[0];\n    const manifoldExtension = doc.createExtension(EXTManifold);\n    const mesh = doc.createMesh();\n    const runIndex = Array();\n    const attributeUnion = Array();\n    const primitive2attributes = new Map();\n    const numRun = manifoldMesh.runIndex.length - 1;\n    let lastID = -1;\n    for (let run = 0; run < numRun; ++run) {\n        const id = manifoldMesh.runOriginalID[run];\n        if (id == lastID) {\n            continue;\n        }\n        lastID = id;\n        runIndex.push(manifoldMesh.runIndex[run]);\n        const indices = doc.createAccessor('primitive indices of ID ' + id)\n            .setBuffer(buffer)\n            .setType(Accessor.Type.SCALAR)\n            .setArray(new Uint32Array(1));\n        const primitive = doc.createPrimitive().setIndices(indices);\n        const properties = id2properties.get(id);\n        if (properties) {\n            const { material, attributes } = properties;\n            if (attributes.length < 1 || attributes[0] !== 'POSITION')\n                throw new Error('First attribute must be \"POSITION\".');\n            primitive.setMaterial(material);\n            primitive2attributes.set(primitive, attributes);\n            properties.attributes.forEach((attribute, i) => {\n                if (i >= attributeUnion.length) {\n                    attributeUnion.push(attribute);\n                }\n                else {\n                    const size = attributeDefs[attribute].components;\n                    const unionSize = attributeDefs[attributeUnion[i]].components;\n                    if (size != unionSize) {\n                        throw new Error('Attribute sizes do not correspond: ' + attribute + ' and ' +\n                            attributeUnion[i]);\n                    }\n                    if (attributeDefs[attributeUnion[i]].type == null) {\n                        attributeUnion[i] = attribute;\n                    }\n                }\n            });\n        }\n        else {\n            primitive2attributes.set(primitive, ['POSITION']);\n        }\n        mesh.addPrimitive(primitive);\n    }\n    runIndex.push(manifoldMesh.runIndex[numRun]);\n    const numVert = manifoldMesh.numVert;\n    const numProp = manifoldMesh.numProp;\n    let offset = 0;\n    attributeUnion.forEach((attribute, aIdx) => {\n        const def = attributeDefs[attribute];\n        if (def == null)\n            throw new Error(attribute + ' is not a recognized attribute.');\n        if (def.type == null) {\n            ++offset;\n            return;\n        }\n        const n = def.components;\n        if (offset + n > numProp)\n            throw new Error('Too many attribute channels.');\n        const array = new Float32Array(n * numVert);\n        for (let v = 0; v < numVert; ++v) {\n            for (let i = 0; i < n; ++i) {\n                let x = manifoldMesh.vertProperties[numProp * v + offset + i];\n                if (attribute == 'COLOR_0') {\n                    x = Math.max(0, Math.min(1, x));\n                }\n                array[n * v + i] = x;\n            }\n        }\n        const accessor = doc.createAccessor(attribute)\n            .setBuffer(buffer)\n            .setType(def.type)\n            .setArray(array);\n        for (const primitive of mesh.listPrimitives()) {\n            const attributes = primitive2attributes.get(primitive);\n            if (attributes.length > aIdx &&\n                attributeDefs[attributes[aIdx]].type != null) {\n                primitive.setAttribute(attribute, accessor);\n            }\n        }\n        offset += n;\n    });\n    const manifoldPrimitive = manifoldExtension.createManifoldPrimitive();\n    mesh.setExtension('EXT_mesh_manifold', manifoldPrimitive);\n    const indices = doc.createAccessor('manifold indices')\n        .setBuffer(buffer)\n        .setType(Accessor.Type.SCALAR)\n        .setArray(manifoldMesh.triVerts);\n    manifoldPrimitive.setIndices(indices);\n    manifoldPrimitive.setRunIndex(runIndex);\n    const vert2merge = [...Array(manifoldMesh.numVert).keys()];\n    const ind = Array();\n    const val = Array();\n    if (manifoldMesh.mergeFromVert && manifoldMesh.mergeToVert) {\n        for (const [i, from] of manifoldMesh.mergeFromVert.entries()) {\n            vert2merge[from] = manifoldMesh.mergeToVert[i];\n        }\n        for (const [i, vert] of manifoldMesh.triVerts.entries()) {\n            const newVert = vert2merge[vert];\n            if (vert !== newVert) {\n                ind.push(i);\n                val.push(newVert);\n            }\n        }\n    }\n    if (ind.length > 0) {\n        const indicesAccessor = doc.createAccessor('merge from')\n            .setBuffer(buffer)\n            .setType(Accessor.Type.SCALAR)\n            .setArray(new Uint32Array(ind));\n        const valuesAccessor = doc.createAccessor('merge to')\n            .setBuffer(buffer)\n            .setType(Accessor.Type.SCALAR)\n            .setArray(new Uint32Array(val));\n        manifoldPrimitive.setMerge(indicesAccessor, valuesAccessor);\n    }\n    return mesh;\n}\n/**\n * Helper function to dispose of a Mesh, useful when replacing an existing Mesh\n * with one from writeMesh.\n */\nexport function disposeMesh(mesh) {\n    if (!mesh)\n        return;\n    const primitives = mesh.listPrimitives();\n    for (const primitive of primitives) {\n        primitive.getIndices()?.dispose();\n        for (const accessor of primitive.listAttributes()) {\n            accessor.dispose();\n        }\n    }\n    const manifoldPrimitive = mesh.getExtension('EXT_mesh_manifold');\n    if (manifoldPrimitive) {\n        manifoldPrimitive.getIndices()?.dispose();\n        manifoldPrimitive.getMergeIndices()?.dispose();\n        manifoldPrimitive.getMergeValues()?.dispose();\n    }\n    mesh.dispose();\n}\n/**\n * Helper function to download an image and apply it to the given texture.\n *\n * @param texture The texture to update\n * @param uri The location of the image to download\n */\nexport async function loadTexture(texture, uri) {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n    texture.setMimeType(blob.type);\n    texture.setImage(new Uint8Array(await blob.arrayBuffer()));\n}\nfunction writeProperties(vertProperties, accessor, numProp, offset) {\n    const array = accessor.getArray();\n    const size = accessor.getElementSize();\n    const numVert = accessor.getCount();\n    for (let i = 0; i < numVert; ++i) {\n        for (let j = 0; j < size; ++j) {\n            vertProperties[numProp * i + offset + j] = array[i * size + j];\n        }\n    }\n}\nfunction readPrimitive(primitive, numProp, attributes) {\n    const vertProperties = [];\n    let offset = 0;\n    for (const attribute of attributes) {\n        const size = attributeDefs[attribute].components;\n        if (attributeDefs[attribute].type == null) {\n            offset += size;\n            continue;\n        }\n        const accessor = primitive.getAttribute(attribute);\n        if (accessor) {\n            writeProperties(vertProperties, accessor, numProp, offset);\n        }\n        offset += size;\n    }\n    return vertProperties;\n}\n//# sourceMappingURL=gltf-io.js.map","// Copyright 2022-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// NOTE: This file is undergoing active refactoring, as of August 2025.\n// Interfaces and semantics may change.  Beware of wild geese.\nimport { Accessor, Document, Material, WebIO } from '@gltf-transform/core';\nimport { KHRMaterialsUnlit, KHRONOS_EXTENSIONS } from '@gltf-transform/extensions';\nimport { fileForContentTypes, FileForRelThumbnail, to3dmodel } from '@jscadui/3mf-export';\nimport { strToU8, zipSync } from 'fflate';\nimport { quat } from 'gl-matrix';\nimport { setupIO, writeMesh } from \"./gltf-io.js\";\n// Debug setup to show source meshes\nlet ghost = false;\nconst shown = new Map();\nconst singles = new Map();\nconst FPS = 30;\nconst GLOBAL_DEFAULTS = {\n    roughness: 0.2,\n    metallic: 1,\n    baseColorFactor: [1, 1, 0],\n    alpha: 1,\n    unlit: false,\n    animationLength: 1,\n    animationMode: 'loop'\n};\nconst SHOW = {\n    baseColorFactor: [1, 0, 0],\n    alpha: 0.25,\n    roughness: 1,\n    metallic: 0\n};\nconst GHOST = {\n    baseColorFactor: [0.5, 0.5, 0.5],\n    alpha: 0.25,\n    roughness: 1,\n    metallic: 0\n};\nconst globalDefaults = { ...GLOBAL_DEFAULTS };\nconst io = setupIO(new WebIO());\nio.registerExtensions(KHRONOS_EXTENSIONS);\nconst nodes = new Array();\nconst id2material = new Map();\nconst materialCache = new Map();\nconst object2globalID = new Map();\nconst manifold2morph = new Map();\n// lib3mf doesn't like objectid=0\nlet nextGlobalID = 1;\nlet animation;\nlet timesAccessor;\nlet weightsAccessor;\nlet weightsSampler;\nlet hasAnimation;\nexport function cleanup() {\n    nodes.length = 0;\n    id2material.clear();\n    materialCache.clear();\n    object2globalID.clear();\n    manifold2morph.clear();\n    nextGlobalID = 1;\n}\nexport class GLTFNode {\n    _parent;\n    manifold;\n    translation;\n    rotation;\n    scale;\n    material;\n    name;\n    constructor(parent) {\n        this._parent = parent;\n        nodes.push(this);\n    }\n    clone(parent) {\n        const copy = { ...this };\n        copy._parent = parent;\n        nodes.push(copy);\n        return copy;\n    }\n    get parent() {\n        return this._parent;\n    }\n}\n// Swallow informational logs in testing framework\nfunction log(...args) {\n    if (typeof self !== 'undefined' && self.console) {\n        self.console.log(...args);\n    }\n}\nexport const setMaterial = (manifold, material) => {\n    const out = manifold.asOriginal();\n    id2material.set(out.originalID(), material);\n    return out;\n};\nexport const setMorphStart = (manifold, func) => {\n    const morph = manifold2morph.get(manifold);\n    if (morph != null) {\n        morph.start = func;\n    }\n    else {\n        manifold2morph.set(manifold, { start: func });\n    }\n};\nexport const setMorphEnd = (manifold, func) => {\n    const morph = manifold2morph.get(manifold);\n    if (morph != null) {\n        morph.end = func;\n    }\n    else {\n        manifold2morph.set(manifold, { end: func });\n    }\n};\nexport const debug = (manifold, map) => {\n    let result = manifold.asOriginal();\n    map.set(result.originalID(), result.getMesh());\n    return result;\n};\nexport const show = (manifold) => {\n    return debug(manifold, shown);\n};\nexport const only = (manifold) => {\n    ghost = true;\n    return debug(manifold, singles);\n};\nfunction euler2quat(rotation) {\n    const deg2rad = Math.PI / 180;\n    const q = quat.create();\n    quat.rotateZ(q, q, deg2rad * rotation[2]);\n    quat.rotateY(q, q, deg2rad * rotation[1]);\n    quat.rotateX(q, q, deg2rad * rotation[0]);\n    return q;\n}\nfunction addMotion(doc, type, node, out) {\n    const motion = node[type];\n    if (motion == null) {\n        return null;\n    }\n    if (typeof motion !== 'function') {\n        return motion;\n    }\n    const nFrames = timesAccessor.getCount();\n    const nEl = type == 'rotation' ? 4 : 3;\n    const frames = new Float32Array(nEl * nFrames);\n    for (let i = 0; i < nFrames; ++i) {\n        const x = i / (nFrames - 1);\n        const m = motion(globalDefaults.animationMode !== 'ping-pong' ?\n            x :\n            (1 - Math.cos(x * 2 * Math.PI)) / 2);\n        frames.set(nEl === 4 ? euler2quat(m) : m, nEl * i);\n    }\n    const framesAccessor = doc.createAccessor(node.name + ' ' + type + ' frames')\n        .setBuffer(doc.getRoot().listBuffers()[0])\n        .setArray(frames)\n        .setType(nEl === 4 ? Accessor.Type.VEC4 : Accessor.Type.VEC3);\n    const sampler = doc.createAnimationSampler()\n        .setInput(timesAccessor)\n        .setOutput(framesAccessor)\n        .setInterpolation('LINEAR');\n    const channel = doc.createAnimationChannel()\n        .setTargetPath(type)\n        .setTargetNode(out)\n        .setSampler(sampler);\n    animation.addSampler(sampler);\n    animation.addChannel(channel);\n    hasAnimation = true;\n    return motion(0);\n}\nfunction setMorph(doc, node, manifold) {\n    if (manifold2morph.has(manifold)) {\n        const channel = doc.createAnimationChannel()\n            .setTargetPath('weights')\n            .setTargetNode(node)\n            .setSampler(weightsSampler);\n        animation.addChannel(channel);\n        hasAnimation = true;\n    }\n}\nfunction morphStart(manifoldMesh, morph) {\n    const inputPositions = [];\n    if (morph == null) {\n        return inputPositions;\n    }\n    for (let i = 0; i < manifoldMesh.numVert; ++i) {\n        for (let j = 0; j < 3; ++j)\n            inputPositions[i * 3 + j] =\n                manifoldMesh.vertProperties[i * manifoldMesh.numProp + j];\n    }\n    if (morph.start) {\n        for (let i = 0; i < manifoldMesh.numVert; ++i) {\n            const vertProp = manifoldMesh.vertProperties;\n            const offset = i * manifoldMesh.numProp;\n            const pos = inputPositions.slice(offset, offset + 3);\n            morph.start(pos);\n            for (let j = 0; j < 3; ++j)\n                vertProp[offset + j] = pos[j];\n        }\n    }\n    return inputPositions;\n}\nfunction morphEnd(doc, manifoldMesh, mesh, inputPositions, morph) {\n    if (morph == null) {\n        return;\n    }\n    mesh.setWeights([0]);\n    mesh.listPrimitives().forEach((primitive, i) => {\n        if (morph.end) {\n            for (let i = 0; i < manifoldMesh.numVert; ++i) {\n                const pos = inputPositions.slice(3 * i, 3 * (i + 1));\n                morph.end(pos);\n                inputPositions.splice(3 * i, 3, ...pos);\n            }\n        }\n        const startPosition = primitive.getAttribute('POSITION').getArray();\n        const array = new Float32Array(startPosition.length);\n        const offset = manifoldMesh.runIndex[i];\n        for (let j = 0; j < array.length; ++j) {\n            array[j] = inputPositions[offset + j] - startPosition[j];\n        }\n        const morphAccessor = doc.createAccessor(mesh.getName() + ' morph target')\n            .setBuffer(doc.getRoot().listBuffers()[0])\n            .setArray(array)\n            .setType(Accessor.Type.VEC3);\n        const morphTarget = doc.createPrimitiveTarget().setAttribute('POSITION', morphAccessor);\n        primitive.addTarget(morphTarget);\n    });\n}\nfunction createGLTFnode(doc, node) {\n    const out = doc.createNode(node.name);\n    const pos = addMotion(doc, 'translation', node, out);\n    if (pos != null) {\n        out.setTranslation(pos);\n    }\n    const rot = addMotion(doc, 'rotation', node, out);\n    if (rot != null) {\n        out.setRotation(euler2quat(rot));\n    }\n    const scale = addMotion(doc, 'scale', node, out);\n    if (scale != null) {\n        out.setScale(scale);\n    }\n    return out;\n}\nfunction getBackupMaterial(node) {\n    if (node == null) {\n        return {};\n    }\n    if (node.material == null) {\n        node.material = getBackupMaterial(node.parent);\n    }\n    return node.material;\n}\nfunction makeDefaultedMaterial(doc, matIn = {}) {\n    const defaults = { ...globalDefaults };\n    Object.assign(defaults, matIn);\n    const { roughness, metallic, baseColorFactor, alpha, unlit } = defaults;\n    const material = doc.createMaterial(matIn.name ?? '');\n    if (unlit) {\n        const unlit = doc.createExtension(KHRMaterialsUnlit).createUnlit();\n        material.setExtension('KHR_materials_unlit', unlit);\n    }\n    if (alpha < 1) {\n        material.setAlphaMode(Material.AlphaMode.BLEND).setDoubleSided(true);\n    }\n    return material.setRoughnessFactor(roughness)\n        .setMetallicFactor(metallic)\n        .setBaseColorFactor([...baseColorFactor, alpha]);\n}\nfunction getCachedMaterial(doc, matDef) {\n    if (!materialCache.has(matDef)) {\n        materialCache.set(matDef, makeDefaultedMaterial(doc, matDef));\n    }\n    return materialCache.get(matDef);\n}\nfunction addMesh(doc, to3mf, node, manifold, backupMaterial = {}) {\n    const numTri = manifold.numTri();\n    if (numTri == 0) {\n        log('Empty manifold, skipping.');\n        return;\n    }\n    log(`Triangles: ${numTri.toLocaleString()}`);\n    const box = manifold.boundingBox();\n    const size = [0, 0, 0];\n    for (let i = 0; i < 3; i++) {\n        size[i] = Math.round((box.max[i] - box.min[i]) * 10) / 10;\n    }\n    log(`Bounding Box: X = ${size[0].toLocaleString()} mm, Y = ${size[1].toLocaleString()} mm, Z = ${size[2].toLocaleString()} mm`);\n    const volume = Math.round(manifold.volume() / 10);\n    log(`Genus: ${manifold.genus().toLocaleString()}, Volume: ${(volume / 100).toLocaleString()} cm^3`);\n    // From Z-up to Y-up (glTF)\n    const manifoldMesh = manifold.getMesh();\n    const id2properties = new Map();\n    for (const id of manifoldMesh.runOriginalID) {\n        const material = id2material.get(id) || backupMaterial;\n        id2properties.set(id, {\n            material: getCachedMaterial(doc, ghost ? GHOST : material),\n            attributes: ['POSITION', ...material.attributes ?? []]\n        });\n    }\n    const morph = manifold2morph.get(manifold);\n    const inputPositions = morphStart(manifoldMesh, morph);\n    const mesh = writeMesh(doc, manifoldMesh, id2properties);\n    mesh.setName(node.getName());\n    node.setMesh(mesh);\n    morphEnd(doc, manifoldMesh, mesh, inputPositions, morph);\n    const vertices = manifoldMesh.numProp === 3 ?\n        manifoldMesh.vertProperties :\n        new Float32Array(manifoldMesh.numVert * 3);\n    if (manifoldMesh.numProp > 3) {\n        for (let i = 0; i < manifoldMesh.numVert; ++i) {\n            for (let j = 0; j < 3; ++j)\n                vertices[i * 3 + j] =\n                    manifoldMesh.vertProperties[i * manifoldMesh.numProp + j];\n        }\n    }\n    object2globalID.set(manifold, nextGlobalID);\n    to3mf.meshes.push({ vertices, indices: manifoldMesh.triVerts, id: `${nextGlobalID++}` });\n    for (const [run, id] of manifoldMesh.runOriginalID.entries()) {\n        const show = shown.has(id);\n        const inMesh = show ? shown.get(id) : singles.get(id);\n        if (inMesh == null) {\n            continue;\n        }\n        id2properties.get(id).material = getCachedMaterial(doc, show ? SHOW : (id2material.get(id) || backupMaterial));\n        const debugNode = doc.createNode('debug')\n            .setMesh(writeMesh(doc, inMesh, id2properties))\n            .setMatrix(manifoldMesh.transform(run));\n        node.addChild(debugNode);\n    }\n}\nfunction cloneNode(toNode, fromNode) {\n    toNode.setMesh(fromNode.getMesh());\n    fromNode.listChildren().forEach((child) => {\n        const clone = child.clone();\n        toNode.addChild(clone);\n    });\n}\nfunction cloneNodeNewMaterial(doc, toNode, fromNode, backupMaterial, oldBackupMaterial) {\n    cloneNode(toNode, fromNode);\n    const mesh = doc.createMesh();\n    toNode.setMesh(mesh);\n    fromNode.getMesh().listPrimitives().forEach((primitive) => {\n        const newPrimitive = primitive.clone();\n        if (primitive.getMaterial() === oldBackupMaterial) {\n            newPrimitive.setMaterial(backupMaterial);\n        }\n        mesh.addPrimitive(newPrimitive);\n    });\n}\nfunction createNodeFromCache(doc, to3MF, nodeDef, manifold2node) {\n    const node = createGLTFnode(doc, nodeDef);\n    const { manifold } = nodeDef;\n    if (manifold != null) {\n        setMorph(doc, node, manifold);\n        const backupMaterial = getBackupMaterial(nodeDef);\n        const cachedNodes = manifold2node.get(manifold);\n        if (cachedNodes == null) {\n            addMesh(doc, to3MF, node, manifold, backupMaterial);\n            const cache = new Map();\n            cache.set(backupMaterial, node);\n            manifold2node.set(manifold, cache);\n        }\n        else {\n            const cachedNode = cachedNodes.get(backupMaterial);\n            if (cachedNode == null) {\n                const [oldBackupMaterial, oldNode] = cachedNodes.entries().next().value;\n                cloneNodeNewMaterial(doc, node, oldNode, getCachedMaterial(doc, backupMaterial), getCachedMaterial(doc, oldBackupMaterial));\n                cachedNodes.set(backupMaterial, node);\n            }\n            else {\n                cloneNode(node, cachedNode);\n            }\n        }\n    }\n    object2globalID.set(nodeDef, nextGlobalID);\n    to3MF.components.push({\n        id: `${nextGlobalID++}`,\n        name: nodeDef.name,\n        children: manifold == null ? [] : [{ objectID: `${object2globalID.get(manifold)}` }]\n    });\n    return node;\n}\nexport async function exportModels(defaults, manifold) {\n    const t0 = performance.now();\n    Object.assign(globalDefaults, GLOBAL_DEFAULTS);\n    Object.assign(globalDefaults, defaults);\n    const doc = new Document();\n    const halfRoot2 = Math.sqrt(2) / 2;\n    const mm2m = 1 / 1000;\n    const wrapper = doc.createNode('wrapper')\n        .setRotation([-halfRoot2, 0, 0, halfRoot2])\n        .setScale([mm2m, mm2m, mm2m]);\n    doc.createScene().addChild(wrapper);\n    animation = doc.createAnimation('');\n    hasAnimation = false;\n    const nFrames = Math.round(globalDefaults.animationLength * FPS) + 1;\n    const times = new Float32Array(nFrames);\n    const weights = new Float32Array(nFrames);\n    for (let i = 0; i < nFrames; ++i) {\n        const x = i / (nFrames - 1);\n        times[i] = x * globalDefaults.animationLength;\n        weights[i] = globalDefaults.animationMode !== 'ping-pong' ?\n            x :\n            (1 - Math.cos(x * 2 * Math.PI)) / 2;\n    }\n    timesAccessor = doc.createAccessor('animation times')\n        .setBuffer(doc.createBuffer())\n        .setArray(times)\n        .setType(Accessor.Type.SCALAR);\n    weightsAccessor = doc.createAccessor('animation weights')\n        .setBuffer(doc.getRoot().listBuffers()[0])\n        .setArray(weights)\n        .setType(Accessor.Type.SCALAR);\n    weightsSampler = doc.createAnimationSampler()\n        .setInput(timesAccessor)\n        .setOutput(weightsAccessor)\n        .setInterpolation('LINEAR');\n    animation.addSampler(weightsSampler);\n    const to3mf = {\n        meshes: [],\n        components: [],\n        items: [],\n        precision: 7,\n        header: {\n            unit: 'millimeter',\n            title: 'ManifoldCAD.org model',\n            description: 'ManifoldCAD.org model',\n            application: 'ManifoldCAD.org',\n        }\n    };\n    if (nodes.length > 0) {\n        const node2gltf = new Map();\n        const manifold2node = new Map();\n        let leafNodes = 0;\n        for (const nodeDef of nodes) {\n            node2gltf.set(nodeDef, createNodeFromCache(doc, to3mf, nodeDef, manifold2node));\n            if (nodeDef.manifold) {\n                ++leafNodes;\n            }\n        }\n        for (const nodeDef of nodes) {\n            const gltfNode = node2gltf.get(nodeDef);\n            const child = {\n                objectID: `${object2globalID.get(nodeDef)}`,\n                transform: gltfNode.getMatrix()\n            };\n            const { parent } = nodeDef;\n            if (parent == null) {\n                wrapper.addChild(gltfNode);\n                to3mf.items.push(child);\n            }\n            else {\n                node2gltf.get(parent).addChild(gltfNode);\n                const parent3mf = to3mf.components.find((comp) => comp.id == `${object2globalID.get(parent)}`);\n                parent3mf.children.push(child);\n            }\n        }\n        log('Total glTF nodes: ', nodes.length, ', Total mesh references: ', leafNodes);\n    }\n    else {\n        if (manifold == null) {\n            log('No output because \"result\" is undefined and no \"GLTFNode\"s were created.');\n            return;\n        }\n        const node = doc.createNode();\n        addMesh(doc, to3mf, node, manifold);\n        wrapper.addChild(node);\n        to3mf.items.push({ objectID: `${object2globalID.get(manifold)}` });\n    }\n    const t1 = performance.now();\n    console.log(`Manifold took ${(Math.round((t1 - t0) / 10) / 100).toLocaleString()} seconds`);\n    if (!hasAnimation) {\n        timesAccessor.dispose();\n        weightsAccessor.dispose();\n        weightsSampler.dispose();\n        animation.dispose();\n    }\n    const glb = await io.writeBinary(doc);\n    const glbBlob = new Blob([glb], { type: 'application/octet-stream' });\n    const fileForRelThumbnail = new FileForRelThumbnail();\n    fileForRelThumbnail.add3dModel('3D/3dmodel.model');\n    const model = to3dmodel(to3mf);\n    const files = {};\n    files['3D/3dmodel.model'] = strToU8(model);\n    files[fileForContentTypes.name] = strToU8(fileForContentTypes.content);\n    files[fileForRelThumbnail.name] = strToU8(fileForRelThumbnail.content);\n    const zipFile = zipSync(files);\n    const threeMFBlob = new Blob([zipFile], { type: 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml' });\n    const t2 = performance.now();\n    console.log(`Exporting GLB & 3MF took ${(Math.round((t2 - t1) / 10) / 100).toLocaleString()} seconds`);\n    return ({ glbBlob, threeMFBlob });\n}\n//# sourceMappingURL=export.js.map","// Copyright 2022-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport * as glMatrix from 'gl-matrix'\n\nimport {Evaluator} from '../lib/evaluate';\nimport * as exporter from '../lib/export';\nimport {GlobalDefaults} from '../lib/export';\n\n// Setup the evaluator and it's context.\nconst evaluator = new Evaluator();\nexport const module = evaluator.getModule();\n\n// Faster on modern browsers than Float32Array\nglMatrix.glMatrix.setMatrixArrayType(Array);\nevaluator.addContext({glMatrix})\n\n\n// These are exporter methods that generate Manifold\n// or CrossSection objects.  Tell the evaluator to intercept\n// the calls, and add any created objects to the clean up list.\nfor (const name of ['show', 'only', 'setMaterial']) {\n  evaluator.addContextMethodWithCleanup(name, (exporter as any)[name]);\n}\n\n// Add additional exporter context.  These need no garbage collection.\nevaluator.addContext({\n  GLTFNode: exporter.GLTFNode,\n  setMorphStart: exporter.setMorphStart,\n  setMorphEnd: exporter.setMorphEnd,\n});\n\n// Clean up the evaluator and exporter between runs.\nexport function cleanup() {\n  evaluator.cleanup();\n  exporter.cleanup();\n}\n\nexport async function evaluateCADToModel(code: string) {\n  // Global defaults can be populated by the script.  It's set per\n  // evaluation, while the rest of evaluator context doesn't change from\n  // run to run.\n  // This can be used to set parameters elsewhere in ManifoldCAD.  For\n  // example, the GLTF exporter will look for animation type and\n  // framerate.\n  const globalDefaults = {};\n\n  evaluator.context.globalDefaults = globalDefaults;\n  const manifold = evaluator.evaluate(code);\n\n  const exports =\n      await exporter.exportModels(globalDefaults as GlobalDefaults, manifold);\n\n  return ({\n    glbURL: URL.createObjectURL(exports?.glbBlob ?? new Blob([])),\n    threeMFURL: URL.createObjectURL(exports?.threeMFBlob ?? new Blob([]))\n  });\n}\n","// Copyright 2024 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {cleanup, evaluateCADToModel} from './worker';\n\n// Setup complete\nself.postMessage(null);\n\nif (self.console) {\n  const oldLog = self.console.log;\n  self.console.log = function(...args) {\n    let message = '';\n    for (const arg of args) {\n      if (arg == null) {\n        message += 'undefined';\n      } else if (typeof arg == 'object') {\n        message += JSON.stringify(arg, null, 4);\n      } else {\n        message += arg.toString();\n      }\n    }\n    self.postMessage({log: message});\n    oldLog(...args);\n  };\n}\n\nself.onmessage = async (e) => {\n  try {\n    const result = await evaluateCADToModel(e.data);\n    self.postMessage(result);\n  } catch (error: any) {\n    console.log(error.toString());\n    self.postMessage({objectURL: null});\n  } finally {\n    cleanup();\n  }\n};\n"],"names":["EPSILON","ARRAY_TYPE","RANDOM","ANGLE_ORDER","round","a","setMatrixArrayType","type","degree","radian","toRadian","toDegree","equals","b","tolerance","create","out","glMatrix.ARRAY_TYPE","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","scale","v","v0","v1","fromRotation","c","fromScaling","str","frob","LDU","L","D","U","add","subtract","exactEquals","glMatrix.EPSILON","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","y","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","b9","axis","len","t","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","decompose","out_r","out_t","out_s","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspectiveNO","fovy","aspect","f","perspective","perspectiveZO","perspectiveFromFieldOfView","fov","upTan","downTan","leftTan","rightTan","xScale","yScale","orthoNO","lr","bt","ortho","orthoZO","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b13","b14","b15","length","divide","ceil","floor","min","max","glMatrix.round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","slerp","angle","sinTotal","ratioA","ratioB","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","random","glMatrix.RANDOM","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","vx","vy","vz","tz","p","r","mag","cosine","zero","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","count","fn","arg","i","l","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","rand","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","pow","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","order","glMatrix.ANGLE_ORDER","halfToRad","cx","cy","cz","vec4.clone","vec4.fromValues","vec4.copy","vec4.set","vec4.add","vec4.scale","vec4.dot","vec4.lerp","vec4.length","vec4.squaredLength","vec4.normalize","vec4.exactEquals","rotationTo","tmpvec3","vec3.create","xUnitVec3","vec3.fromValues","yUnitVec3","vec3.dot","vec3.cross","vec3.len","vec3.normalize","sqlerp","temp1","temp2","setAxes","matr","mat3.create","view","dq","w1","w2","fromRotationTranslationValues","outer","quat.create","mat4.getRotation","mat4.getTranslation","getReal","quat.copy","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat.rotateX","quat.rotateY","quat.rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat.dot","mt","sqlen","quat.length","quat.squaredLength","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","signedAngle","Module","_scriptName","moduleArg","moduleRtn","readyPromiseResolve","readyPromiseReject","readyPromise","resolve","reject","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","createRequire","__viteBrowserExternal","require","_ManifoldInitialized","toVec","list","fromVec","result","size","vec2polygons","nPoly","nPts","poly","polygons2vec","polygons","disposePolygons","polygonsVec","vararg2vec2","vararg2vec3","fillRuleToInt","fillRule","joinTypeToInt","joinType","CrossSectionCtor","cs","func","wasmFuncPtr","addFunction","vec2Ptr","getValue","vert","setValue","removeFunction","delta","miterLimit","circularSegments","epsilon","nDivisions","twistDegrees","scaleTop","man","revolveDegrees","other","minSharpAngle","minSmoothness","vec3Ptr","status","normalIdx","numProp","oldNumProp","newPtr","oldPtr","newProp","pos","oldProp","xOrVec","normal","manifold","Mesh","triVerts","vertProperties","mergeFromVert","mergeToVert","runIndex","runOriginalID","faceID","halfedgeTangent","runTransform","changed","mesh","tri","halfedge","run","mat4","col","row","code","args","message","base","radius","crossSectionBatchbool","name","pushVec2","ps","pts","polys","ManifoldCtor","radiusLow","radiusHigh","sharpenedEdges","sharp","n","manifolds","manifoldBatchbool","sdf","bounds","edgeLength","level","bounds2","pushVec3","allowConvex","moduleOverrides","scriptDirectory","locateFile","path","readAsync","readBinary","fs","nodePath","filename","isFileURI","ret","binary","err","data","url","xhr","response","wasmBinary","wasmMemory","ABORT","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","abort","what","e","dataURIPrefix","isDataURI","findWasmBinary","wasmBinaryFile","getBinarySync","file","getBinaryPromise","binaryFile","instantiateArrayBuffer","imports","receiver","reason","instantiateAsync","getWasmImports","wasmImports","createWasm","info","receiveInstance","instance","module","wasmExports","applySignatureConversions","wasmTable","receiveInstantiationResult","callbacks","ptr","value","ExceptionInfo","excPtr","destructor","caught","rethrown","adjustedPtr","isPointer","___cxa_is_pointer_type","adjusted","exceptionLast","___cxa_throw","__abort_js","structRegistrations","runDestructors","destructors","del","readPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","__embind_finalize_value_object","structType","reg","rawConstructor","rawDestructor","fieldRecords","fieldTypes","field","fields","fieldName","getterReturnType","getter","getterContext","setterArgumentType","setter","setterContext","rv","GenericWireTypeSize","__embind_register_bigint","primitiveType","minRange","maxRange","embind_init_charCodes","codes","embind_charCodes","readLatin1String","BindingError","throwBindingError","sharedRegisterType","rawType","registeredInstance","options","__embind_register_bool","trueValue","falseValue","wt","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","finalizationRegistry","detachFinalizer","runDestructor","$$","releaseClassHandle","toDelete","downcastPointer","ptrClass","desiredClass","registeredPointers","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","deletionQueue","flushPendingDeletes","delayFunction","setDelayFunction","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","prototype","record","hasSmartPtrType","hasSmartPtr","attachFinalizer","RegisteredPointer_fromWireType","rawPointer","makeDefaultHandle","actualType","registeredPointerRecord","toType","dp","init_ClassHandle","ClassHandle","leftClass","rightClass","createNamedFunction","body","ensureOverloadTable","proto","methodName","humanName","prevFunc","exposePublicSymbol","numArguments","char_0","char_9","makeLegalFunctionName","RegisteredClass","constructor","instancePrototype","baseClass","getActualType","upcast","downcast","upcastPointer","constNoSmartPtrRawPointerToWireType","embindRepr","handleClass","genericPointerToWireType","clonedHandle","Emval","nonConstNoSmartPtrRawPointerToWireType","init_RegisteredPointer","RegisteredPointer","registeredClass","isReference","isConst","isSmartPointer","pointeeType","sharingPolicy","rawGetPointee","rawShare","replacePublicSymbol","dynCallLegacy","sig","getWasmTableEntry","funcPtr","dynCall","rtn","getDynCaller","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","extendError","baseErrorType","errorName","errorClass","stack","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","basePrototype","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","array","usesDestructorStack","argTypes","newFunc","argumentList","dummy","createJsInvoker","isClassMethodFunc","returns","isAsync","needsDestructorStack","argCount","argsList","argsListWired","invokerFnBody","dtorStack","args1","paramName","craftInvokerFunction","classType","cppInvokerFunc","cppTargetFunc","closureArgs","invokerFn","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","getFunctionName","argsIndex","__embind_register_class_function","rawInvoker","context","isPureVirtual","unboundTypesHandler","method","memberFunction","emval_freelist","emval_handles","__emval_decref","count_emval_handles","init_emval","EmValType","__embind_register_emval","enumReadValueFromPointer","signed","__embind_register_enum","isSigned","ctor","requireRegisteredType","impl","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","floatReadValueFromPointer","__embind_register_float","__embind_register_function","invokerArgsArray","integerReadValueFromPointer","__embind_register_integer","fromWireType","bitshift","isUnsignedType","checkAssertions","toTypeName","toWireType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_optional","rawOptionalType","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","stringToUTF8","outPtr","lengthBytesUTF8","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","u0","ch","UTF8ToString","__embind_register_std_string","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","valueIsOfTypeString","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","maxReadBytes","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","getterSignature","setterSignature","__embind_register_void","__emscripten_memcpy_js","dest","src","num","emval_returnValue","returnType","destructorsRef","__emval_as","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","__emval_call_method","caller","objHandle","__emval_equals","first","second","emval_addMethodCaller","emval_lookupTypes","__emval_get_method_caller","kind","retType","functionBody","params","invokerFunction","functionName","__emval_get_property","key","__emval_incref","__emval_new_cstring","__emval_new_object","__emval_run_destructors","__emval_set_property","__emval_take_value","getHeapMax","growMemory","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","newSize","replacement","uleb128Encode","sigToWasmTypes","typeNames","generateFuncType","sigRet","sigParam","typeCodes","convertJsFunctionToWasm","typeSectionBody","bytes","wrappedFunc","updateTableMap","functionsInTableMap","item","getFunctionAddress","freeTableIndexes","getEmptyTableSlot","setWasmTableEntry","wrapped","index","makeWrapper_pp","makeWrapper_p","calledRun","runCaller","doRun","manifoldwasm","manifoldStaticFunctions","manifoldMemberFunctions","crossSectionStaticFunctions","crossSectionMemberFunctions","toplevel","Evaluator","className","methodNames","areStatic","cls","originalFn","moreContext","elem","exposedFunctions","EventDispatcher","listener","listeners","listenerArray","event","GraphEdge","_name","_parent","_child","_attributes","child","Graph","node","parentSet","edge","childSet","filter","attributes","parent","_extends","source","RefList","refs","ref","RefSet","RefMap","map","$attributes","$immutableKeys","GraphNode","graph","defaultAttributes","prevValue","nextValue","attribute","refAttributes","prevRef","metadata","refMap","VERSION","GLB_BUFFER","PropertyType","VertexLayout","BufferViewUsage$1","BufferViewUsage","TextureChannel","Format","ComponentTypeToTypedArray","BufferUtils","dataURI","byteString","ia","isBase64","text","arrays","totalByteLength","byteOffset","srcArray","paddingByte","paddedLength","dstArray","byteLength","JPEGImageUtils","next","validateJPEGBuffer","_buffer","PNGImageUtils","ImageUtils","mimeType","buffer","uncompressedBytes","channels","resolution","extension","FileUtils","uri","fileName","getBounds","resultBounds","createBounds","parents","meshBounds","getMeshBounds","expandBounds","worldMatrix","prim","position","indices","localPos","worldPos","il","point","NULL_DOMAIN","HTTPUtils","parts","isObject","isPlainObject","prot","_Logger","Verbosity","Logger","verbosity","MathUtils","componentType","srcMat","dstTranslation","dstRotation","dstScale","_m1","invSX","invSY","invSZ","srcTranslation","srcRotation","srcScale","dstMat","te","equalsRef","refA","refB","equalsRefSet","refSetA","refSetB","refValuesA","refValuesB","equalsRefMap","refMapA","refMapB","keysA","keysB","equalsArray","equalsObject","_a","_b","numKeysA","numKeysB","valueA","valueB","isArray","ALPHABET","UNIQUE_RETRIES","ID_LENGTH","previousIDs","generateOne","uuid","retries","COPY_IDENTITY","EMPTY_SET","Property","extras","PropertyClass","thisValue","otherValue","subkey","skip","ExtensibleProperty","extensionProperty","Accessor","normalized","elementSize","sparse","arrayToComponentType","Animation","channel","sampler","AnimationChannel","targetPath","targetNode","AnimationSampler","interpolation","input","output","Buffer$1","Camera","znear","zfar","aspectRatio","yfov","xmag","ymag","ExtensionProperty","TextureInfo","texCoord","magFilter","minFilter","wrapS","wrapT","R","Material","doubleSided","alpha","baseColorFactor","alphaMode","alphaCutoff","texture","emissiveFactor","strength","factor","primitive","weights","Node","rotation","matrix","ancestors","ancestor","parentNode","camera","skin","Primitive","semantic","accessor","material","mode","PrimitiveTarget","Scene","Skin","skeleton","inverseBindMatrices","joint","Texture","image","Root","extensionName","otherExtension","defaultScene","Document","logger","_other","transforms","transform","ext","Extension","document","_event","property","required","_key","_dependency","_readerContext","_propertyType","_writerContext","ReaderContext","jsonDoc","textureInfo","textureInfoDef","textureDef","samplerDef","DEFAULT_OPTIONS","SUPPORTED_PREREAD_TYPES","GLTFReader","_options","json","assetDef","asset","extensionsUsed","extensionsRequired","unsupportedHooks","bufferDefs","bufferDef","bufferViewDefs","bufferViewDef","resource","accessorDefs","accessorDef","getAccessorArray","imageDefs","textureDefs","imageDef","bufferData","imageData","materialDefs","materialDef","pbrDef","meshDefs","meshDef","primitiveDef","targetNames","targetDef","targetIndex","targetName","accessorIndex","cameraDefs","cameraDef","perspectiveDef","orthoDef","nodeDefs","nodeDef","skinDefs","skinDef","nodeIndex","childIndex","animationDefs","animationDef","animation","samplers","channelDef","sceneDefs","sceneDef","scene","hasSparseValues","isZeroFilled","getSparseArray","getInterleavedArray","bufferView","TypedArray","componentSize","accessorByteOffset","byteStride","elementStride","sparseDef","indicesDef","valuesDef","values","BufferViewTarget","WriterContext","_doc","root","numBuffers","numImages","UniqueURIGenerator","getSlot","samplerKey","textureKey","def","throwOnConflict","resources","conflictMessage","cachedUsage","usage","prevUsage","basename","object","UNSIGNED_INT","UNSIGNED_SHORT","UNSIGNED_BYTE","SUPPORTED_PREWRITE_TYPES","GLTFWriter","doc","extensionsRegistered","concatAccessors","accessors","bufferIndex","bufferByteOffset","bufferViewTarget","buffers","accessorArray","bufferViewData","interleaveAccessors","vertexCount","vertexByteOffset","viewByteOffset","concatSparseAccessors","sparseData","maxIndex","needSparseWarning","el","ValueArray","IndexArray","IndexComponentType","indicesBufferViewDef","indicesBufferViewIndex","valuesBufferViewDef","valuesBufferViewIndex","textureIndex","groupByParent","accessorParents","uniqueParents","parentToIndex","accessorGroups","bufferByteLength","groupAccessors","_buffer2","_buffer3","_buffer4","_buffer5","imagePadding","samplerIndexMap","samplerIndex","clean","unused","ChunkType","PlatformIO","extensions","dependencies","layout","isGLB","glb","isExternalBuffer","isExternalImage","header","jsonText","jsonChunkData","jsonChunkHeader","jsonChunk","binBuffer","binChunkData","binChunkHeader","binChunk","_this","images","pendingResources","resolveResource","resourceUUID","jsonByteOffset","jsonByteLength","binByteOffset","binByteLength","jsonDocument","WebIO","fetchConfig","KHR_SUPERCOMPRESSION_NONE","KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT","KHR_DF_VENDORID_KHRONOS","KHR_DF_VERSION","KHR_DF_MODEL_UNSPECIFIED","KHR_DF_MODEL_ETC1S","KHR_DF_MODEL_UASTC","KHR_DF_FLAG_ALPHA_STRAIGHT","KHR_DF_TRANSFER_SRGB","KHR_DF_PRIMARIES_BT709","KHR_DF_SAMPLE_DATATYPE_SIGNED","VK_FORMAT_UNDEFINED","createDefaultContainer","BufferReader","littleEndian","maxByteLength","term","KTX2_ID","decodeText","read","container","headerByteLength","headerReader","dfdByteOffset","dfdByteLength","kvdByteOffset","kvdByteLength","sgdByteOffset","sgdByteLength","levelByteLength","levelReader","dfdReader","vendorId","descriptorType","versionNumber","descriptorBlockSize","colorModel","colorPrimaries","transferFunction","flags","texelBlockDimension","bytesPlane","dfd","numSamples","sample","kvdReader","keyValueByteLength","keyData","kvPadding","sgdReader","endpointCount","selectorCount","endpointsByteLength","selectorsByteLength","tablesByteLength","extendedByteLength","imageDescs","endpointsByteOffset","selectorsByteOffset","tablesByteOffset","extendedByteOffset","endpointsData","selectorsData","tablesData","extendedData","EXT_MESH_GPU_INSTANCING","EXT_MESHOPT_COMPRESSION","EXT_TEXTURE_WEBP","EXT_TEXTURE_AVIF","KHR_DRACO_MESH_COMPRESSION","KHR_LIGHTS_PUNCTUAL","KHR_MATERIALS_ANISOTROPY","KHR_MATERIALS_CLEARCOAT","KHR_MATERIALS_DIFFUSE_TRANSMISSION","KHR_MATERIALS_DISPERSION","KHR_MATERIALS_EMISSIVE_STRENGTH","KHR_MATERIALS_IOR","KHR_MATERIALS_IRIDESCENCE","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","KHR_MATERIALS_SHEEN","KHR_MATERIALS_SPECULAR","KHR_MATERIALS_TRANSMISSION","KHR_MATERIALS_UNLIT","KHR_MATERIALS_VOLUME","KHR_MATERIALS_VARIANTS","KHR_MESH_QUANTIZATION","KHR_TEXTURE_BASISU","KHR_TEXTURE_TRANSFORM","KHR_XMP_JSON_LD","INSTANCE_ATTRIBUTE","InstancedMesh","EXTMeshGPUInstancing","instancedMeshDef","instancedMesh","prop","EncoderMethod$1","EncoderMethod","MeshoptMode","MeshoptFilter","isFallbackBuffer","BYTE","SHORT","FLOAT","encodeNormalizedInt","decodeNormalizedInt","prepareAccessor","encoder","filterOptions","bits","decodeNormalizedIntArray","padNormals","padArrayElements","elementCount","getMeshoptMode","getMeshoptFilter","refName","refKey","isDelta","getTargetPath","DEFAULT_ENCODER_OPTIONS$1","EXTMeshoptCompression","dependency","propertyType","viewDef","meshoptDef","fallbackBuffer","fallbackBufferDef","_context","fallbackBufferIndex","nextID","parentToID","getParentID","parentID","preparedAccessor","bufferViewAccessors","otherBufferViews","compressedData","fallbackBufferByteOffset","bufferViewIndex","finalBufferViewDef","compressedByteOffset","bufferViewExtensionDef","AVIFImageUtils","box","unbox","EXTTextureAVIF","imageIndex","WEBPImageUtils","RIFF","WEBP","chunkId","chunkByteLength","EXTTextureWebP","decoderModule","COMPONENT_ARRAY","DATA_TYPE","decodeGeometry","decoder","dracoMesh","decodeIndex","numIndices","decodeAttribute","dataType","ArrayCtor","numComponents","numValues","initDecoderModule","_decoderModule","encoderModule","AttributeEnum","DEFAULT_QUANTIZATION_BITS","DEFAULT_ENCODER_OPTIONS","initEncoderModule","_encoderModule","encodeGeometry","builder","attributeIDs","dracoBuffer","hasMorphTargets","hasSparseAttributes","attributeEnum","getAttributeEnum","attributeID","addAttribute","quantizationVolume","range","EncodingError","numVertices","itemSize","KHRDracoMeshCompression","dracoMeshes","primDef","dracoDef","dracoAttribute","attributeArray","primitiveHashMap","listDracoPrimitives","primitiveEncodingMap","primHash","encodedPrim","attributeDef","dracoContext","included","excluded","nonIndexed","nonTriangles","accessorIndices","includedAccessors","includedHashKeys","primToHashKey","hashKey","createHashKey","dstIndices","dstAttribute","parentTypes","attr","indexMap","hashElements","Light","color","intensity","KHRLightsPunctual","lights","lightDef","_lightDef$spot","_lightDef$spot2","light","lightNodeDef","lightDefs","lightIndexMap","R$7","G$7","B$5","Anisotropy","KHRMaterialsAnisotropy","materialIndex","anisotropy","anisotropyDef","R$6","G$6","B$4","Clearcoat","KHRMaterialsClearcoat","clearcoat","clearcoatDef","R$5","G$5","B$3","A$3","DiffuseTransmission","KHRMaterialsDiffuseTransmission","transmission","transmissionDef","Dispersion","dispersion","KHRMaterialsDispersion","dispersionDef","EmissiveStrength","KHRMaterialsEmissiveStrength","emissiveStrength","emissiveStrengthDef","IOR","ior","KHRMaterialsIOR","iorDef","R$4","G$4","Iridescence","thickness","KHRMaterialsIridescence","iridescence","iridescenceDef","R$3","G$3","B$2","A$2","PBRSpecularGlossiness","KHRMaterialsPBRSpecularGlossiness","specGloss","specGlossDef","R$2","G$2","B$1","A$1","Sheen","KHRMaterialsSheen","sheen","sheenDef","R$1","G$1","Specular","KHRMaterialsSpecular","specular","specularDef","Transmission","KHRMaterialsTransmission","Unlit","KHRMaterialsUnlit","Mapping","variant","MappingList","mapping","Variant","KHRMaterialsVariants","variants","variantDef","meshIndex","primIndex","mappingList","variantPrimDef","mappingDef","variantIndex","variantDefs","variantIndexMap","mappingDefs","Volume","KHRMaterialsVolume","volume","volumeDef","KHRMeshQuantization","_","KTX2ImageUtils","hasAlpha","levelWidth","levelHeight","blockSize","KHRTextureBasisu","basisuDef","Transform","KHRTextureTransform","transformDef","textureInfoEntries","eq","PARENT_TYPES","Packet","properties","copyJSON","jsonld","KHRXMP","_context$jsonDoc$json","extensionDef","packets","packetDef","defLists","propertyLists","defs","xmpDef","packetDefs","packet","parentDef","KHRONOS_EXTENSIONS","defMatrix","matrix2str","makeItem","toDate3mf","pushHeader","unit","title","author","description","application","creationDate","license","modificationDate","pushObjectWithComponents","children","objectID","addComp","pushObjectWithMesh","vertices","precision","fileForContentTypes","to3dmodel","meshes","components","items","FileForRelThumbnail","xmlType","u8","u16","i32","fleb","fdeb","clim","freb","eb","start","fl","revfl","revfd","rev","hMap","cd","mb","le","co","rvb","sv","r_1","flt","fdt","flm","fdm","shft","slc","ec","ind","msg","nt","wbits","wbits16","hTree","t2","i0","i1","i2","maxSym","tr","mbt","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","clen","cf","wfblk","dat","wblk","final","syms","lf","df","li","bs","bl","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","flen","ftlen","dtlen","lm","ll","dm","dl","llm","lcts","it","clct","sym","dst","deo","dflt","lvl","plvl","pre","post","st","lst","opt","msk_1","prev","head","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","maxd","ml","nl","mmd","md","ti","pti","lin","din","crct","crc","cr","dopt","dict","newDat","mrg","wbytes","deflateSync","opts","fltn","val","op","td","tds","strToU8","latin1","ar","ai","exfl","ex","wzh","ce","exl","exf","wzf","zipSync","files","tot","compression","com","ms","oe","cdl","badd","NAME","MERGE","ManifoldPrimitive","indicesAccessor","valuesAccessor","EXTManifold","manifoldPrimitive","manifoldDef","mergeFrom","mergeTo","numPrimitive","mergeIndicesIndex","mergeValuesIndex","mergeIndices","mergeValues","existingPrimitive","attributeDefs","setupIO","io","writeMesh","manifoldMesh","id2properties","manifoldExtension","attributeUnion","primitive2attributes","numRun","lastID","unionSize","numVert","aIdx","vert2merge","from","newVert","ghost","shown","singles","FPS","GLOBAL_DEFAULTS","SHOW","GHOST","globalDefaults","nodes","id2material","materialCache","object2globalID","manifold2morph","nextGlobalID","timesAccessor","weightsAccessor","weightsSampler","hasAnimation","cleanup","GLTFNode","log","setMaterial","setMorphStart","morph","setMorphEnd","debug","show","only","euler2quat","deg2rad","addMotion","motion","nFrames","nEl","frames","framesAccessor","setMorph","morphStart","inputPositions","vertProp","morphEnd","startPosition","morphAccessor","morphTarget","createGLTFnode","rot","getBackupMaterial","makeDefaultedMaterial","matIn","defaults","roughness","metallic","unlit","getCachedMaterial","matDef","addMesh","to3mf","backupMaterial","numTri","inMesh","debugNode","cloneNode","toNode","fromNode","cloneNodeNewMaterial","oldBackupMaterial","newPrimitive","createNodeFromCache","to3MF","manifold2node","cachedNodes","cache","cachedNode","oldNode","exportModels","t0","halfRoot2","mm2m","wrapper","times","node2gltf","leafNodes","gltfNode","comp","t1","glbBlob","fileForRelThumbnail","model","zipFile","threeMFBlob","evaluator","glMatrix.glMatrix.setMatrixArrayType","glMatrix","exporter","exporter.GLTFNode","exporter.setMorphStart","exporter.setMorphEnd","exporter.cleanup","evaluateCADToModel","exports","exporter.exportModels","oldLog","error"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}